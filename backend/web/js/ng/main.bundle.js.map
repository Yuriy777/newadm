{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.resolver.ts","./src/app/authentication/auth.module.ts","./src/app/authentication/auth.route.ts","./src/app/authentication/login/login.component.html","./src/app/authentication/login/login.component.ts","./src/app/authentication/login/login.resolver.ts","./src/app/authentication/login/login.style.css","./src/app/authentication/services/auth.service.ts","./src/app/category/category.module.ts","./src/app/category/category.routing.ts","./src/app/category/create/create.component.css","./src/app/category/create/create.component.html","./src/app/category/create/create.component.ts","./src/app/category/create/create.resolver.ts","./src/app/category/list/list.component.css","./src/app/category/list/list.component.html","./src/app/category/list/list.component.ts","./src/app/category/list/list.resolver.ts","./src/app/category/service/category.service.ts","./src/app/category/update/update.component.html","./src/app/category/update/update.component.ts","./src/app/category/update/update.resolver.ts","./src/app/company/company.module.ts","./src/app/company/company.routing.ts","./src/app/company/create/company-create.component.css","./src/app/company/create/company-create.component.html","./src/app/company/create/company-create.component.ts","./src/app/company/list/company-get.component.css","./src/app/company/list/company-get.component.html","./src/app/company/list/company-get.component.ts","./src/app/company/list/list.resolver.ts","./src/app/company/models/company.ts","./src/app/company/services/company.service.ts","./src/app/company/update/company-update.component.css","./src/app/company/update/company-update.component.html","./src/app/company/update/company-update.component.ts","./src/app/company/update/update.resolver.ts","./src/app/core/core.module.ts","./src/app/core/navigation/navigation.component.html","./src/app/core/navigation/navigation.component.ts","./src/app/core/no-content/no-content.component.ts","./src/app/core/no-content/no-content.html","./src/app/core/root.component.ts","./src/app/core/unauthorized/unauthorized.component.html","./src/app/core/unauthorized/unauthorized.component.ts","./src/app/core/view.component.ts","./src/app/coupon/coupon.module.ts","./src/app/coupon/coupon.routing.ts","./src/app/coupon/create/create.component.css","./src/app/coupon/create/create.component.html","./src/app/coupon/create/create.component.ts","./src/app/coupon/list/list.component.css","./src/app/coupon/list/list.component.html","./src/app/coupon/list/list.component.ts","./src/app/coupon/list/list.resolver.ts","./src/app/coupon/services/coupon.service.ts","./src/app/coupon/update/update.component.html","./src/app/coupon/update/update.component.ts","./src/app/coupon/update/update.resolver.ts","./src/app/dictionary/dictionary.module.ts","./src/app/dictionary/dictionary.routing.ts","./src/app/dictionary/list/list.component.css","./src/app/dictionary/list/list.component.html","./src/app/dictionary/list/list.component.ts","./src/app/dictionary/list/list.resolver.ts","./src/app/dictionary/services/dictionary.service.ts","./src/app/dictionary/update/update.component.css","./src/app/dictionary/update/update.component.html","./src/app/dictionary/update/update.component.ts","./src/app/dictionary/update/update.resolver.ts","./src/app/files/services/file.service.ts","./src/app/ingredient/create/create.component.css","./src/app/ingredient/create/create.component.html","./src/app/ingredient/create/create.component.ts","./src/app/ingredient/create/create.resolver.ts","./src/app/ingredient/ingredient.module.ts","./src/app/ingredient/ingredient.routing.ts","./src/app/ingredient/list/list.component.css","./src/app/ingredient/list/list.component.html","./src/app/ingredient/list/list.component.ts","./src/app/ingredient/list/list.resolver.ts","./src/app/ingredient/service/ingredient.service.ts","./src/app/ingredient/update/update.component.html","./src/app/ingredient/update/update.component.ts","./src/app/ingredient/update/update.resolver.ts","./src/app/recipe/create/create.component.css","./src/app/recipe/create/create.component.html","./src/app/recipe/create/create.component.ts","./src/app/recipe/create/create.resolver.ts","./src/app/recipe/list/list.component.css","./src/app/recipe/list/list.component.html","./src/app/recipe/list/list.component.ts","./src/app/recipe/list/list.resolver.ts","./src/app/recipe/recipe.module.ts","./src/app/recipe/recipe.routing.ts","./src/app/recipe/service/recipe.service.ts","./src/app/recipe/update/update.component.html","./src/app/recipe/update/update.component.ts","./src/app/recipe/update/update.resolver.ts","./src/app/shared/error-handler.service.ts","./src/app/shared/list-request.service.ts","./src/app/shared/material.module.ts","./src/app/shared/shared.module.ts","./src/app/shared/title.service.ts","./src/app/shared/toastr.service.ts","./src/app/unit/create/create.component.css","./src/app/unit/create/create.component.html","./src/app/unit/create/create.component.ts","./src/app/unit/create/create.resolver.ts","./src/app/unit/list/list.component.css","./src/app/unit/list/list.component.html","./src/app/unit/list/list.component.ts","./src/app/unit/list/list.resolver.ts","./src/app/unit/service/unit.service.ts","./src/app/unit/unit.module.ts","./src/app/unit/unit.routing.ts","./src/app/unit/update/update.component.html","./src/app/unit/update/update.component.ts","./src/app/unit/update/update.resolver.ts","./src/app/users/create/create.component.css","./src/app/users/create/create.component.html","./src/app/users/create/create.component.ts","./src/app/users/list/list.component.css","./src/app/users/list/list.component.html","./src/app/users/list/list.component.ts","./src/app/users/list/list.resolver.ts","./src/app/users/services/user.service.ts","./src/app/users/update/update.component.css","./src/app/users/update/update.component.html","./src/app/users/update/update.component.ts","./src/app/users/users.module.ts","./src/app/users/users.routing.ts","./src/app/validators/validators-messages.component.ts","./src/app/validators/validators.module.ts","./src/app/validators/validators.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import {NgModule} from \"@angular/core\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {RootComponent} from \"./core/root.component\";\nimport {AppResolver} from \"./app.resolver\";\nimport {categoryRoutes} from \"./category/category.routing\";\nimport {dictionaryRoutes} from \"./dictionary/dictionary.routing\";\nimport {NoContent} from \"./core/no-content/no-content.component\";\nimport {UnauthorizedComponent} from \"./core/unauthorized/unauthorized.component\";\nimport {companyRoutes} from \"./company/company.routing\";\nimport {usersRoutes} from \"./users/users.routing\";\nimport {authRoute} from \"./authentication/auth.route\";\nimport {unitRoutes} from \"./unit/unit.routing\";\nimport {ingredientRoutes} from \"./ingredient/ingredient.routing\";\nimport {recipeRoutes} from \"./recipe/recipe.routing\";\nimport {couponRoutes} from \"./coupon/coupon.routing\";\n\nconst appRoutes: Routes = [\n\n    {path: '', redirectTo: 'categories', pathMatch: 'full'},\n    ...authRoute,\n    {\n        path: '',\n        component: RootComponent,\n        canActivate: [AppResolver],\n        children: [\n            ...categoryRoutes,\n            ...dictionaryRoutes,\n            ...companyRoutes,\n            ...usersRoutes,\n            ...unitRoutes,\n            ...ingredientRoutes,\n            ...recipeRoutes,\n            ...couponRoutes,\n            // { path: 'users', component: UsersComponent, canActivate: [AuthGuard] },\n            // { path: 'categories', component: CategoryComponent },\n        ]\n    },\n    {path: '401', component: UnauthorizedComponent},\n    {path: '404', component: NoContent},\n    {path: '**', component: NoContent},\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(\n            appRoutes,\n            // { enableTracing: false } // <-- debugging purposes only\n        )\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class AppRoutingModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","import {Component} from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <router-outlet></router-outlet>`,\n})\nexport class AppComponent {\n\n    title = 'Crazy Sob';\n\n    constructor() {\n\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import {BrowserModule} from \"@angular/platform-browser\";\nimport {NgModule} from \"@angular/core\";\nimport {AppComponent} from \"./app.component\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {AppRoutingModule} from \"./app-routing.module\";\nimport {CompanyModule} from \"./company/company.module\";\nimport {CategoryModule} from \"./category/category.module\";\nimport {BaseRequestOptions, HttpModule, RequestOptions} from \"@angular/http\";\nimport {CoreModule} from \"./core/core.module\";\nimport {AppResolver} from \"./app.resolver\";\nimport {SharedModule} from \"./shared/shared.module\";\nimport {AuthModule} from \"./authentication/auth.module\";\nimport {ValidatorsModule} from \"./validators/validators.module\";\nimport {DictionariesModule} from \"./dictionary/dictionary.module\";\nimport {UsersModule} from \"./users/users.module\";\nimport {UnitModule} from \"./unit/unit.module\";\nimport {IngredientModule} from \"./ingredient/ingredient.module\";\nimport {RecipeModule} from \"./recipe/recipe.module\";\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {ModalModule} from \"ngx-bootstrap\";\nimport {CurrencyMaskModule} from \"ng2-currency-mask\";\nimport {CouponModule} from \"./coupon/coupon.module\";\n\nclass MyRequestOptions extends BaseRequestOptions {\n    constructor() {\n        console.log('MyRequestOptions');\n        super();\n        try {\n            let access = JSON.parse(localStorage.getItem('access-token'));\n            if (access) {\n                this.headers.append('Authorization', 'Bearer ' + access.value);\n            }\n        } catch (e) {\n            console.log('Wrong credentials', e);\n        }\n    }\n}\n\n@NgModule({\n    declarations: [\n        AppComponent,\n    ],\n    imports: [\n        BrowserModule,\n        FormsModule,\n        CurrencyMaskModule,\n        ReactiveFormsModule,\n        UsersModule,\n        CategoryModule,\n        DictionariesModule,\n        HttpModule,\n        AuthModule,\n        SharedModule,\n        CompanyModule,\n        UnitModule,\n        CouponModule,\n        CoreModule,\n        NgbModule.forRoot(),\n        ModalModule.forRoot(),\n        IngredientModule,\n        RecipeModule,\n        AppRoutingModule,\n        ValidatorsModule\n    ],\n    providers: [\n        AppResolver\n    ],\n    bootstrap: [AppComponent]\n})\n\n\nexport class AppModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from \"@angular/router\";\nimport {Injectable} from \"@angular/core\";\nimport {ToastrService} from \"./shared/toastr.service\";\n\n@Injectable()\nexport class AppResolver implements CanActivate {\n    constructor(private _router: Router) {\n\n    }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        let accessToken = localStorage.getItem('access-token');\n        if (!localStorage.getItem('access-token') || accessToken == 'undefined') {\n            localStorage.clear();\n            this._router.navigate(['/login']);\n            ToastrService.error('', 'Wrong credentials');\n            return false;\n        } else {\n\n            return true;\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.resolver.ts","import {LoginComponent} from \"./login/login.component\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {RouterModule} from \"@angular/router\";\nimport {authRoute} from \"./auth.route\";\nimport {AuthService} from \"./services/auth.service\";\nimport {LoginResolver} from \"./login/login.resolver\";\nimport {NgModule} from \"@angular/core\";\nimport {ValidatorsModule} from \"../validators/validators.module\";\n\n@NgModule({\n    declarations: [\n        LoginComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        RouterModule.forChild(authRoute),\n        ReactiveFormsModule,\n\n        ValidatorsModule\n    ],\n    providers: [\n        AuthService,\n        LoginResolver,\n    ]\n})\nexport class AuthModule {\n    constructor() {\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/authentication/auth.module.ts","import {Routes} from \"@angular/router\";\nimport {LoginComponent} from \"./login/login.component\";\nimport {LoginResolver} from \"./login/login.resolver\";\n\n//Config\nexport const authRoute: Routes = [\n    {\n        path: 'login',\n        component: LoginComponent,\n        canActivate: [LoginResolver],\n    },\n];\n\n\n// WEBPACK FOOTER //\n// ./src/app/authentication/auth.route.ts","module.exports = \"<div class=\\\"auth-page\\\">\\n    <div class=\\\"content\\\">\\n\\n        <div class=\\\"modal-form\\\">\\n            <div class=\\\"wrap-form\\\">\\n                <h1>Log In</h1>\\n                <form [formGroup]=\\\"loginForm\\\" (submit)=\\\"authenticate($event)\\\">\\n\\n                    <div class=\\\"ui left input form-group\\\">\\n                        <div><input class=\\\"input-lg input-underline\\\" formControlName=\\\"email\\\" type=\\\"text\\\"\\n                                    placeholder=\\\"Your email address\\\"></div>\\n                        <validator-messages [field]=\\\"loginForm.controls.email\\\"></validator-messages>\\n                    </div>\\n\\n\\n                    <div class=\\\"ui left input form-group\\\">\\n                        <div><input class=\\\"input-lg input-underline\\\" formControlName=\\\"password\\\" type=\\\"password\\\"\\n                                    placeholder=\\\"Password\\\"></div>\\n                        <validator-messages [field]=\\\"loginForm.controls.password\\\"></validator-messages>\\n                    </div>\\n\\n                    <button type=\\\"submit\\\" class=\\\"btn rounded-btn\\\"\\n                            (click)=\\\"authenticate($event)\\\"\\n                            (dblclick)=\\\"$event.stopPropagation();\\\"\\n                            [disabled]=\\\"!loginForm.valid || submitPending\\\">\\n                        Log in\\n                    </button>\\n                    <!--<a [routerLink]=\\\"['/forgot']\\\" class=\\\"btn rounded-btn\\\">Forgot your password?</a>-->\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/authentication/login/login.component.html\n// module id = ./src/app/authentication/login/login.component.html\n// module chunks = main","import * as _ from 'lodash';\nimport {Component, OnInit, OnDestroy, AfterViewInit} from \"@angular/core\";\nimport {FormGroup, Validators, FormControl} from \"@angular/forms\";\nimport {Router} from \"@angular/router\";\nimport {RequestOptions} from \"@angular/http\";\nimport {AuthService} from \"../services/auth.service\";\nimport {ToastrService} from \"../../shared/toastr.service\";\n// import {CustomValidators} from \"../../validators/validators.service\";\n\n@Component({\n    selector: 'login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.style.css']\n})\n\nexport class LoginComponent implements OnInit, OnDestroy {\n    public loginForm = new FormGroup({\n        email: new FormControl(\"\", [\n            Validators.required,\n            // CustomValidators.emailPatternValidator()\n        ]),\n        password: new FormControl(\"\", [\n            Validators.required,\n            Validators.minLength(6),\n            Validators.maxLength(100),\n            // CustomValidators.nospacePatternValidator(),\n            // CustomValidators.passwordPatternValidator()\n        ]),\n        keepMeLogIn: new FormControl(false)\n    });\n\n    public submitPending = false;\n    private _subscribers = [];\n\n    constructor(private authService: AuthService,\n                private _router: Router,\n                private requestOptions: RequestOptions) {\n        if (this.authService.email) {\n            this.loginForm.controls['email'].patchValue(this.authService.email);\n        }\n        this._subscribers.push(this.loginForm.valueChanges.subscribe(\n            () => this.submitPending = false\n        ));\n    }\n\n    ngOnInit() {\n\n    }\n\n    ngOnDestroy() {\n        _.forEach(this._subscribers, (value) => {\n            value.unsubscribe();\n        });\n    }\n\n    authenticate(event) {\n        event.preventDefault();\n\n        this.submitPending = true;\n        this._subscribers.push(this.authService.login(this.loginForm.value).subscribe(\n            res => {\n                this._router.navigate(['/categories']);\n            },\n            err => {\n                this.loginForm.controls['password'].patchValue('');\n                ToastrService.error('', 'Something was wrong with authentication');\n                console.log(\"Something was wrong with authentication\", err);\n            }));\n    }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/authentication/login/login.component.ts","import {ActivatedRouteSnapshot, RouterStateSnapshot, Router, CanActivate} from \"@angular/router\";\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\n\n@Injectable()\nexport class LoginResolver implements CanActivate {\n    constructor(private _router: Router) {\n\n    }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | boolean {\n        if (!localStorage.getItem('access-token')) {\n            return true;\n        } else {\n            this._router.navigate(['/categories']);\n            return false;\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/authentication/login/login.resolver.ts","module.exports = \"\\n.auth-page {\\n    height: 100%;\\n    overflow: auto;\\n    background: #2c3e50;\\n    text-align: center;\\n    color: #fff;\\n    padding: 3em;\\n    -webkit-animation: fadein 1s;\\n            animation: fadein 1s;\\n}\\n\\n.auth-page h1 {\\n    font-weight: 300;\\n    margin-top: 20px;\\n    margin-bottom: 10px;\\n    font-size: 36px;\\n    color: #fff;\\n}\\n\\n.auth-page form {\\n    padding: 40px 0;\\n}\\n\\n.auth-page .form-group {\\n    padding: 8px 0;\\n}\\n\\n.input-underline {\\n    background: 0 0;\\n    border: none;\\n    -webkit-box-shadow: none;\\n            box-shadow: none;\\n    border-bottom: 2px solid hsla(0, 0%, 100%, .5);\\n    color: #fff;\\n    border-radius: 0;\\n}\\n\\n.input-lg {\\n    height: 46px;\\n    width: 100%;\\n    max-width: 600px;\\n    padding: 10px 16px;\\n    font-size: 18px !important;\\n    line-height: 1.3333333;\\n    border-radius: 0;\\n}\\n\\nvalidator-messages {\\n    display: block;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/authentication/login/login.style.css\n// module id = ./src/app/authentication/login/login.style.css\n// module chunks = main","import {Injectable} from \"@angular/core\";\nimport {Response} from \"@angular/http\";\nimport {Observable} from \"rxjs/Rx\";\nimport {Auth} from \"../models/auth.model\";\nimport {Router} from \"@angular/router\";\nimport {ToastrService} from \"../../shared/toastr.service\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\n\n@Injectable()\nexport class AuthService {\n\n    private _email = '';\n\n    public get email() {\n        return this._email;\n    }\n\n    public set email(email: string) {\n        this._email = email;\n    }\n\n    constructor(private http: HttpClient,\n                // private errorHandler: ErrorHandler,\n                private router: Router,) {\n    }\n\n    public checkAuthToken() {\n        let accessToken = localStorage.getItem('access-token');\n        if (!localStorage.getItem('access-token') || accessToken == 'undefined') {\n            this.router.navigate(['/login']);\n            ToastrService.error('', 'Wrong credentials');\n        }\n    }\n\n    public getAuthToken(): string | null {\n        return localStorage.getItem('access-token');\n    }\n\n    public login(authObj: Auth): Observable<any> {\n\n        let body = JSON.stringify(authObj);\n        const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n\n        return this.http.post('/v1/auth/login', body, {headers: headers})\n            .map((response: Response) => {\n                let token = response['access-token'];\n                // login successful if there's a jwt token in the response\n                if (token) {\n\n                    // store username and jwt token in local storage to keep user logged in between page refreshes\n                    localStorage.setItem('currentUser', JSON.stringify(response['profile']));\n                    localStorage.setItem('access-token', token);\n                    // return true to indicate successful login\n                    return true;\n                } else {\n                    // return false to indicate failed login\n                    return false;\n                }\n            });\n    }\n\n\n    public logout(): Observable<any> {\n\n        let headers = new HttpHeaders().set('Authorization', 'Bearer ' + localStorage.getItem('access-token'));\n\n        return this.http.post('/v1/auth/logout', {}, {headers: headers})\n            .do((data) => {\n                localStorage.clear();\n                this.router.navigate(['/login']);\n                return data;\n            });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/authentication/services/auth.service.ts","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {ListComponent} from \"./list/list.component\";\nimport {CategoryService} from \"./service/category.service\";\nimport {ListResolver} from \"./list/list.resolver\";\nimport {categoryRoutes} from \"./category.routing\";\nimport {RouterModule} from \"@angular/router\";\nimport {CreateComponent} from \"./create/create.component\";\nimport {UpdateComponent} from \"./update/update.component\";\nimport {UpdateResolver} from \"./update/update.resolver\";\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {CreateResolver} from \"./create/create.resolver\";\nimport {ModalModule} from \"ngx-bootstrap\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ModalModule.forRoot(),\n        RouterModule.forChild(categoryRoutes),\n        NgbModule.forRoot(),\n        ReactiveFormsModule,\n    ],\n    declarations: [\n        ListComponent,\n        CreateComponent,\n        UpdateComponent,\n    ],\n    providers: [\n        CategoryService,\n        ListResolver,\n        CreateResolver,\n        UpdateResolver,\n    ]\n})\nexport class CategoryModule {\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/category/category.module.ts","import {Routes} from \"@angular/router\";\nimport {ListComponent} from \"./list/list.component\";\nimport {RootComponent} from \"../core/root.component\";\nimport {AppResolver} from \"../app.resolver\";\nimport {ListResolver} from \"./list/list.resolver\";\nimport {CreateComponent} from \"./create/create.component\";\nimport {UpdateResolver} from \"./update/update.resolver\";\nimport {UpdateComponent} from \"./update/update.component\";\nimport {CreateResolver} from \"./create/create.resolver\";\n\nexport const categoryRoutes: Routes = [\n    {\n        path: 'categories',\n        component: RootComponent,\n        canActivate: [AppResolver],\n        children: [\n            {\n                path: '',\n                component: ListComponent,\n                resolve: {\n                    'data': ListResolver\n                }\n            },\n            {\n                path: 'create',\n                component: CreateComponent,\n                resolve: {\n                    'data': CreateResolver\n                }\n            },\n            {\n                path: 'update/:id', component: UpdateComponent,\n                resolve: {\n                    'data': UpdateResolver\n                }\n            },\n            // {\n            //     path: ':id', component: ViewComponent,\n            //     resolve: {\n            //         'data': ViewResolver\n            //     },\n            // },\n        ]\n    },\n    // { path: 'categories/create', component: UserCreateComponent },\n    // { path: 'categories/:id', component: UserUpdateComponent },\n\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/category/category.routing.ts","module.exports = \"input.ng-touched.ng-invalid {\\n    border-color: red;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/category/create/create.component.css\n// module id = ./src/app/category/create/create.component.css\n// module chunks = main","module.exports = \"<div class=\\\"table-wrapper\\\">\\n    <div class=\\\"wrap-header\\\"></div>\\n    <div class=\\\"wrap-tmain\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header card-success card-inverse\\\">\\n                <span class=\\\"card-title\\\">Create category</span>\\n            </div>\\n            <div class=\\\"card-block\\\">\\n                <form [formGroup]=\\\"categoryForm\\\" [ngClass]=\\\"{'form-error':submitPending }\\\"\\n                      (submit)=\\\"createCategory($event)\\\" novalidate>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"name_en\\\">name_en</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" formControlName=\\\"name_en\\\" id=\\\"name_en\\\"\\n                                   formControlName=\\\"name_en\\\" type=\\\"text\\\"\\n                                   placeholder=\\\"Enter title\\\">\\n                            <p class=\\\"error_message\\\"\\n                               *ngIf=\\\"categoryForm.get('name_en').hasError('required') && submitPending\\\">\\n                                Name En is required</p>\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"isExistErrorByFormField('name_en')\\\">{{\\n                                getTextErrorByFormField('name_en') }}</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"name_he\\\">name_he</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" id=\\\"name_he\\\" formControlName=\\\"name_he\\\" type=\\\"text\\\"\\n                                   placeholder=\\\"Enter title\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"name_es\\\">name_es</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" id=\\\"name_es\\\" formControlName=\\\"name_es\\\" type=\\\"text\\\"\\n                                   placeholder=\\\"Enter title\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"position\\\">position</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" id=\\\"position\\\" type=\\\"number\\\" formControlName=\\\"position\\\"\\n                                   placeholder=\\\"Enter title\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n                            <button class=\\\"btn btn-danger btn-bordered margin-right\\\" type=\\\"button\\\"\\n                                    [routerLink]=\\\"['/categories']\\\">Cancel\\n                            </button>\\n                            <button class=\\\"btn btn-primary btn-bordered\\\" type=\\\"submit\\\"\\n                            >Create\\n                            </button>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/category/create/create.component.html\n// module id = ./src/app/category/create/create.component.html\n// module chunks = main","import * as _ from \"lodash\";\nimport {Component, OnInit} from \"@angular/core\";\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {CategoryService} from \"../service/category.service\";\nimport {CropperSettings} from \"ng2-img-cropper\";\n\n@Component({\n    selector: 'category-create',\n    templateUrl: './create.component.html',\n    styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n    showLang: boolean = false;\n    submitPending: boolean = false;\n    errors = [];\n    data: any;\n    cropperSettings: CropperSettings;\n\n\n    public categoryForm: FormGroup = new FormGroup({\n        name_en: new FormControl(\"\", [Validators.required]),\n        name_he: new FormControl(\"\", []),\n        name_es: new FormControl(\"\", []),\n        position: new FormControl(1, [Validators.required, Validators.min(1)]),\n        status: new FormControl(1, [Validators.required]),\n    });\n\n    private _subscribers = [];\n\n    constructor(public router: Router,\n                public fb: FormBuilder,\n                public categoryService: CategoryService,\n                public route: ActivatedRoute) {\n\n        this._subscribers.push(this.categoryForm.valueChanges.subscribe(\n            () => this.submitPending = false\n        ));\n\n        this.cropperSettings = new CropperSettings();\n        this.cropperSettings.width = 100;\n        this.cropperSettings.height = 100;\n        this.cropperSettings.croppedWidth = 100;\n        this.cropperSettings.croppedHeight = 100;\n        this.cropperSettings.canvasWidth = 400;\n        this.cropperSettings.canvasHeight = 300;\n\n        this.data = {};\n        this._subscribers.push(this.route.data.subscribe((res: any) => {\n            this.categoryForm.controls['position'].patchValue(+res.data[0] + 1);\n        }));\n    }\n\n    ngOnInit() {\n\n    }\n\n    public createCategory(event) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (!this.categoryForm.valid) {\n            this.submitPending = true;\n            return;\n        }\n\n        this.submitPending = true;\n        let category = this.categoryForm.value;\n        this._subscribers.push(this.categoryService.create(category).subscribe(\n            () => {\n                this.router.navigate(['/categories']);\n            },\n            (err) => {\n                this.errors = err.error;\n            }\n        ));\n    }\n\n    ngOnDestroy() {\n        _.forEach(this._subscribers, (value) => {\n            value.unsubscribe();\n        });\n    }\n\n    isExistErrorByFormField(formField: string): boolean {\n        return _.has(this.errors, formField);\n    }\n\n    getTextErrorByFormField(formField: string): string {\n        let arrMessage = this.errors[formField];\n        return arrMessage.join(',');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/category/create/create.component.ts","import {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from \"@angular/router\";\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs/add/observable/of\";\nimport {CategoryService} from \"../service/category.service\";\n\n@Injectable()\nexport class CreateResolver implements Resolve<any> {\n    constructor(private categoryService: CategoryService) {\n\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\n        return Observable.forkJoin(\n            this.categoryService.getMaxPosition(),\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/category/create/create.resolver.ts","module.exports = \"table {\\n    width: 100%;\\n}\\n\\ntable td,\\ntable th {\\n    padding: 5px;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/category/list/list.component.css\n// module id = ./src/app/category/list/list.component.css\n// module chunks = main","module.exports = \"<div class=\\\"wrapper-content\\\">\\n    <div class=\\\"table-wrapper\\\">\\n        <div class=\\\"wrap-header\\\">\\n            <h3>{{title}}</h3>\\n        </div>\\n        <div class=\\\"wrap-tmain\\\">\\n            <div class=\\\"table-scroll\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-block\\\" style=\\\"padding-bottom: 0\\\">\\n                        <table border=\\\"1\\\">\\n                            <thead>\\n                            <tr class=\\\"ng2-smart-titles\\\">\\n                                <th class=\\\"ng2-smart-actions\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">Actions</div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        #\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\">\\n                                    <div class=\\\"ng2-smart-title\\\" (click)=\\\"onSortBy('id')\\\">\\n                                        id\\n                                        <i class=\\\"fa fa-sort-asc\\\"\\n                                           aria-hidden=\\\"true\\\"\\n                                           *ngIf=\\\"activeSortByField === 'id' && activeSortOrder === 0\\\"></i>\\n                                        <i class=\\\"fa fa-sort-desc\\\"\\n                                           aria-hidden=\\\"true\\\"\\n                                           *ngIf=\\\"activeSortByField === 'id' && activeSortOrder === 1\\\"></i>\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        Used by ingredients\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\" (click)=\\\"onSortBy('name_en')\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        Category Name\\n                                        <i class=\\\"fa fa-sort-asc\\\"\\n                                           aria-hidden=\\\"true\\\"\\n                                           *ngIf=\\\"activeSortByField === 'name_en' && activeSortOrder === 0\\\"></i>\\n                                        <i class=\\\"fa fa-sort-desc\\\"\\n                                           aria-hidden=\\\"true\\\"\\n                                           *ngIf=\\\"activeSortByField === 'name_en' && activeSortOrder === 1\\\"></i>\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\" (click)=\\\"onSortBy('position')\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        Position\\n                                        <i class=\\\"fa fa-sort-asc\\\"\\n                                           aria-hidden=\\\"true\\\"\\n                                           *ngIf=\\\"activeSortByField === 'position' && activeSortOrder === 0\\\"></i>\\n                                        <i class=\\\"fa fa-sort-desc\\\"\\n                                           aria-hidden=\\\"true\\\"\\n                                           *ngIf=\\\"activeSortByField === 'position' && activeSortOrder === 1\\\"></i>\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\"  (click)=\\\"onSortBy('status')\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        Status\\n                                        <i class=\\\"fa fa-sort-asc\\\"\\n                                           aria-hidden=\\\"true\\\"\\n                                           *ngIf=\\\"activeSortByField === 'status' && activeSortOrder === 0\\\"></i>\\n                                        <i class=\\\"fa fa-sort-desc\\\"\\n                                           aria-hidden=\\\"true\\\"\\n                                           *ngIf=\\\"activeSortByField === 'status' && activeSortOrder === 1\\\"></i>\\n                                    </div>\\n                                </th>\\n                            </tr>\\n                            <tr class=\\\"ng2-smart-filters\\\">\\n                                <th class=\\\"ng2-smart-actions-title ng2-smart-actions-title-add\\\">\\n                                    <a routerLink=\\\"create\\\" routerLinkActive=\\\"active\\\"\\n                                       class=\\\"btn btn-secondary\\\" href=\\\"#\\\">+ Add category</a>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th \\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th \\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n                                        <div class=\\\"ng2-smart-filter\\\">\\n                                            <input class=\\\"form-control ng-untouched ng-pristine ng-valid\\\"\\n                                                   [(ngModel)]=\\\"searchName\\\"\\n                                                   (keyup.enter)=\\\"applyFilters($event)\\\"\\n                                                   type=\\\"text\\\"\\n                                                   placeholder=\\\"Name\\\">\\n                                        </div>\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n                                        <select\\n                                                class=\\\"form-control underline\\\"\\n                                                (change)=\\\"applyFilters($event)\\\"\\n                                                [(ngModel)]=\\\"searchStatus\\\">\\n                                            <option *ngFor=\\\"let status of statusOptionsSelect\\\"\\n                                                    [value]=\\\"status.value\\\"\\n                                                    (onClick)=\\\"applyFilters($event)\\\">\\n                                                {{ status.label }}\\n                                            </option>\\n                                        </select>\\n                                    </div>\\n                                </th>\\n                            </tr>\\n                            </thead>\\n                            <tbody>\\n                            <tr *ngFor=\\\"let category of itemList; let i = index\\\">\\n                                <td>\\n                                    <a [routerLink]=\\\"['update/' + category.id]\\\" *ngIf=\\\"category.status == 1\\\"\\n                                       routerLinkActive=\\\"active\\\" class=\\\"btn btn-info\\\">\\n                                        <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n                                        edit</a>\\n                                    <button *ngIf=\\\"category.status == 1\\\"\\n                                            [disabled]=\\\"category.activeIngredientCount != '0'\\\"\\n                                            title=\\\"This category used in {{category.activeRecipeCount}} ingredients\\\"\\n                                            class=\\\"btn btn-danger\\\"\\n                                            (click)=\\\"onDelete($event, content, category)\\\">\\n                                        <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>\\n                                        delete\\n                                    </button>\\n                                </td>\\n                                <td>{{(i+1) + (page - 1) * selectedLimit}}</td>\\n                                <td>{{category.id}}</td>\\n                                <td>{{category.activeIngredientCount}}</td>\\n                                <td>{{category.name_en}}</td>\\n                                <td>{{category.position}}</td>\\n                                <td>\\n                                    <span class=\\\"active-status\\\" *ngIf=\\\"category.status == 1\\\">Active</span>\\n                                    <span class=\\\"deleted-status\\\" *ngIf=\\\"category.status == 3 \\\">Deleted</span>\\n                                </td>\\n                            </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                    <div class=\\\"page-select\\\">\\n                        <div class=\\\"col-sm-8\\\">\\n                            <select class=\\\"form-control\\\" style=\\\"width: 200px;\\\"\\n                                    [(ngModel)]=\\\"selectedLimit\\\"\\n                                    (change)=\\\"onLimitSelected($event)\\\">\\n                                <option *ngFor=\\\"let item of limitOptionsSelect\\\" [value]=\\\"item.value\\\">\\n                                    {{ item.label }}\\n                                </option>\\n                            </select>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\" *ngIf=\\\"itemSize > selectedLimit\\\">\\n                            <ngb-pagination\\n                                    [collectionSize]=\\\"itemSize\\\"\\n                                    [(page)]=\\\"page\\\"\\n                                    (pageChange)=\\\"onPageChange($event)\\\"\\n                                    [pageSize]=\\\"selectedLimit\\\"\\n                                    [rotate]=\\\"true\\\"\\n                                    [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n        <i class=\\\"material-icons\\\">clear</i>\\n    </button>\\n    <div class=\\\"modal-body delete-modal clearfix\\\">\\n        <p>Are you sure you want to delete the category <b>«{{itemTitle}}»?</b></p>\\n        <span>This action cannot be undone </span>\\n        <p>\\n            <button type=\\\"button\\\" class=\\\"btn m-btn_no-bg margin-right\\\" (click)=\\\"d('no')\\\">Cancel</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-color\\\" (click)=\\\"c('yes')\\\">Delete it!</button>\\n        </p>\\n    </div>\\n</ng-template>\\n\\n<template ngbModalContainer></template>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/category/list/list.component.html\n// module id = ./src/app/category/list/list.component.html\n// module chunks = main","import * as _ from 'lodash';\nimport {Component, OnInit} from '@angular/core';\nimport {CategoryService} from \"../service/category.service\";\nimport {ToastrService} from \"../../shared/toastr.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Observable} from \"rxjs/Observable\";\nimport {Category} from \"../models/category\";\nimport {BsModalRef, BsModalService} from \"ngx-bootstrap\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n    selector: 'category-list',\n    templateUrl: './list.component.html',\n    styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n    itemList: Category[];\n    itemSize: number;\n    private title = 'Categories list';\n    itemTitle: string;\n\n    searchName = '';\n    searchStatus = 1;\n\n\n    public activeSortByField = 'id';\n    public activeSortOrder = 0;\n\n    isShowPagination: boolean = true;\n    statusOptionsSelect = [\n        {\n            value: '',\n            label: 'All'\n        },\n        {\n            value: 1,\n            label: 'Active'\n        },\n        {\n            value: 3,\n            label: 'Deleted'\n        }\n    ];\n    public limitOptionsSelect = [\n        {\n            value: 5,\n            label: '5'\n        },\n        {\n            value: 10,\n            label: '10'\n        },\n        {\n            value: 20,\n            label: '20'\n        },\n        {\n            value: 50,\n            label: '50'\n        },\n        {\n            value: 100,\n            label: '100'\n        }\n    ];\n    public page = 1;\n\n    public modalRef: BsModalRef;\n    public selectedLimit = 10;\n\n    private _subscribers = [];\n\n    constructor(public entityService: CategoryService,\n                private modalService: NgbModal,\n                private _route: ActivatedRoute) {\n\n        this._subscribers.push(this._route.data.subscribe((res: any) => {\n            this.itemList = _.take(res.data[0].data, this.selectedLimit);\n            this.itemSize = +res.data[0].count;\n        }));\n    }\n\n    onDelete(event, content, category: Category) {\n        event.preventDefault();\n        this.itemTitle = category.name_en;\n\n        this.modalService.open(content).result.then((result) => {\n            this._subscribers.push(Observable.concat(\n                this.entityService.deleteById(category.id),\n                this.entityService.getList(this.buildListResponseObject())\n            ).subscribe(\n                (res: any) => {\n                    if (res) {\n                        this.itemList = res.data;\n                        this.itemSize = +res.count;\n                    }\n                },\n                (err) => {\n\n                }\n            ))\n        }).catch((reason) => {\n\n        });\n\n    }\n\n    ngOnInit() {\n    }\n\n    ngOnDestroy() {\n        _.forEach(this._subscribers, (value) => {\n            value.unsubscribe();\n        });\n    }\n\n    public onLimitSelected(selected) {\n        this.page = 1;\n        this.listRequest();\n    }\n\n    /**\n     * Use this method to get current list\n     * @param page\n     */\n    private listRequest(page?) {\n        this._subscribers.push(this.entityService.getList(this.buildListResponseObject(page))\n            .subscribe(\n                (res: { data: any, count: number }) => {\n                    this.itemList = res.data;\n                    this.itemSize = +res.count;\n                },\n                (err) => {\n\n                }\n            ));\n    }\n\n    /**\n     * Use this method to prepare request object for list. Sets limits, pagination, etc.\n     * @param page\n     * @returns {{query: any, page: (any|number), limit: number, sort: string, order: number, filter: string}}\n     */\n    private buildListResponseObject(page?) {\n        return {\n            page: page || this.page,\n            limit: this.selectedLimit,\n            status: this.searchStatus,\n            name: this.searchName,\n            sort: this.activeSortByField,\n            order: this.activeSortOrder,\n        }\n    }\n\n    public onPageChange(event) {\n        this.listRequest(event);\n    }\n\n    public applyFilters(event) {\n        event.preventDefault();\n        this.page = 1;\n        this.listRequest();\n    }\n\n    public onSortBy(field) {\n        if (this.activeSortByField === field) {\n            this.activeSortOrder ? this.activeSortOrder = 0 : this.activeSortOrder = 1;\n        } else {\n            this.activeSortByField = field;\n            this.activeSortOrder = 1;\n        }\n        this.listRequest();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/category/list/list.component.ts","import {Resolve, ActivatedRouteSnapshot, RouterStateSnapshot} from \"@angular/router\";\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs/add/observable/of\";\nimport {CategoryService} from \"../service/category.service\";\n\n@Injectable()\nexport class ListResolver implements Resolve<any> {\n    constructor(private categoryService: CategoryService) {\n\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\n        let reqObj = {\n            page: 1,\n            limit: 10,\n            status: 1,\n            order: 0,\n            sort: 'id'\n        };\n        return Observable.forkJoin(\n            this.categoryService.getList(reqObj),\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/category/list/list.resolver.ts","import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {ToastrService} from \"../../shared/toastr.service\";\nimport {AuthService} from \"../../authentication/services/auth.service\";\nimport {ErrorHandler} from \"../../shared/error-handler.service\";\nimport {ListRequest} from \"../../shared/models/list-request.model\";\nimport {ListRequestService} from \"../../shared/list-request.service\";\n\n@Injectable()\nexport class CategoryService {\n\n    private path = '/v1/categories';\n\n    constructor(private http: HttpClient,\n                private authService: AuthService,\n                private errorHandler: ErrorHandler) {\n    }\n\n    private getHeaders() {\n        return new HttpHeaders().set('Authorization', 'Bearer ' + this.authService.getAuthToken());\n    }\n\n    public getList(resObj: ListRequest = {}): Observable<{}> {\n        return this.http.get(this.path + '?' + ListRequestService.parseRequestObject(resObj), {headers: this.getHeaders()})\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n\n    public getViewById(id: number): Observable<{}> {\n        return this.http.get(this.path + '/' + id, {headers: this.getHeaders()})\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n\n    public create(category): Observable<{}> {\n        return this.http.post(this.path, category, {headers: this.getHeaders()})\n            .do(() => ToastrService.success(\"\", \"Categories was created\"))\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n\n    public updateById(category, id: number): Observable<{}> {\n        return this.http.put(this.path + '/' + id, category, {headers: this.getHeaders()})\n            .do(() => ToastrService.success(\"\", \"Categories was updated\"))\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n\n    public deleteById(id: number): Observable<{}> {\n        return this.http.delete(this.path + '/' + id, {headers: this.getHeaders()})\n            .do(() => ToastrService.success(\"\", \"Categories was deleted\"))\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n\n    public getMaxPosition(): Observable<{}> {\n        return this.http.get(this.path + '/max-active-position', {headers: this.getHeaders()})\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/category/service/category.service.ts","module.exports = \"<div class=\\\"table-wrapper\\\">\\n    <div class=\\\"wrap-header\\\"></div>\\n    <div class=\\\"wrap-tmain\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header card-success card-inverse\\\">\\n                <span class=\\\"card-title\\\">Create category</span>\\n            </div>\\n            <div class=\\\"card-block\\\">\\n                <form [formGroup]=\\\"categoryForm\\\" [ngClass]=\\\"{'form-error':submitPending }\\\"\\n                      (submit)=\\\"updateCategory($event)\\\" novalidate>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"name_en\\\">name_en</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" formControlName=\\\"name_en\\\" id=\\\"name_en\\\"\\n                                   formControlName=\\\"name_en\\\" type=\\\"text\\\"\\n                                   placeholder=\\\"Enter title\\\">\\n                            <p class=\\\"error_message\\\"\\n                               *ngIf=\\\"categoryForm.get('name_en').hasError('required') && submitPending\\\">\\n                                Name En is required</p>\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"isExistErrorByFormField('name_en')\\\">{{\\n                                getTextErrorByFormField('name_en') }}</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"name_he\\\">name_he</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" id=\\\"name_he\\\" formControlName=\\\"name_he\\\" type=\\\"text\\\"\\n                                   placeholder=\\\"Enter title\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"name_es\\\">name_es</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" id=\\\"name_es\\\" formControlName=\\\"name_es\\\" type=\\\"text\\\"\\n                                   placeholder=\\\"Enter title\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"position\\\">position</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" id=\\\"position\\\" type=\\\"number\\\" formControlName=\\\"position\\\"\\n                                   placeholder=\\\"Enter title\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n                            <button class=\\\"btn btn-danger btn-bordered margin-right\\\" type=\\\"button\\\"\\n                                    [routerLink]=\\\"['/categories']\\\">Cancel\\n                            </button>\\n                            <button class=\\\"btn btn-primary btn-bordered\\\" type=\\\"submit\\\"\\n                            >Update\\n                            </button>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/category/update/update.component.html\n// module id = ./src/app/category/update/update.component.html\n// module chunks = main","import * as _ from 'lodash';\nimport {Component, OnInit} from \"@angular/core\";\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {CategoryService} from \"../service/category.service\";\n\n@Component({\n    selector: 'category-update',\n    templateUrl: './update.component.html'\n})\nexport class UpdateComponent implements OnInit {\n    showLang: boolean = false;\n    submitPending: boolean = false;\n    errors = [];\n    public categoryForm: FormGroup = new FormGroup({\n        id: new FormControl(\"\", [Validators.required]),\n        name_en: new FormControl(\"\", [Validators.required]),\n        name_he: new FormControl(\"\", []),\n        name_es: new FormControl(\"\", []),\n        position: new FormControl(1, [Validators.required, Validators.min(1)]),\n        status: new FormControl(1, [Validators.required]),\n    });\n\n    private _subscribers = [];\n\n    constructor(public router: Router,\n                public fb: FormBuilder,\n                public categoryService: CategoryService,\n                private _route: ActivatedRoute) {\n        this._subscribers.push(this._route.data.subscribe((res: any) => {\n            this.categoryForm.patchValue(res.data[0]);\n        }))\n    }\n\n    ngOnInit() {\n\n    }\n\n    public updateCategory(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (!this.categoryForm.valid) {\n            this.submitPending = true;\n            return;\n        }\n        let category = this.categoryForm.value;\n        this._subscribers.push(this.categoryService.updateById(category, category.id).subscribe(\n            () => {\n                this.router.navigate(['/categories']);\n            },\n            (err) => {\n                this.errors = err.error;\n            }\n        ));\n    }\n\n    ngOnDestroy() {\n        _.forEach(this._subscribers, (value) => {\n            value.unsubscribe();\n        });\n    }\n\n    isExistErrorByFormField(formField: string): boolean {\n        return _.has(this.errors, formField);\n    }\n\n    getTextErrorByFormField(formField: string): string {\n        let arrMessage = this.errors[formField];\n        return arrMessage.join(',');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/category/update/update.component.ts","import {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from \"@angular/router\";\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs/add/observable/of\";\nimport {CategoryService} from \"../service/category.service\";\n\n@Injectable()\nexport class UpdateResolver implements Resolve<any> {\n    constructor(private categoryService: CategoryService) {\n\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\n        return Observable.forkJoin(\n            this.categoryService.getViewById(route.params['id']),\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/category/update/update.resolver.ts","import {NgModule}       from '@angular/core';\nimport {CommonModule}   from '@angular/common';\nimport {FormsModule, ReactiveFormsModule}    from '@angular/forms';\n\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {CompanyService} from \"./services/company.service\";\nimport {CompanyGetComponent} from \"./list/company-get.component\";\nimport {CompanyCreateComponent} from \"./create/company-create.component\";\nimport {CompanyUpdateComponent} from \"./update/company-update.component\";\nimport {RouterModule} from \"@angular/router\";\nimport {companyRoutes} from \"./company.routing\";\nimport {ImageCropperModule} from \"ngx-image-cropper\";\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {ListResolver} from \"./list/list.resolver\";\nimport {UpdateResolver} from \"./update/update.resolver\";\nimport {ModalModule} from \"ngx-bootstrap\";\n\n@NgModule({\n    imports: [\n        RouterModule,\n        HttpClientModule,\n        CommonModule,\n        FormsModule,\n        RouterModule.forChild(companyRoutes),\n        NgbModule.forRoot(),\n        ModalModule.forRoot(),\n        ReactiveFormsModule,\n        ImageCropperModule\n    ],\n    declarations: [\n        CompanyGetComponent,\n        CompanyCreateComponent,\n        CompanyUpdateComponent\n    ],\n    providers: [\n        CompanyService,\n        ListResolver,\n        UpdateResolver\n    ]\n})\nexport class CompanyModule {\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/company/company.module.ts","import {RouterModule, Routes} from '@angular/router';\n\nimport {RootComponent} from \"../core/root.component\";\nimport {AppResolver} from \"../app.resolver\";\nimport {CompanyGetComponent} from \"./list/company-get.component\";\nimport {CompanyCreateComponent} from \"./create/company-create.component\";\nimport {CompanyUpdateComponent} from \"./update/company-update.component\";\nimport {ListResolver} from \"./list/list.resolver\";\nimport {UpdateResolver} from \"./update/update.resolver\";\n\n\nexport const companyRoutes: Routes = [{\n    path: 'companies',\n    component: RootComponent,\n    canActivate: [AppResolver],\n    children: [\n        {\n            path: '',\n            component: CompanyGetComponent,\n            resolve: {\n                'data': ListResolver\n            }\n        },\n        {\n            path: 'create', component: CompanyCreateComponent,\n            // resolve: {\n            //     'data': CreateResolver\n            // }\n        },\n        {\n            path: 'update/:id', component: CompanyUpdateComponent,\n            resolve: {\n                'data': UpdateResolver\n            }\n        },\n\n    ]\n},\n\n];\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/company/company.routing.ts","module.exports = \"input.ng-touched.ng-invalid {\\n    border-color: red;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/company/create/company-create.component.css\n// module id = ./src/app/company/create/company-create.component.css\n// module chunks = main","module.exports = \"<div class=\\\"table-wrapper\\\">\\n    <div class=\\\"wrap-header\\\"></div>\\n    <div class=\\\"wrap-tmain\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header card-success card-inverse\\\">\\n                <span class=\\\"card-title\\\">Create company</span>\\n            </div>\\n            <div class=\\\"card-block\\\">\\n                <form novalidate [ngClass]=\\\"{'form-error':submitPending }\\\" [formGroup]=\\\"form\\\"\\n                      (ngSubmit)=\\\"onSubmit(form)\\\">\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"inputNameCompany\\\">Name\\n                            company</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" formControlName=\\\"name_en\\\" id=\\\"inputNameCompany\\\"\\n                                   placeholder=\\\"Name company\\\" type=\\\"text\\\">\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"form.get('name_en').hasError('required') && submitPending\\\">\\n                                Name company is required</p>\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"isExistErrorByFormField('name_en')\\\">{{\\n                                getTextErrorByFormField('name_en') }}</p>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"inputNameCompanyhe\\\">Name company\\n                            \\\"Heb\\\"</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" id=\\\"inputNameCompanyhe\\\" formControlName=\\\"name_he\\\"\\n                                   placeholder=\\\"Name company 'Heb'\\\" type=\\\"text\\\">\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"isExistErrorByFormField('name_he')\\\">{{\\n                                getTextErrorByFormField('name_he') }}</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"inputNameCompanyes\\\">Name company\\n                            'Es'</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" id=\\\"inputNameCompanyes\\\" formControlName=\\\"name_es\\\"\\n                                   placeholder=\\\"Name company 'Es'\\\" type=\\\"text\\\">\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"isExistErrorByFormField('name_es')\\\">{{\\n                                getTextErrorByFormField('name_es') }}</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"inputLinktosite\\\">Company site\\n                            URL</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" id=\\\"inputLinktosite\\\"\\n                                   formControlName=\\\"company_site_url\\\" placeholder=\\\"https://site.name\\\">\\n                            <p class=\\\"error_message\\\"\\n                               *ngIf=\\\"form.get('company_site_url').hasError('required') && submitPending\\\">Url company is\\n                                required</p>\\n                            <p class=\\\"error_message\\\"\\n                               *ngIf=\\\"form.get('company_site_url').hasError('pattern') && submitPending\\\">Url company\\n                                must be https://</p>\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"isExistErrorByFormField('company_site_url')\\\">{{\\n                                getTextErrorByFormField('company_site_url') }}</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"inputCompanycolor\\\">Company\\n                            color</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" id=\\\"inputCompanycolor\\\" formControlName=\\\"color_1\\\"\\n                                   placeholder=\\\"#ffffff\\\">\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"form.get('color_1').hasError('required') && submitPending\\\">\\n                                Color is required</p>\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"form.get('color_1').hasError('pattern') && submitPending\\\">\\n                                Color must be #ff0000</p>\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"isExistErrorByFormField('color_1')\\\">{{\\n                                getTextErrorByFormField('color_1') }}</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"inputButtoncolor\\\">Button\\n                            color</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" id=\\\"inputButtoncolor\\\" formControlName=\\\"color_2\\\"\\n                                   placeholder=\\\"#ffffff\\\">\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"form.get('color_2').hasError('required') && submitPending\\\">\\n                                Color is required</p>\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"form.get('color_2').hasError('pattern') && submitPending\\\">\\n                                Color must be #ff0000</p>\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"isExistErrorByFormField('color_2')\\\">{{\\n                                getTextErrorByFormField('color_2') }}</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"inputButtonBackcolor\\\">Button\\n                            background color</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" id=\\\"inputButtonBackcolor\\\" formControlName=\\\"color_3\\\"\\n                                   placeholder=\\\"#ffffff\\\">\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"form.get('color_3').hasError('required') && submitPending\\\">\\n                                Color is required</p>\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"form.get('color_3').hasError('pattern') && submitPending\\\">\\n                                Color must be #ff0000</p>\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"isExistErrorByFormField('color_3')\\\">{{\\n                                getTextErrorByFormField('color_3') }}</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"inputAlias\\\">Alias</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" id=\\\"inputAlias\\\" formControlName=\\\"alias\\\"\\n                                   placeholder=\\\"alias\\\">\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"form.get('alias').hasError('required') && submitPending\\\">\\n                                Alias is required</p>\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"isExistErrorByFormField('alias')\\\">{{\\n                                getTextErrorByFormField('alias') }}</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"fileLogo\\\">Logo</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input type=\\\"file\\\" id=\\\"fileLogo\\\" (change)=\\\"fileChangeEvent($event)\\\"/>\\n\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <input type=\\\"hidden\\\" formControlName=\\\"logo\\\">\\n                                    <p class=\\\"error_message\\\"\\n                                       *ngIf=\\\"form.get('logo').hasError('required') && submitPending\\\">\\n                                        Logo is required</p>\\n                                    <image-cropper\\n                                        [imageChangedEvent]=\\\"imageChangedEvent\\\"\\n                                        [maintainAspectRatio]=\\\"true\\\"\\n                                        [aspectRatio]=\\\"1\\\"\\n                                        [resizeToWidth]=\\\"460\\\"\\n                                        format=\\\"png, jpeg\\\"\\n                                        (imageCropped)=\\\"imageCropped($event)\\\"\\n                                        (imageLoaded)=\\\"imageLoaded()\\\"\\n                                        (loadImageFailed)=\\\"loadImageFailed()\\\"\\n                                    ></image-cropper>\\n                                </div>\\n                                <div class=\\\"col-sm-6  preview-img \\\">\\n                                    <img [src]=\\\"croppedImage\\\"/>\\n                                    <div>\\n                                        <span *ngIf=\\\"showBtnSL\\\" (click)=\\\"handleFileInput()\\\" class=\\\"btn btn-danger mt10\\\">Save image</span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"fileImage\\\">Background\\n                            company</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input type=\\\"file\\\" id=\\\"fileImage\\\" (change)=\\\"fileChangeCompanyEvent($event)\\\"/>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <input type=\\\"hidden\\\" formControlName=\\\"image_company\\\">\\n                                    <p class=\\\"error_message\\\"\\n                                       *ngIf=\\\"form.get('image_company').hasError('required') && submitPending\\\">\\n                                        Image company is required</p>\\n                                    <image-cropper\\n                                        [imageChangedEvent]=\\\"imageChangedCompanyEvent\\\"\\n                                        [maintainAspectRatio]=\\\"true\\\"\\n                                        [aspectRatio]=\\\"4 / 2\\\"\\n                                        [resizeToWidth]=\\\"256\\\"\\n                                        format=\\\"png, jpeg\\\"\\n                                        (imageCropped)=\\\"imageCroppedCompany($event)\\\"\\n                                        (imageLoaded)=\\\"imageLoaded()\\\"\\n                                        (loadImageFailed)=\\\"loadImageFailed()\\\"\\n                                    ></image-cropper>\\n                                </div>\\n                                <div class=\\\"col-sm-6  preview-img \\\">\\n                                    <img [src]=\\\"croppedCompanyImage\\\"/>\\n                                    <div>\\n                                        <span *ngIf=\\\"showCompanyI\\\" (click)=\\\"handleFileInputCompany()\\\"\\n                                              class=\\\"btn btn-danger mt10\\\">Save image</span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"fileProd\\\">Background products\\n                            list</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input type=\\\"file\\\" id=\\\"fileProd\\\" (change)=\\\"fileChangeProductEvent($event)\\\"/>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <input type=\\\"hidden\\\" formControlName=\\\"image_product_list\\\">\\n                                    <p class=\\\"error_message\\\"\\n                                       *ngIf=\\\"form.get('image_product_list').hasError('required') && submitPending\\\">\\n                                        Image product list is required</p>\\n                                    <image-cropper\\n                                        [imageChangedEvent]=\\\"imageChangedProductEvent\\\"\\n                                        [maintainAspectRatio]=\\\"false\\\"\\n                                        [resizeToWidth]=\\\"256\\\"\\n                                        format=\\\"png, jpeg\\\"\\n                                        (imageCropped)=\\\"imageCroppedProduct($event)\\\"\\n                                        (imageLoaded)=\\\"imageLoaded()\\\"\\n                                        (loadImageFailed)=\\\"loadImageFailed()\\\"\\n\\n                                    ></image-cropper>\\n                                </div>\\n                                <div class=\\\"col-sm-6  preview-img \\\">\\n                                    <img [src]=\\\"croppedProductImage\\\"/>\\n                                    <div>\\n                                        <span *ngIf=\\\"showProdI\\\" (click)=\\\"handleFileInputProduct()\\\"\\n                                              class=\\\"btn btn-danger mt10\\\">Save image</span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n                            <button class=\\\"btn btn-danger btn-bordered margin-right\\\" type=\\\"button\\\"\\n                                    [routerLink]=\\\"['/companies']\\\">Cancel\\n                            </button>\\n                            <button type=\\\"submit\\\"\\n                                    class=\\\"btn btn-primary btn-bordered\\\">Save\\n                            </button>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/company/create/company-create.component.html\n// module id = ./src/app/company/create/company-create.component.html\n// module chunks = main","import {Component, Input, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport * as _ from \"lodash\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {Observable} from \"rxjs\";\nimport {CompanyService} from \"../services/company.service\";\nimport {Company} from \"../models/company\";\nimport {FileService} from \"../../files/services/file.service\";\nimport {ToastrService} from \"../../shared/toastr.service\";\nimport {unescape} from \"querystring\";\n\n@Component({\n    selector: 'app-company-create',\n    templateUrl: './company-create.component.html',\n    styleUrls: ['./company-create.component.css']\n})\nexport class CompanyCreateComponent implements OnInit {\n\n    fileToUpload: File = null;\n    fileToUploadCompany: File = null;\n    fileToUploadProd: File = null;\n    submitPending: boolean = false;\n    showLogo: boolean = false;\n    showCompanyI: boolean = false;\n    showProdI: boolean = false;\n    logoId: number;\n    logoPath: string;\n    imgId: number;\n    imgPath: string;\n    prodIId: number;\n    prodIPath: string;\n    imageChangedEvent: any = '';\n    croppedImage: any = '';\n    imageChangedCompanyEvent: any = '';\n    croppedCompanyImage: any = '';\n    imageChangedProductEvent: any = '';\n    croppedProductImage: any = '';\n    showBtnSL: boolean = false;\n\n    form: FormGroup;\n    @Input() company: Company;\n    errors = [];\n    private _subscribers = [];\n\n    constructor(public router: Router,\n                public fb: FormBuilder,\n                public companyService: CompanyService,\n                public fileService: FileService,\n                public route: ActivatedRoute,) {\n        this.form = this.fb.group({\n            name_en: ['', Validators.required],\n            name_he: [''],\n            name_es: [''],\n            company_site_url: ['',\n                [Validators.pattern(\"^(http[s]?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$\"), Validators.required]],\n            color_1: ['',\n                [Validators.pattern(\"^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$\"), Validators.required]],\n            color_2: ['', [Validators.pattern(\"^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$\"), Validators.required]],\n            color_3: ['', [Validators.pattern(\"^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$\"), Validators.required]],\n            color_4: ['', Validators.pattern(\"^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$\")],\n            color_5: ['', Validators.pattern(\"^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$\")],\n            alias: ['', Validators.pattern(\"[0-9a-zA-Z\\-]+\")],\n            logo: ['', Validators.required],\n            image_company: ['', Validators.required],\n            image_product_list: ['', Validators.required]\n        });\n\n        this._subscribers.push(this.form.valueChanges.subscribe(\n            () => this.submitPending = false\n        ));\n    }\n\n\n    fileChangeEvent(event: any): void {\n        if(event.target.files[0].size > 1048576) {\n            ToastrService.error(\"Error\", 'Size must be smaller than 1Mb');\n\n        } else {\n            this.imageChangedEvent = event;\n            this.fileToUpload = event.target.files;\n            this.showBtnSL = true;\n        }\n\n    }\n\n    fileChangeCompanyEvent(event: any): void {\n        if(event.target.files[0].size > 1048576) {\n            ToastrService.error(\"Error\", 'Size must be smaller than 1Mb');\n\n        } else {\n            this.imageChangedCompanyEvent = event;\n            this.fileToUploadCompany = event.target.files;\n            this.showCompanyI = true;\n        }\n\n    }\n\n    fileChangeProductEvent(event: any): void {\n        if(event.target.files[0].size > 1048576) {\n            ToastrService.error(\"Error\", 'Size must be smaller than 1Mb');\n\n        } else {\n            this.imageChangedProductEvent = event;\n            this.fileToUploadProd = event.target.files;\n            this.showProdI = true;\n        }\n    }\n\n    imageCropped(image: string) {\n        this.croppedImage = image;\n        this.showBtnSL = true;\n    }\n\n    imageCroppedCompany(image: string) {\n        this.croppedCompanyImage = image;\n        this.showCompanyI = true;\n    }\n\n    imageCroppedProduct(image: string) {\n        this.croppedProductImage = image;\n        this.showProdI = true;\n    }\n\n    imageLoaded() {\n        // show cropper\n    }\n\n    loadImageFailed() {\n        this.showBtnSL = false;\n        this.showCompanyI = false;\n        this.showProdI = false;\n        ToastrService.error(\"Error\", 'Image must be \".jpg\" or \".png\"');\n    }\n\n\n    ngOnInit() {\n\n    }\n\n    onSubmit(form) {\n        if (!this.form.valid) {\n            this.submitPending = true;\n            return;\n        }\n        this.submitPending = true;\n        this.companyService.createCompany(form.value)\n            .subscribe(\n                () => {\n                    this.router.navigate(['./companies']);\n                },\n                (err) => {\n                    this.errors = err.error;\n                }\n            );\n    }\n\n    handleFileInput() {\n        this.uploadFileToActivity(this.croppedImage).subscribe(data => {\n            this.logoId = data.id;\n            this.logoPath = data.path;\n            this.showBtnSL = false;\n            this.form.patchValue({logo: data.id});\n            return true;\n        }, error => {\n            ToastrService.error(\"Error\", error);\n        });\n    }\n\n    handleFileInputCompany() {\n        this.uploadFileToActivity(this.croppedCompanyImage).subscribe(data => {\n            this.imgId = data.id;\n            this.imgPath = data.path;\n            this.showCompanyI = false;\n            this.form.patchValue({image_company: data.id});\n            return true;\n        }, error => {\n            ToastrService.error(\"Error\", error);\n        });\n    }\n\n    handleFileInputProduct() {\n        this.uploadFileToActivity(this.croppedProductImage).subscribe(data => {\n            this.prodIId = data.id;\n            this.prodIPath = data.path;\n            this.showProdI = false;\n            this.form.patchValue({image_product_list: data.id});\n            return true;\n        }, error => {\n            ToastrService.error(\"Error\", error);\n        });\n    }\n\n    uploadFileToActivity(croppedImage: string) {\n        return this.fileService.postFile(this.generateFile(croppedImage));\n    }\n\n\n    private generateFile(dataURI: string): Blob {\n        let byteString;\n        if (dataURI.split(',')[0].indexOf('base64') >= 0) {\n            byteString = atob(dataURI.split(',')[1]);\n        } else {\n            byteString = unescape(dataURI.split(',')[1]);\n        }\n        const type = dataURI\n            .split(',')[0]\n            .split(':')[1]\n            .split(';')[0];\n        const ia = new Uint8Array(byteString.length);\n        for (let i = 0; i < byteString.length; i++) {\n            ia[i] = byteString.charCodeAt(i);\n        }\n        return new Blob([ia], {type});\n    }\n\n    isExistErrorByFormField(formField: string): boolean {\n        return _.has(this.errors, formField);\n    }\n\n    getTextErrorByFormField(formField: string): string {\n        let arrMessage = this.errors[formField];\n        return arrMessage.join(',');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/company/create/company-create.component.ts","module.exports = \"table {\\n    width: 100%;\\n}\\n\\ntable td,\\ntable th {\\n    padding: 5px;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/company/list/company-get.component.css\n// module id = ./src/app/company/list/company-get.component.css\n// module chunks = main","module.exports = \"<div class=\\\"wrapper-content\\\">\\n    <div class=\\\"table-wrapper\\\">\\n        <div class=\\\"wrap-header\\\">\\n            <h3>{{title}}</h3>\\n        </div>\\n        <div class=\\\"wrap-tmain\\\">\\n            <div class=\\\"table-scroll\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-block\\\" style=\\\"padding-bottom: 0\\\">\\n                        <table border=\\\"1\\\">\\n                            <thead>\\n                            <tr class=\\\"ng2-smart-titles\\\">\\n                                <th class=\\\"ng2-smart-actions\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">Actions</div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        #\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        Used by recipes\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        Logo\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        Company Name\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th \\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        Site\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th status\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        Status\\n                                    </div>\\n                                </th>\\n                            </tr>\\n                            <tr class=\\\"ng2-smart-filters\\\">\\n                                <th class=\\\"ng2-smart-actions-title ng2-smart-actions-title-add\\\">\\n                                    <a routerLink=\\\"/companies/create\\\" routerLinkActive=\\\"active\\\"\\n                                       class=\\\"btn btn-secondary\\\" href=\\\"#\\\">+ Add New</a>\\n                                </th>\\n                                <th></th>\\n                                <th></th>\\n                                <th></th>\\n                                <th class=\\\"ng2-smart-th email\\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n                                        <div class=\\\"ng2-smart-filter\\\">\\n                                            <input class=\\\"form-control ng-untouched ng-pristine ng-valid\\\"\\n                                                   [(ngModel)]=\\\"searchName\\\"\\n                                                   (keyup.enter)=\\\"applyFilters($event)\\\"\\n                                                   type=\\\"text\\\"\\n                                                   placeholder=\\\"Name\\\">\\n                                        </div>\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th regDate\\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n                                        <div class=\\\"ng2-smart-filter\\\">\\n                                            <input class=\\\"form-control ng-untouched ng-pristine ng-valid\\\"\\n                                                   [(ngModel)]=\\\"searchUrl\\\"\\n                                                   (keyup.enter)=\\\"applyFilters($event)\\\"\\n                                                   type=\\\"text\\\"\\n                                                   placeholder=\\\"URL\\\">\\n                                        </div>\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th age\\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n                                        <select\\n                                                class=\\\"form-control underline\\\"\\n                                                (change)=\\\"applyFilters($event)\\\"\\n                                                [(ngModel)]=\\\"searchStatus\\\">\\n                                            <option *ngFor=\\\"let status of statusOptionsSelect\\\"\\n                                                    [value]=\\\"status.value\\\"\\n                                                    (onClick)=\\\"applyFilters($event)\\\">\\n                                                {{ status.label }}\\n                                            </option>\\n                                        </select>\\n                                    </div>\\n                                </th>\\n                            </tr>\\n                            </thead>\\n                            <tbody>\\n                            <tr *ngFor=\\\"let company of itemList; let i = index\\\">\\n                                <td>\\n                                    <a *ngIf=\\\"company.status == 1\\\" [routerLink]=\\\"['update/' + company.id]\\\"\\n                                       routerLinkActive=\\\"active\\\" class=\\\"btn btn-info\\\">\\n                                        <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i> edit</a>\\n                                    <button *ngIf=\\\"company.status == 1\\\" class=\\\"btn btn-danger\\\"\\n                                            [disabled]=\\\"company.activeRecipeCount != '0'\\\"\\n                                            title=\\\"This company used in {{company.activeRecipeCount}} recipes\\\"\\n                                            (click)=\\\"onDelete($event, content, company)\\\">\\n                                        <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i> delete\\n                                    </button>\\n                                </td>\\n                                <td>{{(i+1) + (page - 1) * selectedLimit}}</td>\\n                                <td>{{company.activeRecipeCount}}</td>\\n                                <td>\\n                                    <img *ngIf=\\\"company.logo?.path\\\" src=\\\"{{company.logo?.path}}\\\" alt=\\\"logo\\\">\\n                                </td>\\n\\n                                <td>{{company.name_en}}</td>\\n                                <td title=\\\"{{company.company_site_url}}\\\" class=\\\"ellipsis elipsis-table\\\">\\n                                    {{company.company_site_url}}\\n                                </td>\\n                                <td><span class=\\\"active-status edit\\\" *ngIf=\\\"company.status == 1 \\\">Active</span>\\n                                    <span class=\\\"deleted-status delete\\\" *ngIf=\\\"company.status == 3 \\\">Deleted</span>\\n                                </td>\\n                            </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                    <div class=\\\"page-select\\\">\\n                        <div class=\\\"col-sm-8\\\">\\n                            <select class=\\\"form-control\\\" style=\\\"width: 200px;\\\"\\n                                    [(ngModel)]=\\\"selectedLimit\\\"\\n                                    (change)=\\\"onLimitSelected($event)\\\">\\n                                <option *ngFor=\\\"let item of limitOptionsSelect\\\" [value]=\\\"item.value\\\">\\n                                    {{ item.label }}\\n                                </option>\\n                            </select>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\" *ngIf=\\\"itemSize > selectedLimit\\\">\\n                            <ngb-pagination\\n                                    [collectionSize]=\\\"itemSize\\\"\\n                                    [(page)]=\\\"page\\\"\\n                                    (pageChange)=\\\"onPageChange($event)\\\"\\n                                    [pageSize]=\\\"selectedLimit\\\"\\n                                    [rotate]=\\\"true\\\"\\n                                    [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\\n\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n        <i class=\\\"material-icons\\\">clear</i>\\n    </button>\\n    <div class=\\\"modal-body delete-modal clearfix\\\">\\n        <p>Are you sure you want to delete the company <b>«{{itemTitle}}»?</b></p>\\n        <span>This action cannot be undone </span>\\n\\n        <button type=\\\"button\\\" class=\\\"btn m-btn_no-bg margin-right\\\" (click)=\\\"d('no')\\\">Cancel</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-color\\\" (click)=\\\"c('yes')\\\">Delete it!</button>\\n    </div>\\n</ng-template>\\n\\n<template ngbModalContainer></template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/company/list/company-get.component.html\n// module id = ./src/app/company/list/company-get.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport * as _ from \"lodash\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {CompanyService} from \"../services/company.service\";\nimport {Company} from \"../models/company\";\nimport {Observable} from \"rxjs/Observable\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n    selector: 'app-company-get',\n    templateUrl: './company-get.component.html',\n    styleUrls: ['./company-get.component.css']\n})\nexport class CompanyGetComponent implements OnInit {\n    itemList: Company[];\n    itemSize: number;\n    private title = 'Company list';\n\n    // search models\n    searchName = '';\n    searchUrl = '';\n    searchStatus = 1;\n\n    itemTitle: string;\n\n    isShowPagination: boolean = true;\n    statusOptionsSelect = [\n        {\n            value: '',\n            label: 'All'\n        },\n        {\n            value: 1,\n            label: 'Active'\n        },\n        {\n            value: 3,\n            label: 'Deleted'\n        }\n    ];\n    public limitOptionsSelect = [\n        {\n            value: 5,\n            label: '5'\n        },\n        {\n            value: 10,\n            label: '10'\n        },\n        {\n            value: 20,\n            label: '20'\n        },\n        {\n            value: 50,\n            label: '50'\n        },\n        {\n            value: 100,\n            label: '100'\n        }\n    ];\n    public page = 1;\n\n    public selectedLimit = 10;\n\n    private _subscribers = [];\n\n    constructor(public entityService: CompanyService,\n                private modalService: NgbModal,\n                private _route: ActivatedRoute) {\n\n        this._subscribers.push(this._route.data.subscribe((res: any) => {\n            this.itemList = _.take(res.data[0].data, this.selectedLimit);\n            this.itemSize = +res.data[0].count;\n        }));\n    }\n\n    onDelete(event, content, company: Company) {\n        event.preventDefault();\n        this.itemTitle = company.name_en;\n        this.modalService.open(content).result.then((result) => {\n            this._subscribers.push(Observable.concat(\n                this.entityService.deleteById(company.id),\n                this.entityService.getList(this.buildListResponseObject())\n            ).subscribe(\n                (res: any) => {\n                    if (res) {\n                        this.itemList = res.data;\n                        this.itemSize = +res.count;\n                    }\n                },\n                (err) => {\n\n                }\n            ))\n        });\n    }\n\n    ngOnInit() {\n    }\n\n    ngOnDestroy() {\n        _.forEach(this._subscribers, (value) => {\n            value.unsubscribe();\n        });\n    }\n\n    public onLimitSelected(selected) {\n        this.page = 1;\n        this.listRequest();\n    }\n\n    /**\n     * Use this method to get current list\n     * @param page\n     */\n    private listRequest(page?) {\n        this._subscribers.push(this.entityService.getList(this.buildListResponseObject(page))\n            .subscribe(\n                (res: { data: any, count: number }) => {\n                    this.itemList = res.data;\n                    this.itemSize = +res.count;\n                },\n                (err) => {\n\n                }\n            ));\n    }\n\n    /**\n     * Use this method to prepare request object for list. Sets limits, pagination, etc.\n     * @param page\n     * @returns {{query: any, page: (any|number), limit: number, sort: string, order: number, filter: string}}\n     */\n    private buildListResponseObject(page?) {\n        return {\n            page: page || this.page,\n            limit: this.selectedLimit,\n            status: this.searchStatus,\n            name: this.searchName,\n            url: this.searchUrl,\n        }\n    }\n\n    public onPageChange(event) {\n        this.listRequest(event);\n    }\n\n    public applyFilters(event) {\n        event.preventDefault();\n        this.page = 1;\n        this.listRequest(1);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/company/list/company-get.component.ts","import {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from \"@angular/router\";\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs/add/observable/of\";\nimport {CompanyService} from \"../services/company.service\";\n\n@Injectable()\nexport class ListResolver implements Resolve<any> {\n    constructor(private companyService: CompanyService) {\n\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\n        let reqObj = {\n            page: 1,\n            limit: 10,\n            status: 1,\n            // order: 1\n        };\n        return Observable.forkJoin(\n            this.companyService.getList(reqObj)\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/company/list/list.resolver.ts","export class Company {\n    id: number;\n    alias: string;\n    name_en: string;\n    name_he: string;\n    name_es: string;\n    company_site_url: string;\n    logo: number;\n    image_company: number;\n    image_product_list: number;\n    color_1: string;\n    color_2: string;\n    color_3: string;\n    color_4: string;\n    color_5: string;\n    status: number;\n    created_at: number;\n    created_by: number;\n    updated_at: number;\n    updated_by: number;\n    deleted_at: number;\n    deleted_by: number;\n    activeRecipeCount?: string;\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/company/models/company.ts","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {ToastrService} from \"../../shared/toastr.service\";\nimport {Observable} from \"rxjs\";\nimport {AuthService} from \"../../authentication/services/auth.service\";\nimport {Company} from \"../models/company\";\nimport {ErrorHandler} from \"../../shared/error-handler.service\";\nimport {ListRequest} from \"../../shared/models/list-request.model\";\nimport {ListRequestService} from \"../../shared/list-request.service\";\n\n@Injectable()\nexport class CompanyService {\n\n    private path = '/v1/companies';\n\n    constructor(private http: HttpClient,\n                private errorHandler: ErrorHandler,\n                private authService: AuthService) {\n    }\n\n    private getHeaders() {\n        return new HttpHeaders().set('Authorization', 'Bearer ' + this.authService.getAuthToken());\n    }\n\n    getCompanies(): Observable<any> {\n        // get company from api\n        return this.http.get(this.path, {headers: this.getHeaders()})\n            .do((response: any) => response)\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n\n\n    getList(resObj: ListRequest = {}): Observable<{}> {\n        // get company from api\n        return this.http.get(this.path + '?' + ListRequestService.parseRequestObject(resObj), {headers: this.getHeaders()})\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n\n    getViewById(id: number): Observable<{}> {\n        return this.http.get(this.path + '/' + id, {headers: this.getHeaders()})\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n\n    createCompany(form): Observable<{}> {\n        return this.http.post(this.path, form, {headers: this.getHeaders()})\n            .do(() => ToastrService.success(\"\", \"Company was create\"))\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n\n\n    editCompany(form, id): Observable<any> {\n        return this.http.put(this.path + '/' + id, form, {headers: this.getHeaders()})\n            .do(() => ToastrService.success(\"\", \"Company was update\"))\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n\n    deleteById(id): Observable<{}> {\n        return this.http.delete(this.path + '/' + id, {headers: this.getHeaders()})\n            .do(() => ToastrService.success(\"\", \"Company was delete\"))\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/company/services/company.service.ts","module.exports = \"input.ng-touched.ng-invalid {\\n    border-color: red;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/company/update/company-update.component.css\n// module id = ./src/app/company/update/company-update.component.css\n// module chunks = main","module.exports = \"<div class=\\\"table-wrapper\\\">\\n    <div class=\\\"wrap-header\\\"></div>\\n    <div class=\\\"wrap-tmain\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header card-success card-inverse\\\">\\n                <span class=\\\"card-title\\\">Create company</span>\\n            </div>\\n            <div class=\\\"card-block\\\">\\n                <form novalidate [ngClass]=\\\"{'form-error':submitPending }\\\" [formGroup]=\\\"form\\\"\\n                      (ngSubmit)=\\\"onSubmit(form)\\\">\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"inputNameCompany\\\">Name\\n                            company</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" formControlName=\\\"name_en\\\" id=\\\"inputNameCompany\\\"\\n                                   placeholder=\\\"Name company\\\" type=\\\"text\\\">\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"form.get('name_en').hasError('required') && submitPending\\\">\\n                                Name company is required</p>\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"isExistErrorByFormField('name_en')\\\">{{\\n                                getTextErrorByFormField('name_en') }}</p>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"inputNameCompanyhe\\\">Name company\\n                            \\\"Heb\\\"</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" id=\\\"inputNameCompanyhe\\\" formControlName=\\\"name_he\\\"\\n                                   placeholder=\\\"Name company 'Heb'\\\" type=\\\"text\\\">\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"isExistErrorByFormField('name_he')\\\">{{\\n                                getTextErrorByFormField('name_he') }}</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"inputNameCompanyes\\\">Name company\\n                            'Es'</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" id=\\\"inputNameCompanyes\\\" formControlName=\\\"name_es\\\"\\n                                   placeholder=\\\"Name company 'Es'\\\" type=\\\"text\\\">\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"isExistErrorByFormField('name_es')\\\">{{\\n                                getTextErrorByFormField('name_es') }}</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"inputLinktosite\\\">Company site\\n                            URL</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" id=\\\"inputLinktosite\\\"\\n                                   formControlName=\\\"company_site_url\\\" placeholder=\\\"https://site.name\\\">\\n                            <p class=\\\"error_message\\\"\\n                               *ngIf=\\\"form.get('company_site_url').hasError('required') && submitPending\\\">Url company is\\n                                required</p>\\n                            <p class=\\\"error_message\\\"\\n                               *ngIf=\\\"form.get('company_site_url').hasError('pattern') && submitPending\\\">Url company\\n                                must be https://</p>\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"isExistErrorByFormField('company_site_url')\\\">{{\\n                                getTextErrorByFormField('company_site_url') }}</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"inputCompanycolor\\\">Company\\n                            color</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" id=\\\"inputCompanycolor\\\" formControlName=\\\"color_1\\\"\\n                                   placeholder=\\\"#ffffff\\\">\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"form.get('color_1').hasError('required') && submitPending\\\">\\n                                Color is required</p>\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"form.get('color_1').hasError('pattern') && submitPending\\\">\\n                                Color must be #ff0000</p>\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"isExistErrorByFormField('color_1')\\\">{{\\n                                getTextErrorByFormField('color_1') }}</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"inputButtoncolor\\\">Button\\n                            color</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" id=\\\"inputButtoncolor\\\" formControlName=\\\"color_2\\\"\\n                                   placeholder=\\\"#ffffff\\\">\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"form.get('color_2').hasError('required') && submitPending\\\">\\n                                Color is required</p>\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"form.get('color_2').hasError('pattern') && submitPending\\\">\\n                                Color must be #ff0000</p>\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"isExistErrorByFormField('color_2')\\\">{{\\n                                getTextErrorByFormField('color_2') }}</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"inputButtonBackcolor\\\">Button\\n                            background color</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" id=\\\"inputButtonBackcolor\\\" formControlName=\\\"color_3\\\"\\n                                   placeholder=\\\"#ffffff\\\">\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"form.get('color_3').hasError('required') && submitPending\\\">\\n                                Color is required</p>\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"form.get('color_3').hasError('pattern') && submitPending\\\">\\n                                Color must be #ff0000</p>\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"isExistErrorByFormField('color_3')\\\">{{\\n                                getTextErrorByFormField('color_3') }}</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"inputAlias\\\">Alias</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" id=\\\"inputAlias\\\" formControlName=\\\"alias\\\"\\n                                   placeholder=\\\"alias\\\">\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"form.get('alias').hasError('required') && submitPending\\\">\\n                                Alias is required</p>\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"isExistErrorByFormField('alias')\\\">{{\\n                                getTextErrorByFormField('alias') }}</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"fileLogo\\\">Logo</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input type=\\\"file\\\" id=\\\"fileLogo\\\" (change)=\\\"fileChangeEvent($event)\\\"/>\\n\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <input type=\\\"hidden\\\" formControlName=\\\"logo\\\">\\n                                    <p class=\\\"error_message\\\"\\n                                       *ngIf=\\\"form.get('logo').hasError('required') && submitPending\\\">\\n                                        Logo is required</p>\\n                                    <image-cropper\\n                                        [imageChangedEvent]=\\\"imageChangedEvent\\\"\\n                                        [maintainAspectRatio]=\\\"true\\\"\\n                                        [aspectRatio]=\\\"1\\\"\\n                                        [resizeToWidth]=\\\"256\\\"\\n                                        format=\\\"png, jpeg\\\"\\n                                        (imageCropped)=\\\"imageCropped($event)\\\"\\n                                        (imageLoaded)=\\\"imageLoaded()\\\"\\n                                        (loadImageFailed)=\\\"loadImageFailed()\\\"\\n                                    ></image-cropper>\\n                                </div>\\n                                <div class=\\\"col-sm-6  preview-img \\\">\\n                                    <img [src]=\\\"croppedImage\\\"/>\\n                                    <div>\\n                                        <span *ngIf=\\\"showBtnSL\\\" (click)=\\\"handleFileInput()\\\" class=\\\"btn btn-danger mt10\\\">Save image</span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"fileImage\\\">Background\\n                            company</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input type=\\\"file\\\" id=\\\"fileImage\\\" (change)=\\\"fileChangeCompanyEvent($event)\\\"/>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <input type=\\\"hidden\\\" formControlName=\\\"image_company\\\">\\n                                    <p class=\\\"error_message\\\"\\n                                       *ngIf=\\\"form.get('image_company').hasError('required') && submitPending\\\">\\n                                        Image company is required</p>\\n                                    <image-cropper\\n                                        [imageChangedEvent]=\\\"imageChangedCompanyEvent\\\"\\n                                        [maintainAspectRatio]=\\\"true\\\"\\n                                        [aspectRatio]=\\\"4 / 2\\\"\\n                                        [resizeToWidth]=\\\"500\\\"\\n                                        format=\\\"png, jpeg\\\"\\n                                        (imageCropped)=\\\"imageCroppedCompany($event)\\\"\\n                                        (imageLoaded)=\\\"imageLoaded()\\\"\\n                                        (loadImageFailed)=\\\"loadImageFailed()\\\"\\n                                    ></image-cropper>\\n                                </div>\\n                                <div class=\\\"col-sm-6  preview-img \\\">\\n                                    <img [src]=\\\"croppedCompanyImage\\\"/>\\n                                    <div>\\n                                        <span *ngIf=\\\"showCompanyI\\\" (click)=\\\"handleFileInputCompany()\\\"\\n                                              class=\\\"btn btn-danger mt10\\\">Save image</span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"fileProd\\\">Background products\\n                            list</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input type=\\\"file\\\" id=\\\"fileProd\\\" (change)=\\\"fileChangeProductEvent($event)\\\"/>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <input type=\\\"hidden\\\" formControlName=\\\"image_product_list\\\">\\n                                    <p class=\\\"error_message\\\"\\n                                       *ngIf=\\\"form.get('image_product_list').hasError('required') && submitPending\\\">\\n                                        Image product list is required</p>\\n                                    <image-cropper\\n                                        [imageChangedEvent]=\\\"imageChangedProductEvent\\\"\\n                                        [maintainAspectRatio]=\\\"false\\\"\\n                                        [resizeToWidth]=\\\"256\\\"\\n                                        format=\\\"png, jpeg\\\"\\n                                        (imageCropped)=\\\"imageCroppedProduct($event)\\\"\\n                                        (imageLoaded)=\\\"imageLoaded()\\\"\\n                                        (loadImageFailed)=\\\"loadImageFailed()\\\"\\n\\n                                    ></image-cropper>\\n                                </div>\\n                                <div class=\\\"col-sm-6  preview-img \\\">\\n                                    <img [src]=\\\"croppedProductImage\\\"/>\\n                                    <div>\\n                                        <span *ngIf=\\\"showProdI\\\" (click)=\\\"handleFileInputProduct()\\\"\\n                                              class=\\\"btn btn-danger mt10\\\">Save image</span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n                            <button class=\\\"btn btn-danger btn-bordered margin-right\\\" type=\\\"button\\\"\\n                                    [routerLink]=\\\"['/companies']\\\">Cancel\\n                            </button>\\n                            <button type=\\\"submit\\\"\\n                                    class=\\\"btn btn-primary btn-bordered\\\">Save\\n                            </button>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/company/update/company-update.component.html\n// module id = ./src/app/company/update/company-update.component.html\n// module chunks = main","import {Component, Input, OnInit} from '@angular/core';\nimport * as _ from \"lodash\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Company} from \"../models/company\";\nimport {CompanyService} from \"../services/company.service\";\nimport {FileService} from \"../../files/services/file.service\";\nimport {ToastrService} from \"../../shared/toastr.service\";\nimport {unescape} from \"querystring\";\n\n@Component({\n    selector: 'app-company-update',\n    templateUrl: './company-update.component.html',\n    styleUrls: ['./company-update.component.css']\n})\nexport class CompanyUpdateComponent implements OnInit {\n\n    fileToUpload: File = null;\n    fileToUploadCompany: File = null;\n    fileToUploadProd: File = null;\n    submitPending: boolean = false;\n    showLogo: boolean = false;\n    showCompanyI: boolean = false;\n    showProdI: boolean = false;\n    logoId: number;\n    logoPath: string;\n    imgId: number;\n    imgPath: string;\n    prodIId: number;\n    prodIPath: string;\n    imageChangedEvent: any = '';\n    croppedImage: any = '';\n    imageChangedCompanyEvent: any = '';\n    croppedCompanyImage: any = '';\n    imageChangedProductEvent: any = '';\n    croppedProductImage: any = '';\n    showBtnSL: boolean = false;\n\n    form: FormGroup;\n    @Input() company: Company;\n\n    id: number;\n    companyOptionsSelect = [];\n    private _companies = [];\n\n    unitOptionsSelect = [];\n    private _units = [];\n\n    ingredientOptionsSelect = [];\n    private _ingredients = [];\n\n    statusOptionsSelect = [];\n\n    languageOptionsSelect = ['en', 'he', 'es'];\n\n    private _subscribers = [];\n    errors = [];\n\n    constructor(public router: Router,\n                public fb: FormBuilder,\n                public companyService: CompanyService,\n                public fileService: FileService,\n                public _route: ActivatedRoute,) {\n\n        this.form = this.fb.group({\n            name_en: ['', Validators.required],\n            name_he: [''],\n            name_es: [''],\n            company_site_url: ['',\n                [Validators.pattern(\"^(http[s]?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$\"), Validators.required]],\n            color_1: ['',\n                [Validators.pattern(\"^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$\"), Validators.required]],\n            color_2: ['', [Validators.pattern(\"^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$\"), Validators.required]],\n            color_3: ['', [Validators.pattern(\"^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$\"), Validators.required]],\n            color_4: ['', Validators.pattern(\"^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$\")],\n            color_5: ['', Validators.pattern(\"^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$\")],\n            alias: ['', Validators.pattern(\"[0-9a-zA-Z\\-]+\")],\n            logo: ['', Validators.required],\n            image_company: ['', Validators.required],\n            image_product_list: ['', Validators.required]\n        });\n\n        this._subscribers.push(this.form.valueChanges.subscribe(\n            () => this.submitPending = false\n        ));\n\n        this._subscribers.push(this._route.data.subscribe((res: any) => {\n            this.id = res.data[0].id;\n            this.form.patchValue(res.data[0]);\n            if (res.data[0].logo !== null) {\n                this.form.patchValue({logo: res.data[0].logo.id});\n                this.croppedImage = res.data[0].logo.path;\n            }\n            if (res.data[0].imageCompany !== null) {\n                this.form.patchValue({imageCompany: res.data[0].imageCompany.id})\n                this.croppedCompanyImage = res.data[0].imageCompany.path;\n            }\n            if (res.data[0].imageProductList !== null) {\n                this.form.patchValue({imageProductList: res.data[0].imageProductList.id});\n                this.croppedProductImage = res.data[0].imageProductList.path;\n            }\n        }));\n    }\n\n    fileChangeEvent(event: any): void {\n        if(event.target.files[0].size > 1048576) {\n            ToastrService.error(\"Error\", 'Size must be smaller than 1Mb');\n\n        } else {\n            this.imageChangedEvent = event;\n            this.fileToUpload = event.target.files;\n            this.showBtnSL = true;\n        }\n    }\n\n    fileChangeCompanyEvent(event: any): void {\n        if(event.target.files[0].size > 1048576) {\n            ToastrService.error(\"Error\", 'Size must be smaller than 1Mb');\n\n        } else {\n            this.imageChangedCompanyEvent = event;\n            this.fileToUploadCompany = event.target.files;\n            this.showCompanyI = true;\n        }\n    }\n\n    fileChangeProductEvent(event: any): void {\n        if(event.target.files[0].size > 1048576) {\n            ToastrService.error(\"Error\", 'Size must be smaller than 1Mb');\n\n        } else {\n            this.imageChangedProductEvent = event;\n            this.fileToUploadProd = event.target.files;\n            this.showProdI = true;\n        }\n    }\n\n    imageCropped(image: string) {\n        this.croppedImage = image;\n        this.showBtnSL = true;\n    }\n\n    imageCroppedCompany(image: string) {\n        this.croppedCompanyImage = image;\n        this.showCompanyI = true;\n    }\n\n    imageCroppedProduct(image: string) {\n        this.croppedProductImage = image;\n        this.showProdI = true;\n    }\n\n    imageLoaded() {\n        // show cropper\n\n    }\n\n    loadImageFailed() {\n        this.showBtnSL = false;\n        this.showCompanyI = false;\n        this.showProdI = false;\n        ToastrService.error(\"Error\", 'Image must be \".jpg\" or \".png\"');\n    }\n\n\n    ngOnInit() {\n\n    }\n\n    onSubmit(form) {\n        if (!this.form.valid) {\n            this.submitPending = true;\n            return;\n        }\n        this.submitPending = true;\n        this.companyService.editCompany(form.value, this.id)\n            .subscribe(() => {\n                    this.router.navigate(['./companies']);\n                },\n                (err) => {\n                    this.errors = err.error;\n                });\n    }\n\n    handleFileInput() {\n        this.uploadFileToActivity(this.croppedImage).subscribe(data => {\n            this.logoId = data.id;\n            this.logoPath = data.path;\n            this.showBtnSL = false;\n            this.form.patchValue({logo: data.id});\n            return true;\n        }, error => {\n            ToastrService.error(\"Error\", error);\n        });\n    }\n\n    handleFileInputCompany() {\n        this.uploadFileToActivity(this.croppedCompanyImage).subscribe(data => {\n            this.imgId = data.id;\n            this.imgPath = data.path;\n            this.showCompanyI = false;\n            this.form.patchValue({image_company: data.id});\n            return true;\n        }, error => {\n            ToastrService.error(\"Error\", error);\n        });\n    }\n\n    handleFileInputProduct() {\n        this.uploadFileToActivity(this.croppedProductImage).subscribe(data => {\n            this.prodIId = data.id;\n            this.prodIPath = data.path;\n            this.showProdI = false;\n            this.form.patchValue({image_product_list: data.id});\n            return true;\n        }, error => {\n            ToastrService.error(\"Error\", error);\n        });\n    }\n\n    uploadFileToActivity(croppedImage: string) {\n        return this.fileService.postFile(this.generateFile(croppedImage));\n    }\n\n\n    private generateFile(dataURI: string): Blob {\n        let byteString;\n        if (dataURI.split(',')[0].indexOf('base64') >= 0) {\n            byteString = atob(dataURI.split(',')[1]);\n        } else {\n            byteString = unescape(dataURI.split(',')[1]);\n        }\n        const type = dataURI\n            .split(',')[0]\n            .split(':')[1]\n            .split(';')[0];\n        const ia = new Uint8Array(byteString.length);\n        for (let i = 0; i < byteString.length; i++) {\n            ia[i] = byteString.charCodeAt(i);\n        }\n        return new Blob([ia], {type});\n    }\n\n    isExistErrorByFormField(formField: string): boolean {\n        return _.has(this.errors, formField);\n    }\n\n    getTextErrorByFormField(formField: string): string {\n        let arrMessage = this.errors[formField];\n        return arrMessage.join(',');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/company/update/company-update.component.ts","import {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from \"@angular/router\";\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs/add/observable/of\";\nimport {CompanyService} from \"../services/company.service\";\n\n\n@Injectable()\nexport class UpdateResolver implements Resolve<any> {\n    constructor(private companyService: CompanyService) {\n\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\n\n        return Observable.forkJoin(\n            this.companyService.getViewById(route.params['id'])\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/company/update/update.resolver.ts","import {NgModule} from \"@angular/core\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {CommonModule} from \"@angular/common\";\nimport {RouterModule} from \"@angular/router\";\nimport {NoContent} from \"./no-content/no-content.component\";\nimport {NavigationComponent} from \"./navigation/navigation.component\";\nimport {OutletComponent} from \"./view.component\";\nimport {RootComponent} from \"./root.component\";\nimport {UnauthorizedComponent} from \"./unauthorized/unauthorized.component\";\n\n@NgModule({\n    declarations: [\n        NoContent,\n        UnauthorizedComponent,\n        NavigationComponent,\n        OutletComponent,\n        RootComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        RouterModule,\n        ReactiveFormsModule,\n    ],\n    exports: [\n        RouterModule\n    ],\n    providers: []\n})\nexport class CoreModule {\n    constructor() {\n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/core/core.module.ts","module.exports = \"<div class=\\\"topbar\\\">\\n    <!-- LOGO -->\\n\\n    <!-- Button mobile view to collapse sidebar menu -->\\n    <div class=\\\"navbar navbar-default\\\" role=\\\"navigation\\\">\\n        <div class=\\\"container-fluide\\\">\\n            <div class=\\\"\\\">\\n\\n                <ul class=\\\"nav navbar-nav navbar-right navbar-right-top pull-right\\\">\\n                    <li class=\\\"hidden-xs\\\">\\n                        <a (click)=\\\"logout($event)\\\" id=\\\"btn-fullscreen\\\" class=\\\"waves-effect waves-light\\\"><i\\n                            class=\\\"fa fa-external-link\\\"></i></a>\\n                    </li>\\n                    <li class=\\\"dropdown\\\">\\n                        <a href=\\\"\\\" class=\\\"dropdown-toggle profile waves-effect waves-light\\\" data-toggle=\\\"dropdown\\\"\\n                           aria-expanded=\\\"true\\\">\\n                            <img src=\\\"js/ng/assets/images/users/no-image.png\\\" alt=\\\"user-img\\\" class=\\\"img-circle\\\">\\n                            Admin\\n                        </a>\\n                    </li>\\n\\n                    <li class=\\\"log-out\\\">\\n                        <a href=\\\"/site/logout\\\" class=\\\"waves-effect\\\" title=\\\"Log Out\\\"><i\\n                            class=\\\"icon-logout\\\"></i><span></span></a>\\n                    </li>\\n                </ul>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"left side-menu\\\">\\n    <div class=\\\"slimScrollDiv\\\">\\n        <div class=\\\"sidebar-inner slimscrollleft\\\">\\n            <div class=\\\"sidebar-header\\\">\\n                <img src=\\\"/images/crazy-sob-logo.png\\\"\\n                     style=\\\"width: 70px\\\" alt=\\\"Crazy Sob\\\">\\n                Crazy-SOB\\n            </div>\\n            <!--- Divider -->\\n            <div id=\\\"sidebar-menu\\\">\\n                <ul class=\\\"navigation\\\">\\n                    <li>\\n                        <a routerLink=\\\"/users\\\" class=\\\"waves-effect\\\" routerLinkActive=\\\"active\\\">\\n                            <i class=\\\"fa fa-users\\\"></i>\\n                            <span> Users </span>\\n                        </a>\\n                    </li>\\n                    <li>\\n                        <a routerLink=\\\"/companies\\\" class=\\\"waves-effect\\\" routerLinkActive=\\\"active\\\">\\n                            <i class=\\\"fa fa-building-o\\\"></i>\\n                            <span> Companies </span>\\n                        </a>\\n                    </li>\\n                    <li>\\n                        <a routerLink=\\\"/categories\\\" class=\\\"waves-effect\\\" routerLinkActive=\\\"active\\\">\\n                            <i class=\\\"fa fa-calendar-check-o\\\"></i>\\n                            <span> Categories </span>\\n                        </a>\\n                    </li>\\n                    <li>\\n                        <a routerLink=\\\"/units\\\" class=\\\"waves-effect\\\" routerLinkActive=\\\"active\\\">\\n                            <i class=\\\"fa fa-window-restore\\\"></i>\\n                            <span> Units </span>\\n                        </a>\\n                    </li>\\n                    <li>\\n                        <a routerLink=\\\"/ingredients\\\" class=\\\"waves-effect\\\" routerLinkActive=\\\"active\\\">\\n                            <i class=\\\"fa fa-shopping-basket\\\"></i>\\n                            <span> Ingredients </span>\\n                        </a>\\n                    </li>\\n                    <li>\\n                        <a routerLink=\\\"/recipes\\\" class=\\\"waves-effect\\\" routerLinkActive=\\\"active\\\">\\n                            <i class=\\\"fa fa-calendar-check-o\\\"></i>\\n                            <span> Recipes </span>\\n                        </a>\\n                    </li>\\n                    <li>\\n                        <a routerLink=\\\"/dictionaries\\\" class=\\\"waves-effect\\\" routerLinkActive=\\\"active\\\">\\n                            <i class=\\\"fa fa-list\\\"></i>\\n                            <span> Dictionaries </span>\\n                        </a>\\n                    </li>\\n                    <li>\\n                        <a routerLink=\\\"/coupons\\\" class=\\\"waves-effect\\\" routerLinkActive=\\\"active\\\">\\n                            <i class=\\\"fa fa-gift\\\"></i>\\n                            <span> Coupons </span>\\n                        </a>\\n                    </li>\\n                </ul>\\n            </div>\\n            <div class=\\\"clearfix\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/core/navigation/navigation.component.html\n// module id = ./src/app/core/navigation/navigation.component.html\n// module chunks = main","import * as _ from 'lodash';\nimport {Component, OnInit, OnDestroy, AfterViewInit} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {AuthService} from \"../../authentication/services/auth.service\";\n\n@Component({\n    selector: 'nav-component',\n    templateUrl: './navigation.component.html'\n})\n\nexport class NavigationComponent implements OnInit, AfterViewInit, OnDestroy {\n    private _subscribers = [];\n\n    constructor(private router: Router,\n                public _authService: AuthService) {\n\n    }\n\n    ngOnInit() {\n\n    }\n\n    ngOnDestroy() {\n        _.forEach(this._subscribers, (value) => {\n            value.unsubscribe();\n        });\n    }\n\n    ngAfterViewInit() {\n    }\n\n\n    public logout(event) {\n        event.preventDefault();\n        this._subscribers.push(this._authService.logout().subscribe(\n            (res) => {\n            },\n            (err) => {\n            }\n        ))\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/core/navigation/navigation.component.ts","import {Component} from '@angular/core';\n\n@Component({\n    selector: 'no-content',\n    templateUrl: './no-content.html'\n})\nexport class NoContent {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/core/no-content/no-content.component.ts","module.exports = \"<div class=\\\"container text-center\\\" rel=\\\"error-page\\\" style=\\\"height: 100vh\\\">\\n    <div style=\\\"height: 100%; display: flex; align-items: center; justify-content: center; flex-wrap: wrap;\\\">\\n        <div>\\n            <h2 style=\\\"width: 100%; font-size: 40px; font-weight: 800; margin-bottom: 30px;\\\">\\n                <span class=\\\"text-error\\\" style=\\\"font-size: 55px;\\\">404:</span> Page Not Found</h2>\\n            <p style=\\\"width: 100%; font-size: 16px; font-weight: 400;\\\">Please, try\\n                <a routerLink=\\\"/categories\\\">return to app</a></p>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/core/no-content/no-content.html\n// module id = ./src/app/core/no-content/no-content.html\n// module chunks = main","import {Component} from \"@angular/core\";\n\n@Component({\n    selector: 'view',\n    template: `\n        <div class=\"twocolumn\">\n            <nav-component></nav-component>\n\n            <router-outlet></router-outlet>\n        </div>\n\n        <!--<footer></footer>-->`\n})\nexport class RootComponent {\n    constructor() {\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/core/root.component.ts","module.exports = \"<div class=\\\"container text-center\\\" rel=\\\"error-page\\\" style=\\\"height: 100vh\\\">\\n    <div style=\\\"height: 100%; display: flex; align-items: center; justify-content: center; flex-wrap: wrap;\\\">\\n        <div>\\n            <h2 style=\\\"width: 100%; font-size: 40px; font-weight: 800; margin-bottom: 30px;\\\">\\n                <span class=\\\"text-error\\\" style=\\\"font-size: 55px;\\\">401:</span> Unauthorized</h2>\\n            <p style=\\\"width: 100%; font-size: 16px; font-weight: 400;\\\">Please, try\\n                <a routerLink=\\\"/login\\\">login</a> if you are registered or contact us.</p>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/core/unauthorized/unauthorized.component.html\n// module id = ./src/app/core/unauthorized/unauthorized.component.html\n// module chunks = main","import {Component, OnInit} from \"@angular/core\";\n\n@Component({\n    selector: 'authorized',\n    templateUrl: 'unauthorized.component.html'\n})\nexport class UnauthorizedComponent implements OnInit {\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/core/unauthorized/unauthorized.component.ts","import {Component} from \"@angular/core\";\n\n@Component({\n    selector: 'view',\n    template: '<router-outlet></router-outlet>'\n})\nexport class OutletComponent {\n\n    constructor() {\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/core/view.component.ts","import {NgModule}       from '@angular/core';\nimport {CommonModule}   from '@angular/common';\nimport {FormsModule, ReactiveFormsModule}    from '@angular/forms';\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {ListComponent} from \"./list/list.component\";\nimport {RouterModule} from \"@angular/router\";\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {couponRoutes} from \"./coupon.routing\";\nimport {ListResolver} from \"./list/list.resolver\";\nimport {CouponService} from \"./services/coupon.service\";\nimport {CreateComponent} from \"./create/create.component\";\nimport {ImageCropperModule} from \"ngx-image-cropper\";\nimport {BsDatepickerModule, ModalModule} from \"ngx-bootstrap\";\nimport {UpdateComponent} from \"./update/update.component\";\nimport {UpdateResolver} from \"./update/update.resolver\";\n\n@NgModule({\n    imports: [\n        RouterModule,\n        HttpClientModule,\n        CommonModule,\n        FormsModule,\n        NgbModule,\n        BsDatepickerModule.forRoot(),\n        ModalModule.forRoot(),\n        RouterModule.forChild(couponRoutes),\n        ReactiveFormsModule,\n        ImageCropperModule,\n    ],\n    declarations: [\n        ListComponent,\n        CreateComponent,\n        UpdateComponent,\n    ],\n    providers: [\n        ListResolver,\n        UpdateResolver,\n        CouponService,\n    ]\n})\nexport class CouponModule {\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/coupon/coupon.module.ts","import {Routes} from \"@angular/router\";\n\nimport {RootComponent} from \"../core/root.component\";\nimport {AppResolver} from \"../app.resolver\";\nimport {ListComponent} from \"./list/list.component\";\nimport {ListResolver} from \"./list/list.resolver\";\nimport {CreateComponent} from \"./create/create.component\";\nimport {UpdateResolver} from \"./update/update.resolver\";\nimport {UpdateComponent} from \"./update/update.component\";\n\nexport const couponRoutes: Routes = [{\n    path: 'coupons',\n    component: RootComponent,\n    canActivate: [AppResolver],\n    children: [\n        {\n            path: '',\n            component: ListComponent,\n            resolve: {\n                'data': ListResolver\n            }\n        },\n        {\n            path: 'create',\n            component: CreateComponent,\n        },\n        {\n            path: 'update/:id',\n            component: UpdateComponent,\n            resolve: {\n                'data': UpdateResolver\n            }\n        },\n    ]\n},\n\n];\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/coupon/coupon.routing.ts","module.exports = \"input.ng-touched.ng-invalid {\\n    border-color: red;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/coupon/create/create.component.css\n// module id = ./src/app/coupon/create/create.component.css\n// module chunks = main","module.exports = \"<div class=\\\"table-wrapper\\\">\\n    <div class=\\\"wrap-header\\\"></div>\\n    <div class=\\\"wrap-tmain\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header card-success card-inverse\\\">\\n                <span class=\\\"card-title\\\">Create coupon</span>\\n            </div>\\n            <div class=\\\"card-block\\\">\\n                <form [formGroup]=\\\"couponForm\\\" [ngClass]=\\\"{'form-error':submitPending }\\\"\\n                      (submit)=\\\"createCoupon($event)\\\" novalidate>\\n                    <div class=\\\"form-group row mb10\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"title_en\\\">Title (en)</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <div class=\\\"example-full-width\\\">\\n                                <input matInput class=\\\"form-control underline\\\" id=\\\"title_en\\\" formControlName=\\\"title_en\\\">\\n                                <div\\n                                        *ngIf=\\\"couponForm.get('title_en').hasError('required') && submitPending\\\">\\n                                    Title is <strong>required</strong>\\n                                </div>\\n                                <p class=\\\"error_message\\\" *ngIf=\\\"isExistErrorByFormField('title_en')\\\">\\n                                    {{getTextErrorByFormField('title_en') }}</p>\\n\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row mb10\\\">\\n\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"description_en\\\">Description\\n                            (en)</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <div class=\\\"example-full-width\\\">\\n                                <input id=\\\"description_en\\\" class=\\\"form-control underline\\\"\\n                                       formControlName=\\\"description_en\\\">\\n                                <div *ngIf=\\\"couponForm.get('description_en').hasError('required') && submitPending\\\">\\n                                    Description is <strong>required</strong>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row mb10\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"start_date\\\">Start date</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <div class=\\\"example-full-width\\\">\\n                                <input class=\\\"form-control underline\\\"\\n                                       id=\\\"start_date\\\"\\n                                       bsDatepicker\\n                                       [maxDate]=\\\"couponForm.get('finish_date').value\\\"\\n                                       [bsConfig]=\\\"{ dateInputFormat: 'MMMM Do YYYY, h:mm:ss a'}\\\"\\n                                       name=\\\"start_date\\\" formControlName=\\\"start_date\\\">\\n                                <div *ngIf=\\\"couponForm.get('start_date').hasError('required') && submitPending\\\">\\n                                    Start date is <strong>required</strong>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row mb10\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"finish_date\\\">Finish date</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <div class=\\\"example-full-width\\\">\\n                                <input id=\\\"finish_date\\\"\\n                                       class=\\\"form-control underline\\\"\\n                                       formControlName=\\\"finish_date\\\"\\n                                       [minDate]=\\\"couponForm.get('start_date').value\\\"\\n                                       [bsConfig]=\\\"{ dateInputFormat: 'MMMM Do YYYY, h:mm:ss a'}\\\"\\n                                       bsDatepicker>\\n                                <div *ngIf=\\\"couponForm.get('finish_date').hasError('required') && submitPending\\\">\\n                                    Finish date is <strong>required</strong>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"file_id\\\">Coupon image</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input type=\\\"file\\\" id=\\\"file_id\\\" (change)=\\\"fileChangeEvent($event)\\\"/>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <input type=\\\"hidden\\\" formControlName=\\\"file_id\\\">\\n                                    <div *ngIf=\\\"couponForm.get('file_id').hasError('required')  && submitPending\\\">\\n                                        Image is <strong>required</strong>\\n                                    </div>\\n                                    <image-cropper\\n                                            [imageChangedEvent]=\\\"imageChangedEvent\\\"\\n                                            [maintainAspectRatio]=\\\"true\\\"\\n                                            [aspectRatio]=\\\"1\\\"\\n                                            [resizeToWidth]=\\\"460\\\"\\n                                            format=\\\"png, jpeg\\\"\\n                                            (imageCropped)=\\\"imageCropped($event)\\\"\\n                                            (imageLoaded)=\\\"imageLoaded()\\\"\\n                                            (loadImageFailed)=\\\"loadImageFailed()\\\"\\n                                    ></image-cropper>\\n                                </div>\\n                                <div class=\\\"col-sm-6  preview-img \\\">\\n                                    <img [src]=\\\"croppedImage\\\"/>\\n                                    <div>\\n                                        <span *ngIf=\\\"showBtnSL\\\" (click)=\\\"handleFileInput()\\\" class=\\\"btn btn-danger mt10\\\">Save image</span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\" row\\\">\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n                                    <span class=\\\"btn btn-danger btn-bordered margin-right\\\"\\n                                            [routerLink]=\\\"['/coupons']\\\">Cancel\\n                                    </span>\\n                                    <button class=\\\"btn btn-primary btn-bordered\\\" type=\\\"submit\\\"\\n                                    >Create\\n                                    </button>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/coupon/create/create.component.html\n// module id = ./src/app/coupon/create/create.component.html\n// module chunks = main","import * as _ from \"lodash\";\nimport {Component, OnInit} from \"@angular/core\";\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Router} from \"@angular/router\";\nimport {FileService} from \"../../files/services/file.service\";\nimport {ToastrService} from \"../../shared/toastr.service\";\nimport {unescape} from \"querystring\";\nimport {CouponService} from \"../services/coupon.service\";\n\n@Component({\n    selector: 'coupon-create',\n    templateUrl: './create.component.html',\n    styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n    submitPending: boolean = false;\n    showImg: boolean = false;\n    fileToUpload: File = null;\n    imgId: number;\n    imgPath: string = '';\n    showBtnSL: boolean = false;\n    imageChangedEvent: any = '';\n    croppedImage: any = '';\n    errors = [];\n\n    public couponForm: FormGroup = new FormGroup({\n        title_en: new FormControl(\"\", [Validators.required]),\n        description_en: new FormControl(\"\", [Validators.required]),\n        start_date: new FormControl(\"\", [Validators.required]),\n        finish_date: new FormControl(\"\", [Validators.required]),\n        status: new FormControl(1, [Validators.required]),\n        file_id: new FormControl(\"\", [Validators.required])\n    });\n\n    private _subscribers = [];\n\n    constructor(public router: Router,\n                public fb: FormBuilder,\n                public fileService: FileService,\n                public couponService: CouponService) {\n\n        this._subscribers.push(this.couponForm.valueChanges.subscribe(\n            () => this.submitPending = false\n        ));\n    }\n\n    ngOnInit() {\n\n    }\n\n    public createCoupon(event) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (!this.couponForm.valid) {\n            this.submitPending = true;\n            return;\n        }\n\n        this.submitPending = true;\n        let coupon = this.couponForm.value;\n        this._subscribers.push(this.couponService.create(coupon).subscribe(\n            () => {\n                this.router.navigate(['/coupons']);\n            },\n            (err) => {\n                this.errors = err.error;\n            }\n        ));\n    }\n\n    ngOnDestroy() {\n        _.forEach(this._subscribers, (value) => {\n            value.unsubscribe();\n        });\n    }\n\n\n    handleFileInput() {\n        this.uploadFileToActivity(this.croppedImage).subscribe(data => {\n            this.imgPath = data.path;\n            this.showBtnSL = false;\n            this.couponForm.patchValue({file_id: data.id});\n            return true;\n        }, error => {\n            ToastrService.error(\"Error\", error);\n        });\n    }\n\n    fileChangeEvent(event: any): void {\n        if(event.target.files[0].size > 1048576) {\n            ToastrService.error(\"Error\", 'Size must be smaller than 1Mb');\n\n        } else {\n            this.imageChangedEvent = event;\n            this.fileToUpload = event.target.files;\n            this.showBtnSL = true;\n        }\n    }\n\n    imageCropped(image: string) {\n        this.croppedImage = image;\n        this.showBtnSL = true;\n    }\n\n    imageLoaded() {\n        // show cropper\n\n    }\n\n    loadImageFailed() {\n        this.showBtnSL = false;\n        ToastrService.error(\"Error\", 'Image must be \".jpg\" or \".png\"');\n    }\n\n    private generateFile(dataURI: string): Blob {\n        let byteString;\n        if (dataURI.split(',')[0].indexOf('base64') >= 0) {\n            byteString = atob(dataURI.split(',')[1]);\n        } else {\n            byteString = unescape(dataURI.split(',')[1]);\n        }\n        const type = dataURI\n            .split(',')[0]\n            .split(':')[1]\n            .split(';')[0];\n        const ia = new Uint8Array(byteString.length);\n        for (let i = 0; i < byteString.length; i++) {\n            ia[i] = byteString.charCodeAt(i);\n        }\n        return new Blob([ia], {type});\n    }\n\n    isExistErrorByFormField(formField: string): boolean {\n        return _.has(this.errors, formField);\n    }\n\n    getTextErrorByFormField(formField: string): string {\n        let arrMessage = this.errors[formField];\n        return arrMessage.join(',');\n    }\n\n    uploadFileToActivity(croppedImage: string) {\n        return this.fileService.postFile(this.generateFile(croppedImage));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/coupon/create/create.component.ts","module.exports = \"\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/coupon/list/list.component.css\n// module id = ./src/app/coupon/list/list.component.css\n// module chunks = main","module.exports = \"<div class=\\\"wrapper-content\\\">\\n    <div class=\\\"table-wrapper\\\">\\n        <div class=\\\"wrap-header\\\">\\n            <h3>{{title}}</h3>\\n        </div>\\n        <div class=\\\"wrap-tmain\\\">\\n            <div class=\\\"table-scroll\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-block\\\" style=\\\"padding-bottom: 0\\\">\\n                        <table border=\\\"1\\\">\\n                            <thead>\\n                            <tr class=\\\"ng2-smart-titles\\\">\\n                                <th class=\\\"ng2-smart-actions\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">Actions</div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th \\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        #\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        Title\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        Image\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        Status\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        Start date\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        Finish date\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        Used by ingredients\\n                                    </div>\\n                                </th>\\n                            </tr>\\n                            <tr class=\\\"ng2-smart-filters\\\">\\n                                <th class=\\\"ng2-smart-actions-title ng2-smart-actions-title-add\\\">\\n                                    <a routerLink=\\\"create\\\" routerLinkActive=\\\"active\\\"\\n                                       class=\\\"btn btn-secondary\\\" href=\\\"#\\\">+ Add New</a>\\n                                </th>\\n                                <th class=\\\"ng2-smart-actions-title\\\">\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n                                        <input class=\\\"form-control ng-untouched ng-pristine ng-valid\\\"\\n                                               [(ngModel)]=\\\"searchTitle\\\"\\n                                               (keyup.enter)=\\\"applyFilters($event)\\\"\\n                                               type=\\\"text\\\"\\n                                               placeholder=\\\"Name\\\">\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th age\\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n                                        <select\\n                                                class=\\\"form-control underline\\\"\\n                                                (change)=\\\"applyFilters($event)\\\"\\n                                                [(ngModel)]=\\\"searchStatus\\\">\\n                                            <option *ngFor=\\\"let status of statusOptionsSelect\\\"\\n                                                    [value]=\\\"status.value\\\"\\n                                                    (onClick)=\\\"applyFilters($event)\\\">\\n                                                {{ status.label }}\\n                                            </option>\\n                                        </select>\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\"></th>\\n                                <th class=\\\"ng2-smart-th\\\"></th>\\n                                <th class=\\\"ng2-smart-th\\\"></th>\\n                            </tr>\\n                            </thead>\\n                            <tbody>\\n\\n                            <tr *ngFor=\\\"let coupon of itemList; let i = index\\\">\\n                                <td>\\n                                    <a [routerLink]=\\\"['update/' + coupon.id]\\\" *ngIf=\\\"coupon.status == 1\\\"\\n                                       routerLinkActive=\\\"active\\\" class=\\\"btn btn-info\\\">\\n                                        <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n                                        edit</a>\\n                                    <button *ngIf=\\\"coupon.status == 1\\\" [disabled]=\\\"coupon?.activeIngredientCount != '0'\\\"\\n                                            title=\\\"This coupon used in {{coupon?.activeIngredientCount}} ingredients\\\"\\n                                            class=\\\"btn btn-danger\\\"\\n                                            (click)=\\\"onDelete($event, content, coupon)\\\">\\n                                        <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>\\n                                        delete</button>\\n                                </td>\\n                                <td>{{(i+1) + (page - 1) * selectedLimit}}</td>\\n                                <td>{{coupon.title_en}}</td>\\n                                <td>\\n                                    <img *ngIf=\\\"coupon.image?.path\\\" src=\\\"{{coupon.image?.path}}\\\" alt=\\\"image\\\">\\n                                </td>\\n                                <td>\\n                                     <span class=\\\"active-status edit button\\\"\\n                                           *ngIf=\\\"coupon.status == 1\\\">Active</span>\\n                                    <span class=\\\"deleted-status delete button\\\"\\n                                          *ngIf=\\\"coupon.status == 3 \\\">Deleted</span>\\n                                </td>\\n                                <td>{{coupon.start_date}}</td>\\n                                <td>{{coupon.finish_date}}</td>\\n                                <td>{{coupon.activeIngredientCount}}</td>\\n                            </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                    <div class=\\\"page-select\\\">\\n                        <div class=\\\"col-sm-8\\\">\\n                            <select class=\\\"form-control\\\" style=\\\"width: 200px;\\\"\\n                                    [(ngModel)]=\\\"selectedLimit\\\"\\n                                    (change)=\\\"onLimitSelected($event)\\\">\\n                                <option *ngFor=\\\"let item of limitOptionsSelect\\\" [value]=\\\"item.value\\\">\\n                                    {{ item.label }}\\n                                </option>\\n                            </select>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\" *ngIf=\\\"itemSize > selectedLimit\\\">\\n                            <ngb-pagination\\n                                    [collectionSize]=\\\"itemSize\\\"\\n                                    [(page)]=\\\"page\\\"\\n                                    (pageChange)=\\\"onPageChange($event)\\\"\\n                                    [pageSize]=\\\"selectedLimit\\\"\\n                                    [rotate]=\\\"true\\\"\\n                                    [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n        <i class=\\\"material-icons\\\">clear</i>\\n    </button>\\n    <div class=\\\"modal-body delete-modal clearfix\\\">\\n        <p>Are you sure you want to delete the coupon <b>«{{itemTitle}}»?</b></p>\\n        <span>This action cannot be undone </span>\\n        <p>\\n            <button type=\\\"button\\\" class=\\\"btn m-btn_no-bg margin-right\\\" (click)=\\\"d('no')\\\">Cancel</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-color\\\" (click)=\\\"c('yes')\\\">Delete it!</button>\\n        </p>\\n\\n    </div>\\n</ng-template>\\n\\n<template ngbModalContainer></template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/coupon/list/list.component.html\n// module id = ./src/app/coupon/list/list.component.html\n// module chunks = main","import * as _ from 'lodash';\nimport {Component, OnInit} from \"@angular/core\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Coupon} from \"../models/coupon\";\nimport {CouponService} from \"../services/coupon.service\";\nimport {Observable} from \"rxjs/Observable\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n    selector: 'app-dictionaries-get',\n    templateUrl: './list.component.html',\n    styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n    itemList: Coupon[];\n    itemSize: number;\n    private title = 'Coupons list';\n    itemTitle: string;\n\n    searchTitle = '';\n    searchIngName = '';\n    searchStatus = 1;\n\n    isShowPagination: boolean = true;\n\n    statusOptionsSelect = [\n        {\n            value: '',\n            label: 'All'\n        },\n        {\n            value: 1,\n            label: 'Active'\n        },\n        {\n            value: 3,\n            label: 'Deleted'\n        }\n    ];\n    public limitOptionsSelect = [\n        {\n            value: 5,\n            label: '5'\n        },\n        {\n            value: 10,\n            label: '10'\n        },\n        {\n            value: 20,\n            label: '20'\n        },\n        {\n            value: 50,\n            label: '50'\n        },\n        {\n            value: 100,\n            label: '100'\n        }\n    ];\n    public page = 1;\n\n    public selectedLimit = 10;\n\n    private _subscribers = [];\n\n    constructor(public entityService: CouponService,\n                private modalService: NgbModal,\n                private _route: ActivatedRoute) {\n\n        this._subscribers.push(this._route.data.subscribe((res: any) => {\n            this.itemList = _.take(res.data[0].data, this.selectedLimit);\n            this.itemSize = +res.data[0].count;\n        }));\n    }\n\n\n    ngOnInit() {\n    }\n\n    ngOnDestroy() {\n        _.forEach(this._subscribers, (value) => {\n            value.unsubscribe();\n        });\n    }\n\n    public onLimitSelected(selected) {\n        this.page = 1;\n        this.listRequest();\n    }\n\n    /**\n     * Use this method to get current list\n     * @param page\n     */\n    private listRequest(page?) {\n        this._subscribers.push(this.entityService.getList(this.buildListResponseObject(page))\n            .subscribe(\n                (res: { data: any, count: number }) => {\n                    this.itemList = res.data;\n                    this.itemSize = +res.count;\n                },\n                (err) => {\n\n                }\n            ));\n    }\n\n    /**\n     * Use this method to prepare request object for list. Sets limits, pagination, etc.\n     * @param page\n     * @returns {{query: any, page: (any|number), limit: number, sort: string, order: number, filter: string}}\n     */\n    private buildListResponseObject(page?) {\n        return {\n            page: page || this.page,\n            limit: this.selectedLimit,\n            status: this.searchStatus,\n            name_en: this.searchTitle,\n            ing_name: this.searchIngName,\n        }\n    }\n\n    public onPageChange(event) {\n        this.listRequest(event);\n    }\n\n    public applyFilters(event) {\n        event.preventDefault();\n        this.page = 1;\n        this.listRequest();\n    }\n\n    onDelete(event, content, coupon: Coupon) {\n        event.preventDefault();\n        this.itemTitle = coupon.title_en;\n        this.modalService.open(content).result.then((result) => {\n            this._subscribers.push(Observable.concat(\n                this.entityService.deleteById(coupon.id),\n                this.entityService.getList(this.buildListResponseObject())\n            ).subscribe(\n                (res: any) => {\n                    if (res) {\n                        this.itemList = res.data;\n                        this.itemSize = +res.count;\n                    }\n                },\n                (err) => {\n\n                }\n            ));\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/coupon/list/list.component.ts","import {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from \"@angular/router\";\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs/add/observable/of\";\nimport {CouponService} from \"../services/coupon.service\";\n\n@Injectable()\nexport class ListResolver implements Resolve<any> {\n    constructor(private CouponService: CouponService) {\n\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\n        let reqObj = {\n            page: 1,\n            limit: 10,\n            status: 1,\n        };\n        return Observable.forkJoin(\n            this.CouponService.getList(reqObj),\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/coupon/list/list.resolver.ts","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\n\nimport {Observable} from \"rxjs\";\nimport {AuthService} from \"../../authentication/services/auth.service\";\nimport {ErrorHandler} from \"../../shared/error-handler.service\";\nimport {ListRequestService} from \"../../shared/list-request.service\";\nimport {ListRequest} from \"../../shared/models/list-request.model\";\nimport {ToastrService} from \"../../shared/toastr.service\";\nimport {Coupon} from \"../models/coupon\";\n\n@Injectable()\nexport class CouponService {\n\n    private path = '/v1/coupons';\n\n    constructor(private http: HttpClient,\n                private errorHandler: ErrorHandler,\n                private authService: AuthService) {\n    }\n\n    private getHeaders() {\n        return new HttpHeaders().set('Authorization', 'Bearer ' + this.authService.getAuthToken());\n    }\n\n    getList(resObj: ListRequest = {}): Observable<{}> {\n        return this.http.get(this.path + '?' + ListRequestService.parseRequestObject(resObj), {headers: this.getHeaders()})\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n\n    getViewById(id: number): Observable<{}> {\n        return this.http.get(this.path + '/' + id, {headers: this.getHeaders()})\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n\n\n    public create(coupon: Coupon): Observable<{}> {\n        return this.http.post(this.path, coupon, {headers: this.getHeaders()})\n            .do(() => ToastrService.success(\"\", \"Coupon was created\"))\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n\n    public updateById(coupon: Coupon, id: number): Observable<{}> {\n        return this.http.put(this.path + '/' + id, coupon, {headers: this.getHeaders()})\n            .do(() => ToastrService.success(\"\", \"Coupon was updated\"))\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n\n\n    public deleteById(id: number): Observable<{}> {\n        return this.http.delete(this.path + '/' + id, {headers: this.getHeaders()})\n            .do(() => ToastrService.success(\"\", \"Coupon was deleted\"))\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/coupon/services/coupon.service.ts","module.exports = \"<div class=\\\"table-wrapper\\\">\\n    <div class=\\\"wrap-header\\\"></div>\\n    <div class=\\\"wrap-tmain\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header card-success card-inverse\\\">\\n                <span class=\\\"card-title\\\">Update coupon</span>\\n            </div>\\n            <div class=\\\"card-block\\\">\\n                <form [formGroup]=\\\"couponForm\\\" [ngClass]=\\\"{'form-error':submitPending }\\\"\\n                      (submit)=\\\"updateCoupon($event)\\\" novalidate>\\n                    <div class=\\\"form-group row mb10\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"title_en\\\">Title (en)</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <div class=\\\"example-full-width\\\">\\n                                <input matInput class=\\\"form-control underline\\\" id=\\\"title_en\\\" formControlName=\\\"title_en\\\">\\n                                <div *ngIf=\\\"couponForm.get('title_en').hasError('required') && submitPending\\\">\\n                                    Title is <strong>required</strong>\\n                                </div>\\n                                <p class=\\\"error_message\\\" *ngIf=\\\"isExistErrorByFormField('title_en')\\\">\\n                                    {{getTextErrorByFormField('title_en') }}</p>\\n\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row mb10\\\">\\n\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"description_en\\\">Description\\n                            (en)</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <div class=\\\"example-full-width\\\">\\n                                <input id=\\\"description_en\\\" class=\\\"form-control underline\\\"\\n                                       formControlName=\\\"description_en\\\">\\n                                <div *ngIf=\\\"couponForm.get('description_en').hasError('required') && submitPending\\\">\\n                                    Description is <strong>required</strong>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row mb10\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"start_date\\\">Start date</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <div class=\\\"example-full-width\\\">\\n                                <input class=\\\"form-control underline\\\"\\n                                       id=\\\"start_date\\\"\\n                                       bsDatepicker\\n                                       [maxDate]=\\\"couponForm.get('finish_date').value\\\"\\n                                       [bsConfig]=\\\"{ dateInputFormat: 'MMMM Do YYYY, hh:mm:ss'}\\\"\\n                                       name=\\\"start_date\\\" formControlName=\\\"start_date\\\">\\n                                <div *ngIf=\\\"couponForm.get('start_date').hasError('required') && submitPending\\\">\\n                                    Start date is <strong>required</strong>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row mb10\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"finish_date\\\">Finish date</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <div class=\\\"example-full-width\\\">\\n                                <input id=\\\"finish_date\\\"\\n                                       class=\\\"form-control underline\\\"\\n                                       formControlName=\\\"finish_date\\\"\\n                                       [minDate]=\\\"couponForm.get('start_date').value\\\"\\n                                       [bsConfig]=\\\"{ dateInputFormat: 'MMMM Do YYYY, h:mm:ss a'}\\\"\\n                                       bsDatepicker>\\n                                <div *ngIf=\\\"couponForm.get('finish_date').hasError('required') && submitPending\\\">\\n                                    Finish date is <strong>required</strong>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"file_id\\\">Coupon image</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input type=\\\"file\\\" id=\\\"file_id\\\" (change)=\\\"fileChangeEvent($event)\\\"/>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <input type=\\\"hidden\\\" formControlName=\\\"file_id\\\">\\n                                    <div *ngIf=\\\"couponForm.get('file_id').hasError('required')  && submitPending\\\">\\n                                        Image is <strong>required</strong>\\n                                    </div>\\n                                    <image-cropper\\n                                            [imageChangedEvent]=\\\"imageChangedEvent\\\"\\n                                            [maintainAspectRatio]=\\\"true\\\"\\n                                            [aspectRatio]=\\\"1\\\"\\n                                            [resizeToWidth]=\\\"460\\\"\\n                                            format=\\\"png, jpeg\\\"\\n                                            (imageCropped)=\\\"imageCropped($event)\\\"\\n                                            (imageLoaded)=\\\"imageLoaded()\\\"\\n                                            (loadImageFailed)=\\\"loadImageFailed()\\\"\\n                                    ></image-cropper>\\n                                </div>\\n                                <div class=\\\"col-sm-6  preview-img \\\">\\n                                    <img [src]=\\\"croppedImage\\\"/>\\n                                    <div>\\n                                        <span *ngIf=\\\"showBtnSL\\\" (click)=\\\"handleFileInput()\\\" class=\\\"btn btn-danger mt10\\\">Save image</span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\" row\\\">\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n                                    <span class=\\\"btn btn-danger btn-bordered margin-right\\\"\\n                                            [routerLink]=\\\"['/coupons']\\\">Cancel\\n                                    </span>\\n                                    <button class=\\\"btn btn-primary btn-bordered\\\" type=\\\"submit\\\">\\n                                        Update\\n                                    </button>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/coupon/update/update.component.html\n// module id = ./src/app/coupon/update/update.component.html\n// module chunks = main","import * as _ from \"lodash\";\nimport {Component, OnInit} from \"@angular/core\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {ActivatedRoute, Data, Router} from \"@angular/router\";\nimport {unescape} from \"querystring\";\nimport {ToastrService} from \"../../shared/toastr.service\";\nimport {FileService} from \"../../files/services/file.service\";\nimport {CouponService} from \"../services/coupon.service\";\n\n@Component({\n    selector: 'ingredient-update',\n    templateUrl: './update.component.html'\n})\nexport class UpdateComponent implements OnInit {\n\n    submitPending: boolean = false;\n    showImg: boolean = false;\n    fileToUpload: File = null;\n    imgId: number;\n    id: number;\n    imgPath: string = '';\n    showBtnSL: boolean = false;\n    imageChangedEvent: any = '';\n    croppedImage: any = '';\n    errors = [];\n\n    public couponForm: FormGroup = new FormGroup({\n        title_en: new FormControl(\"\", [Validators.required]),\n        description_en: new FormControl(\"\", [Validators.required]),\n        start_date: new FormControl(\"\", [Validators.required]),\n        finish_date: new FormControl(\"\", [Validators.required]),\n        status: new FormControl(1, [Validators.required]),\n        file_id: new FormControl(\"\", [Validators.required])\n    });\n\n    private _subscribers = [];\n\n    constructor(public router: Router,\n                public fileService: FileService,\n                public couponService: CouponService,\n                private _route: ActivatedRoute) {\n\n        this._subscribers.push(this.couponForm.valueChanges.subscribe(\n            () => this.submitPending = false\n        ));\n\n        this._subscribers.push(this._route.data.subscribe((res: any) => {\n            this.id = res.data[0].id;\n\n            this.couponForm.patchValue(res.data[0]);\n            this.couponForm.patchValue({finish_date: new Date(res.data[0].finish_date)});\n            this.couponForm.patchValue({start_date: new Date(res.data[0].start_date)});\n            if (res.data[0].image !== null) {\n                this.couponForm.patchValue({image: res.data[0].image.id});\n                this.croppedImage = res.data[0].image.path;\n            }\n        }));\n    }\n\n    ngOnInit() {\n\n    }\n\n\n    public updateCoupon(event) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (!this.couponForm.valid) {\n            this.submitPending = true;\n            return;\n        }\n\n        this.submitPending = true;\n        let coupon = this.couponForm.value;\n        this._subscribers.push(this.couponService.updateById(coupon, this.id).subscribe(\n            () => {\n                this.router.navigate(['/coupons']);\n            },\n            (err) => {\n                this.errors = err.error;\n            }\n        ));\n    }\n\n    ngOnDestroy() {\n        _.forEach(this._subscribers, (value) => {\n            value.unsubscribe();\n        });\n    }\n\n\n    handleFileInput() {\n        this.uploadFileToActivity(this.croppedImage).subscribe(data => {\n            this.imgPath = data.path;\n            this.showBtnSL = false;\n            this.couponForm.patchValue({file_id: data.id});\n            return true;\n        }, error => {\n            ToastrService.error(\"Error\", error);\n        });\n    }\n\n    fileChangeEvent(event: any): void {\n        if(event.target.files[0].size > 1048576) {\n            ToastrService.error(\"Error\", 'Size must be smaller than 1Mb');\n\n        } else {\n            this.imageChangedEvent = event;\n            this.fileToUpload = event.target.files;\n            this.showBtnSL = true;\n        }\n    }\n\n    imageCropped(image: string) {\n        this.croppedImage = image;\n        this.showBtnSL = true;\n    }\n\n    imageLoaded() {\n        // show cropper\n\n    }\n\n    loadImageFailed() {\n        this.showBtnSL = false;\n        ToastrService.error(\"Error\", 'Image must be \".jpg\" or \".png\"');\n    }\n\n    private generateFile(dataURI: string): Blob {\n        let byteString;\n        if (dataURI.split(',')[0].indexOf('base64') >= 0) {\n            byteString = atob(dataURI.split(',')[1]);\n        } else {\n            byteString = unescape(dataURI.split(',')[1]);\n        }\n        const type = dataURI\n            .split(',')[0]\n            .split(':')[1]\n            .split(';')[0];\n        const ia = new Uint8Array(byteString.length);\n        for (let i = 0; i < byteString.length; i++) {\n            ia[i] = byteString.charCodeAt(i);\n        }\n        return new Blob([ia], {type});\n    }\n\n    isExistErrorByFormField(formField: string): boolean {\n        return _.has(this.errors, formField);\n    }\n\n    getTextErrorByFormField(formField: string): string {\n        let arrMessage = this.errors[formField];\n        return arrMessage.join(',');\n    }\n\n    uploadFileToActivity(croppedImage: string) {\n        return this.fileService.postFile(this.generateFile(croppedImage));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/coupon/update/update.component.ts","import {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from \"@angular/router\";\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs/add/observable/of\";\nimport {CouponService} from \"../services/coupon.service\";\n\n@Injectable()\nexport class UpdateResolver implements Resolve<any> {\n    constructor(private couponService: CouponService) {\n\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\n        return Observable.forkJoin(\n            this.couponService.getViewById(route.params['id']),\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/coupon/update/update.resolver.ts","import {NgModule}       from '@angular/core';\nimport {CommonModule}   from '@angular/common';\nimport {FormsModule, ReactiveFormsModule}    from '@angular/forms';\n\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {ListComponent} from \"./list/list.component\";\nimport {UpdateComponent} from \"./update/update.component\";\nimport {DictionariesService} from \"./services/dictionary.service\";\nimport {RouterModule} from \"@angular/router\";\nimport {dictionaryRoutes} from \"./dictionary.routing\";\nimport {ListResolver} from \"./list/list.resolver\";\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {UpdateResolver} from \"./update/update.resolver\";\n\n\n@NgModule({\n    imports: [\n        RouterModule,\n        HttpClientModule,\n        CommonModule,\n        FormsModule,\n        NgbModule,\n        RouterModule.forChild(dictionaryRoutes),\n        ReactiveFormsModule\n    ],\n    declarations: [\n        ListComponent,\n        UpdateComponent,\n    ],\n    providers: [\n        DictionariesService,\n        ListResolver,\n        UpdateResolver,\n    ]\n})\nexport class DictionariesModule {\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/dictionary/dictionary.module.ts","import {RouterModule, Routes} from '@angular/router';\n\nimport {RootComponent} from \"../core/root.component\";\nimport {AppResolver} from \"../app.resolver\";\nimport {ListComponent} from \"./list/list.component\";\nimport {UpdateComponent} from \"./update/update.component\";\nimport {ListResolver} from \"./list/list.resolver\";\nimport {UpdateResolver} from \"./update/update.resolver\";\n\n\nexport const dictionaryRoutes: Routes = [{\n    path: 'dictionaries',\n    component: RootComponent,\n    canActivate: [AppResolver],\n    children: [\n        {\n            path: '',\n            component: ListComponent,\n            resolve: {\n                'data': ListResolver\n            }\n        },\n        {\n            path: 'update/:key', component: UpdateComponent,\n            resolve: {\n                'data': UpdateResolver\n            }\n        },\n\n    ]\n},\n\n];\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dictionary/dictionary.routing.ts","module.exports = \"\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dictionary/list/list.component.css\n// module id = ./src/app/dictionary/list/list.component.css\n// module chunks = main","module.exports = \"<div class=\\\"wrapper-content\\\">\\n    <div class=\\\"table-wrapper\\\">\\n        <div class=\\\"wrap-header\\\">\\n            <h3>{{title}}</h3>\\n        </div>\\n        <div class=\\\"wrap-tmain\\\">\\n            <div class=\\\"table-scroll\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-block\\\" style=\\\"padding-bottom: 0\\\">\\n                        <table border=\\\"1\\\">\\n                            <thead>\\n                            <tr class=\\\"ng2-smart-titles\\\">\\n                                <th class=\\\"ng2-smart-actions\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">Actions</div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th name\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        Key\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th email\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        En\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th regDate\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        He\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th age\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        Es\\n                                    </div>\\n                                </th>\\n                            </tr>\\n                            <tr class=\\\"ng2-smart-filters\\\">\\n                                <th class=\\\"ng2-smart-actions-title ng2-smart-actions-title-add\\\">\\n\\n                                </th>\\n                                <th class=\\\"ng2-smart-th name\\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n                                        <input class=\\\"form-control ng-untouched ng-pristine ng-valid\\\"\\n                                               [(ngModel)]=\\\"searchKey\\\"\\n                                               (keyup.enter)=\\\"applyFilters($event)\\\"\\n                                               type=\\\"text\\\"\\n                                               placeholder=\\\"Name\\\">\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th email\\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n                                        <input class=\\\"form-control ng-untouched ng-pristine ng-valid\\\"\\n                                               [(ngModel)]=\\\"searchNameEN\\\"\\n                                               (keyup.enter)=\\\"applyFilters($event)\\\"\\n                                               type=\\\"text\\\"\\n                                               placeholder=\\\"Name\\\">\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th regDate\\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n                                        <input class=\\\"form-control ng-untouched ng-pristine ng-valid\\\"\\n                                               [(ngModel)]=\\\"searchNameHE\\\"\\n                                               (keyup.enter)=\\\"applyFilters($event)\\\"\\n                                               type=\\\"text\\\"\\n                                               placeholder=\\\"Name\\\">\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th age\\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n                                        <input class=\\\"form-control ng-untouched ng-pristine ng-valid\\\"\\n                                               [(ngModel)]=\\\"searchNameES\\\"\\n                                               (keyup.enter)=\\\"applyFilters($event)\\\"\\n                                               type=\\\"text\\\"\\n                                               placeholder=\\\"Name\\\">\\n                                    </div>\\n                                </th>\\n                            </tr>\\n                            </thead>\\n                            <tbody>\\n\\n                            <tr *ngFor=\\\"let dictionary of itemList\\\">\\n                                <td>\\n                                    <span [routerLink]=\\\"['update/' + dictionary.key]\\\" routerLinkActive=\\\"active\\\"\\n                                          class=\\\"btn btn-info\\\"><i class=\\\"fa fa-pencil\\\"\\n                                                                  aria-hidden=\\\"true\\\"></i> edit</span>\\n                                </td>\\n                                <td>{{dictionary.key}}</td>\\n                                <td>{{dictionary.en}}</td>\\n                                <td>{{dictionary.he}}</td>\\n                                <td>{{dictionary.es}}</td>\\n                            </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                    <div class=\\\"page-select\\\">\\n                        <div class=\\\"col-sm-8\\\">\\n                            <select class=\\\"form-control\\\" style=\\\"width: 200px;\\\"\\n                                    [(ngModel)]=\\\"selectedLimit\\\"\\n                                    (change)=\\\"onLimitSelected($event)\\\">\\n                                <option *ngFor=\\\"let item of limitOptionsSelect\\\" [value]=\\\"item.value\\\">\\n                                    {{ item.label }}\\n                                </option>\\n                            </select>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\" *ngIf=\\\"itemSize > selectedLimit\\\">\\n                            <ngb-pagination\\n                                    [collectionSize]=\\\"itemSize\\\"\\n                                    [(page)]=\\\"page\\\"\\n                                    (pageChange)=\\\"onPageChange($event)\\\"\\n                                    [pageSize]=\\\"selectedLimit\\\"\\n                                    [rotate]=\\\"true\\\"\\n                                    [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dictionary/list/list.component.html\n// module id = ./src/app/dictionary/list/list.component.html\n// module chunks = main","import * as _ from 'lodash';\nimport {Component, OnInit} from \"@angular/core\";\nimport {DictionariesService} from \"../services/dictionary.service\";\nimport {Dictionary} from \"../models/dictionary\";\nimport {ActivatedRoute} from \"@angular/router\";\n\n@Component({\n    selector: 'app-dictionaries-get',\n    templateUrl: './list.component.html',\n    styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n    itemList: Dictionary[];\n    itemSize: number;\n    private title = 'Dictionaries list';\n    itemTitle: string;\n\n    searchKey = '';\n    searchNameEN = '';\n    searchNameES = '';\n    searchNameHE = '';\n    searchStatus = 1;\n\n    isShowPagination: boolean = true;\n\n    public limitOptionsSelect = [\n        {\n            value: 5,\n            label: '5'\n        },\n        {\n            value: 10,\n            label: '10'\n        },\n        {\n            value: 20,\n            label: '20'\n        },\n        {\n            value: 50,\n            label: '50'\n        },\n        {\n            value: 100,\n            label: '100'\n        }\n    ];\n    public page = 1;\n\n    public selectedLimit = 10;\n\n    private _subscribers = [];\n\n    constructor(public entityService: DictionariesService,\n                private _route: ActivatedRoute) {\n\n        this._subscribers.push(this._route.data.subscribe((res: any) => {\n            this.itemList = _.take(res.data[0].data, this.selectedLimit);\n            this.itemSize = +res.data[0].count;\n        }));\n    }\n\n\n    ngOnInit() {\n    }\n\n    ngOnDestroy() {\n        _.forEach(this._subscribers, (value) => {\n            value.unsubscribe();\n        });\n    }\n\n    public onLimitSelected(selected) {\n        this.page = 1;\n        this.listRequest();\n    }\n\n    /**\n     * Use this method to get current list\n     * @param page\n     */\n    private listRequest(page?) {\n        this._subscribers.push(this.entityService.getList(this.buildListResponseObject(page))\n            .subscribe(\n                (res: { data: any, count: number }) => {\n                    this.itemList = res.data;\n                    this.itemSize = +res.count;\n                },\n                (err) => {\n\n                }\n            ));\n    }\n\n    /**\n     * Use this method to prepare request object for list. Sets limits, pagination, etc.\n     * @param page\n     * @returns {{query: any, page: (any|number), limit: number, sort: string, order: number, filter: string}}\n     */\n    private buildListResponseObject(page?) {\n        return {\n            page: page || this.page,\n            limit: this.selectedLimit,\n            name_en: this.searchNameEN,\n            name_es: this.searchNameES,\n            name_he: this.searchNameHE,\n            key: this.searchKey,\n        }\n    }\n\n    public onPageChange(event) {\n        this.listRequest(event);\n    }\n\n    public applyFilters(event) {\n        event.preventDefault();\n        this.page = 1;\n        this.listRequest();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dictionary/list/list.component.ts","import {Resolve, ActivatedRouteSnapshot, RouterStateSnapshot} from \"@angular/router\";\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs/add/observable/of\";\nimport {DictionariesService} from \"../services/dictionary.service\";\n\n@Injectable()\nexport class ListResolver implements Resolve<any> {\n    constructor(private dictionariesService: DictionariesService) {\n\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\n        let reqObj = {\n            page: 1,\n            limit: 10,\n            // order: 1\n        };\n        return Observable.forkJoin(\n            this.dictionariesService.getList(reqObj),\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/dictionary/list/list.resolver.ts","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\n\nimport {Observable} from \"rxjs\";\nimport {AuthService} from \"../../authentication/services/auth.service\";\nimport {ToastrService} from \"../../shared/toastr.service\";\nimport {ErrorHandler} from \"../../shared/error-handler.service\";\nimport {ListRequestService} from \"../../shared/list-request.service\";\nimport {ListRequest} from \"../../shared/models/list-request.model\";\nimport {Dictionary} from \"../models/dictionary\";\n\n@Injectable()\nexport class DictionariesService {\n\n    private path = '/v1/translations';\n\n    constructor(private http: HttpClient,\n                private errorHandler: ErrorHandler,\n                private authService: AuthService) {\n    }\n\n    private getHeaders() {\n        return new HttpHeaders().set('Authorization', 'Bearer ' + this.authService.getAuthToken());\n    }\n\n    getList(resObj: ListRequest = {}): Observable<{}> {\n        return this.http.get(this.path + '?' + ListRequestService.parseRequestObject(resObj), {headers: this.getHeaders()})\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n\n\n    updateByKey(dictionary: Dictionary, key: string): Observable<{}> {\n        return this.http.put(this.path + '/' + key, dictionary, {headers: this.getHeaders()})\n            .do(() => ToastrService.success(\"\", \"Word was updated\"))\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n\n    getViewByKey(key: string): Observable<{}> {\n        return this.http.get(this.path + '/' + key, {headers: this.getHeaders()})\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dictionary/services/dictionary.service.ts","module.exports = \"input.ng-touched.ng-invalid {\\n    border-color: red;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dictionary/update/update.component.css\n// module id = ./src/app/dictionary/update/update.component.css\n// module chunks = main","module.exports = \"<div class=\\\"table-wrapper\\\">\\n    <div class=\\\"wrap-header\\\"></div>\\n    <div class=\\\"wrap-tmain\\\">\\n\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header card-success card-inverse\\\">\\n                <span class=\\\"card-title\\\">Update key</span>\\n            </div>\\n            <div class=\\\"card-block\\\">\\n                <form class=\\\"form-add-company\\\" novalidate [formGroup]=\\\"form\\\" (ngSubmit)=\\\"update($event)\\\">\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"inputEnglish\\\">English</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" formControlName=\\\"en\\\" id=\\\"inputEnglish\\\"\\n                                   placeholder=\\\"English\\\" type=\\\"text\\\">\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"form.get('en').hasError('required')\\\">English is required</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"inputHebrew\\\">Hebrew</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" type=\\\"text\\\" id=\\\"inputHebrew\\\" formControlName=\\\"he\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"inputSpanish\\\">Spanish</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" type=\\\"text\\\" id=\\\"inputSpanish\\\" formControlName=\\\"es\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n                            <button [disabled]=\\\"!form.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary btn-bordered\\\">Save\\n                            </button>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dictionary/update/update.component.html\n// module id = ./src/app/dictionary/update/update.component.html\n// module chunks = main","import {Component, Input, OnInit} from '@angular/core';\nimport * as _ from \"lodash\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {DictionariesService} from \"../services/dictionary.service\";\n\n\n@Component({\n    selector: 'app-dictionaries-update',\n    templateUrl: './update.component.html',\n    styleUrls: ['./update.component.css']\n})\n\nexport class UpdateComponent implements OnInit {\n    showLang: boolean = false;\n    showOtherColor: boolean = false;\n    dictionary: any;\n    key: string;\n\n\n    public form: FormGroup = new FormGroup({\n        key: new FormControl(\"\", [Validators.required]),\n        en: new FormControl(\"\", [Validators.required]),\n        he: new FormControl(\"\", [Validators.required]),\n        es: new FormControl(\"\", [Validators.required]),\n    });\n\n    private _subscribers = [];\n\n    constructor(public router: Router,\n                public fb: FormBuilder,\n                public dictionariesService: DictionariesService,\n                public route: ActivatedRoute,) {\n        this._subscribers.push(this.route.data.subscribe((res: any) => {\n            this.form.patchValue(res.data[0]);\n        }))\n    }\n\n\n    ngOnInit() {\n    }\n\n    public update(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        let model = this.form.value;\n        this._subscribers.push(this.dictionariesService.updateByKey(model, model.key).subscribe(\n            () => {\n                this.router.navigate(['/dictionaries']);\n            },\n            (err) => {\n\n            }\n        ));\n    }\n\n    ngOnDestroy() {\n        _.forEach(this._subscribers, (value) => {\n            value.unsubscribe();\n        });\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dictionary/update/update.component.ts","import {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from \"@angular/router\";\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs/add/observable/of\";\nimport {DictionariesService} from \"../services/dictionary.service\";\n\n@Injectable()\nexport class UpdateResolver implements Resolve<any> {\n    constructor(private dictionariesService: DictionariesService) {\n\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\n        return Observable.forkJoin(\n            this.dictionariesService.getViewByKey(route.params['key']),\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/dictionary/update/update.resolver.ts","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {ToastrService} from \"../../shared/toastr.service\";\nimport {Observable} from \"rxjs\";\nimport {AuthService} from \"../../authentication/services/auth.service\";\n\n@Injectable()\nexport class FileService {\n\n    constructor(private http: HttpClient,\n                private authService: AuthService) {\n    }\n\n    private getHeaders() {\n        return new HttpHeaders().set('Authorization', 'Bearer ' + this.authService.getAuthToken());\n    }\n\n    // download file\n    postFile(file: Blob): Observable<any> {\n        const formData: FormData = new FormData();\n        formData.append('FilesUploaded[file]', file, 'a.png');\n        return this.http.post('/v1/uploads/image', formData, {headers: this.getHeaders()});\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/files/services/file.service.ts","module.exports = \"input.ng-touched.ng-invalid {\\n    border-color: red;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/ingredient/create/create.component.css\n// module id = ./src/app/ingredient/create/create.component.css\n// module chunks = main","module.exports = \"<div class=\\\"table-wrapper\\\">\\n    <div class=\\\"wrap-header\\\"></div>\\n    <div class=\\\"wrap-tmain\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header card-success card-inverse\\\">\\n                <span class=\\\"card-title\\\">Create ingredient</span>\\n            </div>\\n            <div class=\\\"card-block\\\">\\n                <form [formGroup]=\\\"ingredientForm\\\" [ngClass]=\\\"{'form-error':submitPending }\\\"\\n                      (submit)=\\\"createIngredient($event)\\\" novalidate>\\n                    <div class=\\\"form-group row mb10\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"name_en\\\">Name (en)</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <div class=\\\"example-full-width\\\">\\n                                <input matInput class=\\\"form-control underline\\\" id=\\\"name_en\\\" formControlName=\\\"name_en\\\">\\n                                <div\\n                                    *ngIf=\\\"ingredientForm.get('name_en').hasError('required') && submitPending\\\">\\n                                    Name is <strong>required</strong>\\n                                </div>\\n                                <p class=\\\"error_message\\\" *ngIf=\\\"isExistErrorByFormField('name_en')\\\">{{\\n                                    getTextErrorByFormField('name_en') }}</p>\\n\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row mb10\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"name_he\\\">Name (he)</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <div class=\\\"example-full-width\\\">\\n                                <input id=\\\"name_he\\\" class=\\\"form-control underline\\\" formControlName=\\\"name_he\\\">\\n                                <div *ngIf=\\\"ingredientForm.get('name_he').hasError('required') && submitPending\\\">\\n                                    Name is <strong>required</strong>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row mb10\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"name_es\\\">Name (es)</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <div class=\\\"example-full-width\\\">\\n                                <input id=\\\"name_es\\\" class=\\\"form-control underline\\\" formControlName=\\\"name_es\\\">\\n\\n                                <div *ngIf=\\\"ingredientForm.get('name_es').hasError('required') && submitPending\\\">\\n                                    Name is <strong>required</strong>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row mb10\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"selectCategory\\\">Select\\n                            category</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <div>\\n                                <select id=\\\"selectCategory\\\"\\n                                        class=\\\"form-control underline\\\"\\n                                        formControlName=\\\"category_id\\\">\\n                                    <option\\n                                        *ngFor=\\\"let category of categoriesOptionsSelect\\\" [value]=\\\"category.value\\\">\\n                                        {{ category.label }}\\n                                    </option>\\n                                </select>\\n\\n                                <div *ngIf=\\\"ingredientForm.get('category_id').hasError('required') && submitPending\\\">\\n                                    Category is <strong>required</strong>\\n                                </div>\\n                                <p class=\\\"error_message\\\" *ngIf=\\\"isExistErrorByFormField('category_id')\\\">{{\\n                                    getTextErrorByFormField('category_id') }}</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row mb10\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"selectCoupon\\\">Select\\n                            coupon</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <div>\\n                                <select id=\\\"selectCoupon\\\"\\n                                        class=\\\"form-control underline\\\"\\n                                        formControlName=\\\"category_id\\\">\\n                                    <option\\n                                        *ngFor=\\\"let coupon of couponsOptionsSelect\\\" [value]=\\\"coupon.value\\\">\\n                                        {{ coupon.label }}\\n                                    </option>\\n                                </select>\\n                                <p class=\\\"error_message\\\" *ngIf=\\\"isExistErrorByFormField('coupon_id')\\\">{{\\n                                    getTextErrorByFormField('coupon_id') }}</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row mb10\\\">\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"limit-wrapper row clearfix\\\" formArrayName=\\\"parts\\\">\\n                                <label class=\\\"col-sm-2 form-control-label text-xs-right\\\">Parts</label>\\n                                <div class=\\\"col-sm-10\\\">\\n                                    <div class=\\\"\\\"\\n                                         *ngFor=\\\"let limit of ingredientForm.controls.parts.controls; let i=index\\\">\\n                                        <div class=\\\" col-sm-12\\\">\\n                                            <div class=\\\"select-container\\\" [formGroupName]=\\\"i\\\">\\n                                                <div class=\\\"field fourth-width row mb10\\\">\\n                                                    <div class=\\\"field half-width row \\\">\\n                                                        <div class=\\\"example-full-width col-sm-4\\\">\\n                                                            <input currencyMask [options]=\\\"{prefix:''}\\\" class=\\\"form-control underline\\\"\\n                                                                   formControlName=\\\"part\\\">\\n                                                            <div\\n                                                                *ngIf=\\\"ingredientForm.get('parts').hasError('required')  && submitPending\\\">\\n                                                                Unit is <strong>required</strong>\\n                                                            </div>\\n                                                        </div>\\n                                                        <div class=\\\"col-sm-4\\\">\\n                                                            <select\\n                                                                formControlName=\\\"unit_id\\\"\\n                                                                class=\\\"form-control underline\\\">\\n                                                                <option value=\\\"\\\" disabled selected>Select unit</option>\\n                                                                <option\\n                                                                    *ngFor=\\\"let unit of unitsOptionsSelect\\\"\\n                                                                    [value]=\\\"unit.value\\\">\\n                                                                    {{ unit.label }}\\n                                                                </option>\\n                                                            </select>\\n                                                        </div>\\n                                                        <button [disabled]=\\\"parts.length == 1\\\"\\n                                                            (click)=\\\"deletePart($event, i)\\\"\\n                                                            class=\\\"btn btn-danger btn-bordered col-sm-2\\\"\\n                                                        >remove\\n                                                        </button>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"\\\">\\n                                    <div class=\\\"col-sm-offset-2  col-sm-10\\\">\\n                                        <button class=\\\"btn btn-info btn-rounded\\\" (click)=\\\"addPart($event)\\\">Add new\\n                                        </button>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"fileImg\\\">Ingredient image</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input type=\\\"file\\\" id=\\\"fileImg\\\" (change)=\\\"fileChangeEvent($event)\\\"/>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <input type=\\\"hidden\\\" formControlName=\\\"image\\\">\\n                                    <div *ngIf=\\\"ingredientForm.get('image').hasError('required')  && submitPending\\\">\\n                                        Image is <strong>required</strong>\\n                                    </div>\\n                                    <image-cropper\\n                                        [imageChangedEvent]=\\\"imageChangedEvent\\\"\\n                                        [maintainAspectRatio]=\\\"true\\\"\\n                                        [aspectRatio]=\\\"1\\\"\\n                                        [resizeToWidth]=\\\"256\\\"\\n                                        format=\\\"png, jpeg\\\"\\n                                        (imageCropped)=\\\"imageCropped($event)\\\"\\n                                        (imageLoaded)=\\\"imageLoaded()\\\"\\n                                        (loadImageFailed)=\\\"loadImageFailed()\\\"\\n                                    ></image-cropper>\\n                                </div>\\n                                <div class=\\\"col-sm-6  preview-img \\\">\\n                                    <img [src]=\\\"croppedImage\\\"/>\\n                                    <div>\\n                                        <span *ngIf=\\\"showBtnSL\\\" (click)=\\\"handleFileInput()\\\" class=\\\"btn btn-danger mt10\\\">Save image</span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\" row\\\">\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n                                    <button class=\\\"btn btn-danger btn-bordered margin-right\\\"\\n                                            [routerLink]=\\\"['/ingredients']\\\">Cancel\\n                                    </button>\\n                                    <button class=\\\"btn btn-primary btn-bordered\\\" type=\\\"submit\\\"\\n                                    >Create\\n                                    </button>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/ingredient/create/create.component.html\n// module id = ./src/app/ingredient/create/create.component.html\n// module chunks = main","import * as _ from \"lodash\";\nimport {Component, OnInit} from \"@angular/core\";\nimport {FormBuilder, FormControl, FormGroup, Validators, FormArray} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {IngredientService} from \"../service/ingredient.service\";\nimport {Category} from \"../../category/models/category\";\nimport {Unit} from \"../../unit/models/unit\";\nimport {FileService} from \"../../files/services/file.service\";\nimport {ToastrService} from \"../../shared/toastr.service\";\nimport {unescape} from \"querystring\";\nimport {Coupon} from \"../../coupon/models/coupon\";\n\n@Component({\n    selector: 'ingredient-create',\n    templateUrl: './create.component.html',\n    styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n    submitPending: boolean = false;\n    showImg: boolean = false;\n    fileToUpload: File = null;\n    imgId: number;\n    imgPath: string = '';\n    showBtnSL: boolean = false;\n    imageChangedEvent: any = '';\n    croppedImage: any = '';\n    errors = [];\n\n    public parts = new FormArray([\n        new FormGroup({\n            part: new FormControl(1, [Validators.required]),\n            unit_id: new FormControl(\"\", [Validators.required]),\n            status: new FormControl(1, [Validators.required]),\n        })\n    ]);\n    public ingredientForm: FormGroup = new FormGroup({\n        name_en: new FormControl(\"\", [Validators.required]),\n        name_he: new FormControl(\"\", []),\n        name_es: new FormControl(\"\", []),\n        category_id: new FormControl(\"\", [Validators.required]),\n        coupon_id: new FormControl(\"\"),\n        status: new FormControl(1, [Validators.required]),\n        parts: this.parts,\n        image: new FormControl(\"\", [Validators.required])\n    });\n\n    categoriesOptionsSelect = [];\n    private _subscribers = [];\n    private _categories = [];\n\n    unitsOptionsSelect = [];\n    private _units = [];\n\n    couponsOptionsSelect = [];\n    private _coupons = [];\n\n    constructor(public router: Router,\n                public fb: FormBuilder,\n                public fileService: FileService,\n                public ingredientService: IngredientService,\n                private _route: ActivatedRoute) {\n\n        this._subscribers.push(this.ingredientForm.valueChanges.subscribe(\n            () => this.submitPending = false\n        ));\n\n        this._subscribers.push(this._route.data.subscribe((res: any) => {\n            this._categories = res.data[0].data;\n            this.categoriesOptionsSelect = _.map(this._categories, (item: Category) => {\n                return {value: item.id, label: item.name_en};\n            });\n\n            this._units = res.data[1].data;\n            this.unitsOptionsSelect = _.map(this._units, (item: Unit) => {\n                return {value: item.id, label: item.name_en};\n            });\n\n            this._coupons = res.data[2].data;\n            this.couponsOptionsSelect = _.map(this._coupons, (item: Coupon) => {\n                return {value: item.id, label: item.title_en};\n            });\n\n            this.couponsOptionsSelect.unshift({value: '', label: 'not set'});\n        }));\n    }\n\n    ngOnInit() {\n\n    }\n\n    public createIngredient(event) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (!this.ingredientForm.valid) {\n            this.submitPending = true;\n            return;\n        }\n\n        this.submitPending = true;\n        let ingredient = this.ingredientForm.value;\n        this._subscribers.push(this.ingredientService.create(ingredient).subscribe(\n            () => {\n                this.router.navigate(['/ingredients']);\n            },\n            (err) => {\n                this.errors = err.error;\n            }\n        ));\n    }\n\n    ngOnDestroy() {\n        _.forEach(this._subscribers, (value) => {\n            value.unsubscribe();\n        });\n    }\n\n    public addPart(event) {\n        event.preventDefault();\n        this.parts.push(new FormGroup({\n            part: new FormControl(1, [Validators.required]),\n            unit_id: new FormControl(\"\", [Validators.required]),\n            status: new FormControl(1, [Validators.required]),\n        }));\n    }\n\n    public deletePart(event, index) {\n        event.preventDefault();\n        this.parts.removeAt(index);\n    }\n\n\n    handleFileInput() {\n        this.uploadFileToActivity(this.croppedImage).subscribe(data => {\n            this.imgPath = data.path;\n            this.showBtnSL = false;\n            this.ingredientForm.patchValue({image: data.id});\n            return true;\n        }, error => {\n            ToastrService.error(\"Error\", error);\n        });\n    }\n\n    fileChangeEvent(event: any): void {\n        if(event.target.files[0].size > 1048576) {\n            ToastrService.error(\"Error\", 'Size must be smaller than 1Mb');\n\n        } else {\n            this.imageChangedEvent = event;\n            this.fileToUpload = event.target.files;\n            this.showBtnSL = true;\n        }\n    }\n\n    imageCropped(image: string) {\n        this.croppedImage = image;\n        this.showBtnSL = true;\n    }\n\n    imageLoaded() {\n        // show cropper\n\n    }\n\n    loadImageFailed() {\n        this.showBtnSL = false;\n        ToastrService.error(\"Error\", 'Image must be \".jpg\" or \".png\"');\n    }\n\n    private generateFile(dataURI: string): Blob {\n        let byteString;\n        if (dataURI.split(',')[0].indexOf('base64') >= 0) {\n            byteString = atob(dataURI.split(',')[1]);\n        } else {\n            byteString = unescape(dataURI.split(',')[1]);\n        }\n        const type = dataURI\n            .split(',')[0]\n            .split(':')[1]\n            .split(';')[0];\n        const ia = new Uint8Array(byteString.length);\n        for (let i = 0; i < byteString.length; i++) {\n            ia[i] = byteString.charCodeAt(i);\n        }\n        return new Blob([ia], {type});\n    }\n\n    isExistErrorByFormField(formField: string): boolean {\n        return _.has(this.errors, formField);\n    }\n\n    getTextErrorByFormField(formField: string): string {\n        let arrMessage = this.errors[formField];\n        return arrMessage.join(',');\n    }\n\n    uploadFileToActivity(croppedImage: string) {\n        return this.fileService.postFile(this.generateFile(croppedImage));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/ingredient/create/create.component.ts","import {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from \"@angular/router\";\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs/add/observable/of\";\nimport {CategoryService} from \"../../category/service/category.service\";\nimport {UnitService} from \"../../unit/service/unit.service\";\nimport {Coupon} from \"../../coupon/models/coupon\";\nimport {CouponService} from \"../../coupon/services/coupon.service\";\n\n@Injectable()\nexport class CreateResolver implements Resolve<any> {\n    constructor(private categoryService: CategoryService,\n                private unitService: UnitService,\n                private couponService: CouponService,\n    ) {\n\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\n        let reqObj = {\n            page: 1,\n            limit: 100,\n            status: 1,\n            // order: 1\n        };\n        return Observable.forkJoin(\n            this.categoryService.getList(reqObj),\n            this.unitService.getList(reqObj),\n            this.couponService.getList(reqObj),\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/ingredient/create/create.resolver.ts","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {ListComponent} from \"./list/list.component\";\nimport {IngredientService} from \"./service/ingredient.service\";\nimport {ListResolver} from \"./list/list.resolver\";\nimport {ingredientRoutes} from \"./ingredient.routing\";\nimport {RouterModule} from \"@angular/router\";\nimport {CreateComponent} from \"./create/create.component\";\nimport {UpdateComponent} from \"./update/update.component\";\nimport {UpdateResolver} from \"./update/update.resolver\";\nimport {CreateResolver} from \"./create/create.resolver\";\nimport {BrowserModule} from '@angular/platform-browser'\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {HttpModule} from \"@angular/http\";\nimport {MaterialModule} from \"../shared/material.module\";\nimport {FileService} from \"../files/services/file.service\";\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {ModalModule} from \"ngx-bootstrap\";\nimport {ImageCropperModule} from \"ngx-image-cropper\";\nimport {CurrencyMaskModule} from \"ng2-currency-mask\";\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        CurrencyMaskModule,\n        HttpModule,\n        HttpClientModule,\n        MaterialModule,\n        ReactiveFormsModule,\n        CommonModule,\n        FormsModule,\n        RouterModule.forChild(ingredientRoutes),\n        NgbModule.forRoot(),\n        ModalModule.forRoot(),\n        ReactiveFormsModule,\n        ImageCropperModule\n    ],\n    declarations: [\n        ListComponent,\n        CreateComponent,\n        UpdateComponent,\n    ],\n    providers: [\n        IngredientService,\n        ListResolver,\n        UpdateResolver,\n        CreateResolver,\n        FileService\n    ]\n})\nexport class IngredientModule {\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/ingredient/ingredient.module.ts","import {Routes} from \"@angular/router\";\nimport {ListComponent} from \"./list/list.component\";\nimport {RootComponent} from \"../core/root.component\";\nimport {AppResolver} from \"../app.resolver\";\nimport {ListResolver} from \"./list/list.resolver\";\nimport {CreateComponent} from \"./create/create.component\";\nimport {UpdateResolver} from \"./update/update.resolver\";\nimport {UpdateComponent} from \"./update/update.component\";\nimport {CreateResolver} from \"./create/create.resolver\";\n\nexport const ingredientRoutes: Routes = [\n    {\n        path: 'ingredients',\n        component: RootComponent,\n        canActivate: [AppResolver],\n        children: [\n            {\n                path: '',\n                component: ListComponent,\n                resolve: {\n                    'data': ListResolver\n                }\n            },\n            {\n                path: 'create', component: CreateComponent,\n                resolve: {\n                    'data': CreateResolver\n                }\n            },\n            {\n                path: 'update/:id', component: UpdateComponent,\n                resolve: {\n                    'data': UpdateResolver\n                }\n            },\n            // {\n            //     path: ':id', component: ViewComponent,\n            //     resolve: {\n            //         'data': ViewResolver\n            //     },\n            // },\n        ]\n    },\n\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/ingredient/ingredient.routing.ts","module.exports = \"table {\\n    width: 100%;\\n}\\n\\ntable td,\\ntable th {\\n    padding: 5px;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/ingredient/list/list.component.css\n// module id = ./src/app/ingredient/list/list.component.css\n// module chunks = main","module.exports = \"<div class=\\\"wrapper-content\\\">\\n    <div class=\\\"table-wrapper\\\">\\n        <div class=\\\"wrap-header\\\">\\n            <h3>{{title}}</h3>\\n        </div>\\n        <div class=\\\"wrap-tmain\\\">\\n            <div class=\\\"table-scroll\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-block\\\" style=\\\"padding-bottom: 0\\\">\\n                        <table border=\\\"1\\\">\\n                            <thead>\\n                            <tr class=\\\"ng2-smart-titles\\\">\\n                                <th class=\\\"ng2-smart-actions\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">Actions</div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th \\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        #\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        Used by recipes\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th image\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        Ingredient Image\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th name\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        Ingredient Name\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th \\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        Category\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th \\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        Coupon\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th status\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        Status\\n                                    </div>\\n                                </th>\\n\\n                            </tr>\\n                            <tr class=\\\"ng2-smart-filters\\\">\\n                                <th class=\\\"ng2-smart-actions-title ng2-smart-actions-title-add\\\">\\n                                    <a routerLink=\\\"create\\\" routerLinkActive=\\\"active\\\"\\n                                       class=\\\"btn btn-secondary\\\" href=\\\"#\\\">+ Add ingredient</a>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th \\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th \\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th image\\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n                                        <div class=\\\"ng2-smart-filter\\\">\\n                                            <input class=\\\"form-control ng-untouched ng-pristine ng-valid\\\"\\n                                                   [(ngModel)]=\\\"searchName\\\"\\n                                                   (keyup.enter)=\\\"applyFilters($event)\\\"\\n                                                   type=\\\"text\\\"\\n                                                   placeholder=\\\"Name\\\">\\n                                        </div>\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th age\\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n                                        <select\\n                                            class=\\\"form-control underline\\\"\\n                                            (change)=\\\"applyFilters($event)\\\"\\n                                            [(ngModel)]=\\\"catId\\\">\\n                                            <option *ngFor=\\\"let category of categoryOptionsSelect\\\"\\n                                                    [value]=\\\"category.value\\\"\\n                                                    (onClick)=\\\"applyFilters($event)\\\">\\n                                                {{ category.label }}\\n                                            </option>\\n                                        </select>\\n                                    </div>\\n                                </th>\\n\\n                                <th class=\\\"ng2-smart-th age\\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n                                        <select\\n                                            class=\\\"form-control underline\\\"\\n                                            (change)=\\\"applyFilters($event)\\\"\\n                                            [(ngModel)]=\\\"couponId\\\">\\n                                            <option *ngFor=\\\"let coupon of couponOptionsSelect\\\"\\n                                                    [value]=\\\"coupon.value\\\"\\n                                                    (onClick)=\\\"applyFilters($event)\\\">\\n                                                {{ coupon.label }}\\n                                            </option>\\n                                        </select>\\n                                    </div>\\n                                </th>\\n\\n                                <th class=\\\"ng2-smart-th age\\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n                                        <select\\n                                            class=\\\"form-control underline\\\"\\n                                            (change)=\\\"applyFilters($event)\\\"\\n                                            [(ngModel)]=\\\"searchStatus\\\">\\n                                            <option *ngFor=\\\"let status of statusOptionsSelect\\\"\\n                                                    [value]=\\\"status.value\\\"\\n                                                    (onClick)=\\\"applyFilters($event)\\\">\\n                                                {{ status.label }}\\n                                            </option>\\n                                        </select>\\n                                    </div>\\n                                </th>\\n                            </tr>\\n                            </thead>\\n                            <tbody>\\n                            <tr *ngFor=\\\"let ingredient of itemList; let i = index\\\">\\n                                <td>\\n                                    <a [routerLink]=\\\"['update/' + ingredient.id]\\\" *ngIf=\\\"ingredient.status == 1\\\"\\n                                       routerLinkActive=\\\"active\\\" class=\\\"btn btn-info\\\">\\n                                        <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n                                        edit</a>\\n                                    <button *ngIf=\\\"ingredient.status == 1\\\" [disabled]=\\\"ingredient.activeRecipeCount != '0'\\\" title=\\\"This ingredient used in {{ingredient.activeRecipeCount}} recepies\\\" class=\\\"btn btn-danger\\\"\\n                                          (click)=\\\"onDelete($event, content, ingredient)\\\">\\n                                        <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>\\n                                     delete</button>\\n                                </td>\\n                                <td>{{(i+1) + (page - 1) * selectedLimit}}</td>\\n                                <td>{{ingredient.activeRecipeCount}}</td>\\n                                <td>\\n                                    <img *ngIf=\\\"ingredient.imageFile\\\" src=\\\"{{ingredient.imageFile.path}}\\\">\\n                                </td>\\n                                <td>{{ingredient.name_en}}</td>\\n                                <td>{{ingredient.category.name_en}}</td>\\n                                <td>\\n                                    <img *ngIf=\\\"ingredient?.coupon?.image\\\" src=\\\"{{ingredient?.coupon?.image.path}}\\\">\\n                                    <br>\\n                                    {{ingredient?.coupon?.title_en}}\\n                                    <br>\\n                                    {{ingredient?.coupon?.start_date}} - {{ingredient?.coupon?.finish_date}}\\n                                </td>\\n                                <td>\\n                                    <span class=\\\"active-status edit button\\\"\\n                                          *ngIf=\\\"ingredient.status == 1\\\">Active</span>\\n                                    <span class=\\\"deleted-status delete button\\\"\\n                                          *ngIf=\\\"ingredient.status == 3 \\\">Deleted</span>\\n                                </td>\\n                            </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                    <div class=\\\"page-select\\\">\\n                        <div class=\\\"col-sm-8\\\">\\n                            <select class=\\\"form-control\\\" style=\\\"width: 200px;\\\"\\n                                    [(ngModel)]=\\\"selectedLimit\\\"\\n                                    (change)=\\\"onLimitSelected($event)\\\">\\n                                <option *ngFor=\\\"let item of limitOptionsSelect\\\" [value]=\\\"item.value\\\">\\n                                    {{ item.label }}\\n                                </option>\\n                            </select>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\" *ngIf=\\\"itemSize > selectedLimit\\\">\\n                            <ngb-pagination\\n                                [collectionSize]=\\\"itemSize\\\"\\n                                [(page)]=\\\"page\\\"\\n                                (pageChange)=\\\"onPageChange($event)\\\"\\n                                [pageSize]=\\\"selectedLimit\\\"\\n                                [rotate]=\\\"true\\\"\\n                                [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n        <i class=\\\"material-icons\\\">clear</i>\\n    </button>\\n    <div class=\\\"modal-body delete-modal clearfix\\\">\\n        <p>Are you sure you want to delete the ingredient <b>«{{itemTitle}}»?</b></p>\\n        <span>This action cannot be undone </span>\\n        <p>\\n            <button type=\\\"button\\\" class=\\\"btn m-btn_no-bg margin-right\\\" (click)=\\\"d('no')\\\">Cancel</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-color\\\" (click)=\\\"c('yes')\\\">Delete it!</button>\\n        </p>\\n\\n    </div>\\n</ng-template>\\n\\n<template ngbModalContainer></template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/ingredient/list/list.component.html\n// module id = ./src/app/ingredient/list/list.component.html\n// module chunks = main","import * as _ from \"lodash\";\nimport {Component, OnInit} from \"@angular/core\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Observable} from \"rxjs/Observable\";\nimport {IngredientService} from \"../service/ingredient.service\";\nimport {Ingredient} from \"../models/ingredient\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {Coupon} from \"../../coupon/models/coupon\";\nimport {Category} from \"../../category/models/category\";\n\n@Component({\n    selector: 'ingredient-list',\n    templateUrl: './list.component.html',\n    styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n    itemList: Ingredient[];\n    itemSize: number;\n    itemTitle: string;\n    private title = 'Ingredients list';\n\n    searchName = '';\n    searchStatus = 1;\n    catId: number;\n    couponId: number;\n\n    isShowPagination: boolean = true;\n    statusOptionsSelect = [\n        {\n            value: '',\n            label: 'All'\n        },\n        {\n            value: 1,\n            label: 'Active'\n        },\n        {\n            value: 3,\n            label: 'Deleted'\n        }\n    ];\n    public categoryOptionsSelect = [{\n        value: '',\n        label: 'All'\n    }];\n    public couponOptionsSelect = [{\n        value: '',\n        label: 'All'\n    }];\n    public limitOptionsSelect = [\n        {\n            value: 5,\n            label: '5'\n        },\n        {\n            value: 10,\n            label: '10'\n        },\n        {\n            value: 20,\n            label: '20'\n        },\n        {\n            value: 50,\n            label: '50'\n        },\n        {\n            value: 100,\n            label: '100'\n        }\n    ];\n    public page = 1;\n\n    public selectedLimit = 10;\n\n    private _subscribers = [];\n\n    public categoryObj = {};\n\n    constructor(public entityService: IngredientService,\n                private modalService: NgbModal,\n                private _route: ActivatedRoute) {\n\n        this._subscribers.push(this._route.data.subscribe((res: any) => {\n            _.map(res.data[1].data, (item: Category) => {\n                this.categoryOptionsSelect.push({\n                    value: item.id.toString(),\n                    label: item.name_en\n                });\n            });\n            _.map(res.data[2].data, (item: Coupon) => {\n                this.couponOptionsSelect.push({\n                    value: item.id.toString(),\n                    label: item.title_en\n                });\n            });\n            this.itemList = _.take(res.data[0].data, this.selectedLimit);\n            this.itemSize = +res.data[0].count;\n        }));\n    }\n\n    onDelete(event, content, ingredient: Ingredient) {\n        event.preventDefault();\n        this.itemTitle = ingredient.name_en;\n        this.modalService.open(content).result.then((result) => {\n            this._subscribers.push(Observable.concat(\n                this.entityService.deleteById(ingredient.id),\n                this.entityService.getList(this.buildListResponseObject())\n            ).subscribe(\n                (res: any) => {\n                    if (res) {\n                        this.itemList = res.data;\n                        this.itemSize = +res.count;\n                    }\n                },\n                (err) => {\n\n                }\n            ));\n        });\n    }\n\n    ngOnInit() {\n    }\n\n    ngOnDestroy() {\n        _.forEach(this._subscribers, (value) => {\n            value.unsubscribe();\n        });\n    }\n\n    public onLimitSelected(selected) {\n        this.page = 1;\n        this.listRequest();\n    }\n\n    /**\n     * Use this method to get current list\n     * @param page\n     */\n    private listRequest(page?) {\n        this._subscribers.push(this.entityService.getList(this.buildListResponseObject(page))\n            .subscribe(\n                (res: { data: any, count: number }) => {\n                    this.itemList = res.data;\n                    this.itemSize = +res.count;\n                },\n                (err) => {\n\n                }\n            ));\n    }\n\n    /**\n     * Use this method to prepare request object for list. Sets limits, pagination, etc.\n     * @param page\n     * @returns {{query: any, page: (any|number), limit: number, sort: string, order: number, filter: string}}\n     */\n    private buildListResponseObject(page?) {\n        return {\n            page: page || this.page,\n            limit: this.selectedLimit,\n            status: this.searchStatus,\n            name: this.searchName,\n            cat_id: this.catId,\n            coupon_id: this.couponId,\n        }\n    }\n\n    public onPageChange(event) {\n        this.listRequest(event);\n    }\n\n    public applyFilters(event) {\n        event.preventDefault();\n        this.page = 1;\n        this.listRequest();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/ingredient/list/list.component.ts","import {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from \"@angular/router\";\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs/add/observable/of\";\nimport {IngredientService} from \"../service/ingredient.service\";\nimport {CategoryService} from \"../../category/service/category.service\";\nimport {CouponService} from \"../../coupon/services/coupon.service\";\n\n@Injectable()\nexport class ListResolver implements Resolve<any> {\n    constructor(private ingredientService: IngredientService,\n                private categoryService: CategoryService,\n                private couponService: CouponService,) {\n\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\n        let reqObj = {\n            page: 1,\n            limit: 10,\n            status: 1,\n        };\n        let reqObjAdditional = {\n            page: 1,\n            limit: 100,\n            status: 1,\n        };\n        return Observable.forkJoin(\n            this.ingredientService.getList(reqObj),\n            this.categoryService.getList(reqObjAdditional),\n            this.couponService.getList(reqObjAdditional),\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/ingredient/list/list.resolver.ts","import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {ToastrService} from \"../../shared/toastr.service\";\nimport {AuthService} from \"../../authentication/services/auth.service\";\nimport {ErrorHandler} from \"../../shared/error-handler.service\";\nimport {ListRequest} from \"../../shared/models/list-request.model\";\nimport {ListRequestService} from \"../../shared/list-request.service\";\n\n@Injectable()\nexport class IngredientService {\n\n    private path = '/v1/ingredients';\n\n    constructor(private http: HttpClient,\n                private authService: AuthService,\n                private errorHandler: ErrorHandler) {\n    }\n\n    private getHeaders() {\n        return new HttpHeaders().set('Authorization', 'Bearer ' + this.authService.getAuthToken());\n    }\n\n    public getList(resObj: ListRequest = {}): Observable<{}> {\n        return this.http.get(this.path + '?' + ListRequestService.parseRequestObject(resObj), {headers: this.getHeaders()})\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n\n    public getViewById(id: number): Observable<{}> {\n        return this.http.get(this.path + '/' + id, {headers: this.getHeaders()})\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n\n    public create(ingredient): Observable<{}> {\n        return this.http.post(this.path, ingredient, {headers: this.getHeaders()})\n            .do(() => ToastrService.success(\"\", \"Ingredient was created\"))\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n\n    public updateById(ingredient, id: number): Observable<{}> {\n        return this.http.put(this.path + '/' + id, ingredient, {headers: this.getHeaders()})\n            .do(() => ToastrService.success(\"\", \"Ingredient was updated\"))\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n\n    public deleteById(id: number): Observable<{}> {\n        return this.http.delete(this.path + '/' + id, {headers: this.getHeaders()})\n            .do(() => ToastrService.success(\"\", \"Ingredient was deleted\"))\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/ingredient/service/ingredient.service.ts","module.exports = \"<div class=\\\"table-wrapper\\\">\\n    <div class=\\\"wrap-header\\\"></div>\\n    <div class=\\\"wrap-tmain\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header card-success card-inverse\\\">\\n                <span class=\\\"card-title\\\">Create ingredient</span>\\n            </div>\\n            <div class=\\\"card-block\\\">\\n                <form [formGroup]=\\\"ingredientForm\\\" [ngClass]=\\\"{'form-error':submitPending }\\\"\\n                      (submit)=\\\"createIngredient($event)\\\" novalidate>\\n                    <div class=\\\"form-group row mb10\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"name_en\\\">Name (en)</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <div class=\\\"example-full-width\\\">\\n                                <input matInput class=\\\"form-control underline\\\" id=\\\"name_en\\\" formControlName=\\\"name_en\\\">\\n                                <div\\n                                    *ngIf=\\\"ingredientForm.get('name_en').hasError('required') && submitPending\\\">\\n                                    Name is <strong>required</strong>\\n                                </div>\\n\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row mb10\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"name_he\\\">Name (he)</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <div class=\\\"example-full-width\\\">\\n                                <input id=\\\"name_he\\\" class=\\\"form-control underline\\\" formControlName=\\\"name_he\\\">\\n                                <div *ngIf=\\\"ingredientForm.get('name_he').hasError('required') && submitPending\\\">\\n                                    Name is <strong>required</strong>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row mb10\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"name_es\\\">Name (es)</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <div class=\\\"example-full-width\\\">\\n                                <input id=\\\"name_es\\\" class=\\\"form-control underline\\\" formControlName=\\\"name_es\\\">\\n\\n                                <div *ngIf=\\\"ingredientForm.get('name_es').hasError('required') && submitPending\\\">\\n                                    Name is <strong>required</strong>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row mb10\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"selectCategory\\\">Select\\n                            category</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <div>\\n                                <select id=\\\"selectCategory\\\"\\n                                        class=\\\"form-control underline\\\"\\n                                        formControlName=\\\"category_id\\\">\\n                                    <option\\n                                        *ngFor=\\\"let category of categoriesOptionsSelect\\\" [value]=\\\"category.value\\\">\\n                                        {{ category.label }}\\n                                    </option>\\n                                </select>\\n\\n                                <div *ngIf=\\\"ingredientForm.get('category_id').hasError('required') && submitPending\\\">\\n                                    Category is <strong>required</strong>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group row mb10\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"selectCoupon\\\">Select\\n                            coupon</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <div>\\n                                <select id=\\\"selectCoupon\\\"\\n                                        class=\\\"form-control underline\\\"\\n                                        formControlName=\\\"coupon_id\\\">\\n                                    <option *ngFor=\\\"let coupon of couponsOptionsSelect\\\" [value]=\\\"coupon.value\\\">\\n                                        {{ coupon.label }}\\n                                    </option>\\n                                </select>\\n                                <p class=\\\"error_message\\\" *ngIf=\\\"isExistErrorByFormField('coupon_id')\\\">{{\\n                                    getTextErrorByFormField('coupon_id') }}</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row mb10\\\">\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"limit-wrapper row clearfix\\\" formArrayName=\\\"parts\\\">\\n                                <label class=\\\"col-sm-2 form-control-label text-xs-right\\\">Parts</label>\\n                                <div class=\\\"col-sm-10\\\">\\n                                    <div class=\\\"\\\"\\n                                         *ngFor=\\\"let limit of ingredientForm.controls.parts.controls; let i=index\\\">\\n                                        <div class=\\\" col-sm-12\\\">\\n                                            <div class=\\\"select-container\\\" [formGroupName]=\\\"i\\\">\\n                                                <div class=\\\"field fourth-width row mb10\\\">\\n                                                    <div class=\\\"field half-width row \\\">\\n                                                        <div class=\\\"example-full-width col-sm-4\\\">\\n                                                            <input currencyMask [options]=\\\"{prefix:''}\\\" class=\\\"form-control underline\\\"\\n                                                                   formControlName=\\\"part\\\">\\n                                                            <div\\n                                                                *ngIf=\\\"ingredientForm.get('name_es').hasError('required')  && submitPending\\\">\\n                                                                Name is <strong>required</strong>\\n                                                            </div>\\n\\n                                                        </div>\\n\\n                                                        <div class=\\\"col-sm-4\\\">\\n                                                            <select\\n                                                                formControlName=\\\"unit_id\\\"\\n                                                                class=\\\"form-control underline\\\">\\n                                                                <option selected=\\\"selected\\\"\\n                                                                        *ngFor=\\\"let unit of unitsOptionsSelect\\\"\\n                                                                        [value]=\\\"unit.value\\\">\\n                                                                    {{ unit.label }}\\n                                                                </option>\\n                                                            </select>\\n                                                        </div>\\n                                                        <button [disabled]=\\\"parts.length == 1\\\"\\n                                                            (click)=\\\"deletePart($event, i)\\\"\\n                                                            class=\\\"btn btn-danger btn-bordered col-sm-2\\\"\\n                                                        >remove\\n                                                        </button>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"\\\">\\n                                    <div class=\\\"col-sm-offset-2  col-sm-10\\\">\\n                                        <button class=\\\"btn btn-info btn-rounded\\\" (click)=\\\"addPart($event)\\\">Add new\\n                                        </button>\\n                                    </div>\\n\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"fileImg\\\">Ingredient image</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input type=\\\"file\\\" id=\\\"fileImg\\\" (change)=\\\"fileChangeEvent($event)\\\"/>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <input type=\\\"hidden\\\" formControlName=\\\"image\\\">\\n                                    <div *ngIf=\\\"ingredientForm.get('image').hasError('required') && submitPending\\\">\\n                                        Image is <strong>required</strong>\\n                                    </div>\\n                                    <image-cropper\\n                                        [imageChangedEvent]=\\\"imageChangedEvent\\\"\\n                                        [maintainAspectRatio]=\\\"true\\\"\\n                                        [aspectRatio]=\\\"1\\\"\\n                                        [resizeToWidth]=\\\"256\\\"\\n                                        format=\\\"png, jpeg\\\"\\n                                        (imageCropped)=\\\"imageCropped($event)\\\"\\n                                        (imageLoaded)=\\\"imageLoaded()\\\"\\n                                        (loadImageFailed)=\\\"loadImageFailed()\\\"\\n                                    ></image-cropper>\\n                                </div>\\n                                <div class=\\\"col-sm-6  preview-img \\\">\\n                                    <img [src]=\\\"croppedImage\\\"/>\\n                                    <div>\\n                                        <span *ngIf=\\\"showBtnSL\\\" (click)=\\\"handleFileInput()\\\" class=\\\"btn btn-danger mt10\\\">Save image</span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\" row\\\">\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n                                    <button class=\\\"btn btn-danger btn-bordered margin-right\\\"\\n                                            [routerLink]=\\\"['/ingredients']\\\">Cancel\\n                                    </button>\\n                                    <button class=\\\"btn btn-primary btn-bordered\\\" type=\\\"submit\\\"\\n                                    >Update\\n                                    </button>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/ingredient/update/update.component.html\n// module id = ./src/app/ingredient/update/update.component.html\n// module chunks = main","import * as _ from 'lodash';\nimport {Component, OnInit} from \"@angular/core\";\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {IngredientService} from \"../service/ingredient.service\";\nimport {Unit} from \"../../unit/models/unit\";\nimport {Category} from \"../../category/models/category\";\nimport {unescape} from \"querystring\";\nimport {ToastrService} from \"../../shared/toastr.service\";\nimport {FileService} from \"../../files/services/file.service\";\nimport {Coupon} from \"../../coupon/models/coupon\";\n\n@Component({\n    selector: 'ingredient-update',\n    templateUrl: './update.component.html'\n})\nexport class UpdateComponent implements OnInit {\n    submitPending: boolean = false;\n    showImg: boolean = false;\n    fileToUpload: File = null;\n    imgId: number;\n    imgPath: string = '';\n    showBtnSL: boolean = false;\n    imageChangedEvent: any = '';\n    croppedImage: any = '';\n    errors = [];\n\n    public parts = new FormArray([\n        new FormGroup({\n            part: new FormControl(1, [Validators.required]),\n            unit_id: new FormControl(\"\", [Validators.required]),\n            status: new FormControl(1, [Validators.required]),\n        })\n    ]);\n    public ingredientForm: FormGroup = new FormGroup({\n        name_en: new FormControl(\"\", [Validators.required]),\n        name_he: new FormControl(\"\", []),\n        name_es: new FormControl(\"\", []),\n        image: new FormControl(\"\", [Validators.required]),\n        category_id: new FormControl(\"\", [Validators.required]),\n        coupon_id: new FormControl(\"\"),\n        status: new FormControl(1, [Validators.required]),\n        parts: this.parts\n    });\n\n    categoriesOptionsSelect = [];\n    private _subscribers = [];\n    private _categories = [];\n\n    couponsOptionsSelect = [];\n    private _coupons = [];\n\n    unitsOptionsSelect = [];\n    private _units = [];\n    private id: number;\n\n    constructor(public router: Router,\n                public fb: FormBuilder,\n                public fileService: FileService,\n                public ingredientService: IngredientService,\n                private _route: ActivatedRoute) {\n\n        this._subscribers.push(this.ingredientForm.valueChanges.subscribe(\n            () => this.submitPending = false\n        ));\n\n        this._subscribers.push(this._route.data.subscribe((res: any) => {\n            this.id = res.data[0].id;\n            this._categories = res.data[1].data;\n            this.categoriesOptionsSelect = _.map(this._categories, (item: Category) => {\n                return {value: item.id, label: item.name_en};\n            });\n            this._units = res.data[2].data;\n            this.unitsOptionsSelect = _.map(this._units, (item: Unit) => {\n                return {value: item.id, label: item.name_en};\n            });\n            this.ingredientForm.patchValue(res.data[0]);\n            if (res.data[0].image !== null) {\n                this.ingredientForm.patchValue({image: res.data[0].image.id});\n                this.croppedImage = res.data[0].image.path;\n            }\n            _.forEach(res.data[0].parts, (item: any, i) => {\n                this.parts.setControl(+i, new FormGroup({\n                    part: new FormControl(item.part, [Validators.required]),\n                    unit_id: new FormControl(item.unit_id, [Validators.required]),\n                    status: new FormControl(item.status, [Validators.required]),\n                }));\n            });\n\n            this._coupons = res.data[3].data;\n            this.couponsOptionsSelect = _.map(this._coupons, (item: Coupon) => {\n                return {value: item.id, label: item.title_en};\n            });\n            this.couponsOptionsSelect.unshift({value: '', label: 'not set'});\n\n        }));\n    }\n\n    ngOnInit() {\n\n    }\n\n    public createIngredient(event) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (!this.ingredientForm.valid) {\n            this.submitPending = true;\n            return;\n        }\n\n        this.submitPending = true;\n        let ingredient = this.ingredientForm.value;\n        this._subscribers.push(this.ingredientService.updateById(ingredient, this.id).subscribe(\n            () => {\n                this.router.navigate(['/ingredients']);\n            },\n            (err) => {\n                this.errors = err.error;\n            }\n        ));\n    }\n\n    ngOnDestroy() {\n        _.forEach(this._subscribers, (value) => {\n            value.unsubscribe();\n        });\n    }\n\n    public addPart(event) {\n        event.preventDefault();\n        this.parts.push(new FormGroup({\n            part: new FormControl(1, [Validators.required]),\n            unit_id: new FormControl(\"\", [Validators.required]),\n            status: new FormControl(1, [Validators.required]),\n        }));\n    }\n\n    public deletePart(event, index) {\n        event.preventDefault();\n        this.parts.removeAt(index);\n    }\n\n    handleFileInput() {\n        this.uploadFileToActivity(this.croppedImage).subscribe(data => {\n            this.imgPath = data.path;\n            this.showBtnSL = false;\n            this.ingredientForm.patchValue({image: data.id});\n            return true;\n        }, error => {\n            ToastrService.error(\"Error\", error);\n        });\n    }\n\n    fileChangeEvent(event: any): void {\n        if(event.target.files[0].size > 1048576) {\n            ToastrService.error(\"Error\", 'Size must be smaller than 1Mb');\n\n        } else {\n            this.imageChangedEvent = event;\n            this.fileToUpload = event.target.files;\n            this.showBtnSL = true;\n        }\n    }\n\n    imageCropped(image: string) {\n        this.croppedImage = image;\n        this.showBtnSL = true;\n    }\n\n    imageLoaded() {\n        // show cropper\n\n    }\n\n    loadImageFailed() {\n        this.showBtnSL = false;\n        ToastrService.error(\"Error\", 'Image must be \".jpg\" or \".png\"');\n    }\n\n    private generateFile(dataURI: string): Blob {\n        let byteString;\n        if (dataURI.split(',')[0].indexOf('base64') >= 0) {\n            byteString = atob(dataURI.split(',')[1]);\n        } else {\n            byteString = unescape(dataURI.split(',')[1]);\n        }\n        const type = dataURI\n            .split(',')[0]\n            .split(':')[1]\n            .split(';')[0];\n        const ia = new Uint8Array(byteString.length);\n        for (let i = 0; i < byteString.length; i++) {\n            ia[i] = byteString.charCodeAt(i);\n        }\n        return new Blob([ia], {type});\n    }\n\n    isExistErrorByFormField(formField: string): boolean {\n        return _.has(this.errors, formField);\n    }\n\n    getTextErrorByFormField(formField: string): string {\n        let arrMessage = this.errors[formField];\n        return arrMessage.join(',');\n    }\n\n    uploadFileToActivity(croppedImage: string) {\n        return this.fileService.postFile(this.generateFile(croppedImage));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/ingredient/update/update.component.ts","import {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from \"@angular/router\";\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs/add/observable/of\";\nimport {IngredientService} from \"../service/ingredient.service\";\nimport {UnitService} from \"../../unit/service/unit.service\";\nimport {CategoryService} from \"../../category/service/category.service\";\nimport {CouponService} from \"../../coupon/services/coupon.service\";\n\n@Injectable()\nexport class UpdateResolver implements Resolve<any> {\n    constructor(private ingredientService: IngredientService,\n                private categoryService: CategoryService,\n                private couponService: CouponService,\n                private unitService: UnitService) {\n\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\n        let reqObj = {\n            page: 1,\n            limit: 10,\n            status: 1,\n            // order: 1\n        };\n        return Observable.forkJoin(\n            this.ingredientService.getViewById(route.params['id']),\n            this.categoryService.getList(reqObj),\n            this.unitService.getList(reqObj),\n            this.couponService.getList(reqObj),\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/ingredient/update/update.resolver.ts","module.exports = \"input.ng-touched.ng-invalid {\\n    border-color: red;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/recipe/create/create.component.css\n// module id = ./src/app/recipe/create/create.component.css\n// module chunks = main","module.exports = \"<div class=\\\"table-wrapper\\\">\\n    <div class=\\\"wrap-header\\\"></div>\\n    <div class=\\\"wrap-tmain\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header card-success card-inverse\\\">\\n                <span class=\\\"card-title\\\">Create recipe</span>\\n            </div>\\n            <div class=\\\"card-block\\\">\\n                <form [formGroup]=\\\"recipeForm\\\" [ngClass]=\\\"{'form-error':submitPending }\\\" (submit)=\\\"createRecipe($event)\\\"\\n                      novalidate>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"name_en\\\">Name</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" id=\\\"name_en\\\"\\n                                   formControlName=\\\"name_en\\\" type=\\\"text\\\"\\n                                   placeholder=\\\"Enter title\\\">\\n                            <div *ngIf=\\\"recipeForm.get('name_en').hasError('required') && submitPending\\\">\\n                                Name is <strong>required</strong>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"people_amount\\\">People\\n                            amount</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" id=\\\"people_amount\\\" type=\\\"number\\\"\\n                                   formControlName=\\\"people_amount\\\"\\n                                   placeholder=\\\"Enter title\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"people_amount\\\">Company</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <select id=\\\"selectCategory\\\"\\n                                    class=\\\"form-control underline\\\"\\n                                    formControlName=\\\"company_id\\\">\\n                                <option\\n                                    *ngFor=\\\"let company of companyOptionsSelect\\\" [value]=\\\"company.value\\\">\\n                                    {{ company.label }}\\n                                </option>\\n                            </select>\\n\\n                            <div *ngIf=\\\"recipeForm.get('company_id').hasError('required') && submitPending\\\">\\n                                Company is <strong>required</strong>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\">Default language</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <select id=\\\"selectLanguage\\\"\\n                                    class=\\\"form-control underline\\\"\\n                                    (change)=\\\"changeLang($event)\\\"\\n                                    formControlName=\\\"language\\\">\\n                                <option\\n                                    *ngFor=\\\"let language of languageOptionsSelect\\\" [value]=\\\"language\\\">\\n                                    {{ language }}\\n                                </option>\\n                            </select>\\n\\n                            <div *ngIf=\\\"recipeForm.get('language').hasError('required') && submitPending\\\">\\n                                Language is <strong>required</strong>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"slug\\\">Url</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" id=\\\"slug\\\" type=\\\"text\\\"\\n                                   formControlName=\\\"slug\\\"\\n                                   placeholder=\\\"Url\\\">\\n                            <div *ngIf=\\\"recipeForm.get('slug').hasError('required') && submitPending\\\">\\n                                Url is <strong>required</strong>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row mb10\\\">\\n\\n                        <div class=\\\"limit-wrapper clearfix\\\">\\n                            <label class=\\\"col-sm-2 form-control-label text-xs-right\\\">New Ingredients</label>\\n                            <div class=\\\"col-sm-10\\\">\\n                                <form [formGroup]=\\\"subForm\\\" novalidate>\\n                                    <div class=\\\"field fourth-width mb10\\\">\\n                                        <div class=\\\"field half-width row \\\">\\n                                            <div class=\\\"example-full-width col-sm-3\\\">\\n                                                <input currencyMask\\n                                                       [options]=\\\"{prefix:''}\\\"\\n                                                       class=\\\"form-control underline\\\"\\n                                                       formControlName=\\\"unit_amount\\\">\\n                                            </div>\\n                                            <div class=\\\"col-sm-3\\\">\\n                                                <select\\n                                                    formControlName=\\\"unit_id\\\"\\n                                                    class=\\\"form-control underline\\\">\\n                                                    <option value=\\\"\\\" disabled selected>Select unit</option>\\n                                                    <option\\n                                                        *ngFor=\\\"let unit of unitOptionsSelect\\\" [value]=\\\"unit.value\\\">\\n                                                        {{ unit.label }}\\n                                                    </option>\\n                                                </select>\\n                                            </div>\\n                                            <div class=\\\"col-sm-3\\\">\\n                                                <select\\n                                                    formControlName=\\\"ingredient_id\\\"\\n                                                    class=\\\"form-control underline\\\">\\n                                                    <option value=\\\"\\\" disabled selected>Select ingredient</option>\\n                                                    <option\\n                                                        *ngFor=\\\"let ingredient of ingredientOptionsSelect\\\"\\n                                                        [value]=\\\"ingredient.value\\\">\\n                                                        {{ ingredient.label }}\\n                                                    </option>\\n                                                </select>\\n                                            </div>\\n                                            <div class=\\\"col-sm-3\\\">\\n                                                <button [disabled]=\\\"!subForm.valid\\\"\\n                                                        (click)=\\\"addToMainIngs($event)\\\"\\n                                                        class=\\\"btn btn-danger btn-bordered \\\"\\n                                                >add\\n                                                </button>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </form>\\n                            </div>\\n\\n                        </div>\\n\\n                    </div>\\n\\n                    <div class=\\\"form-group row mb10\\\">\\n\\n                        <div class=\\\"limit-wrapper clearfix\\\" formArrayName=\\\"RecipeIngredient\\\">\\n                            <div *ngFor=\\\"let category of categories; let catI=index\\\">\\n\\n                                <div class=\\\"col-sm-offset-2 col-sm-10 category-name\\\"\\n                                     *ngIf=\\\"isCategoryExist(category.id)\\\">\\n                                    <strong>{{category.name_en}}</strong>\\n                                </div>\\n                                <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n                                    <div class=\\\"\\\"\\n                                         *ngFor=\\\"let limit of recipeForm.controls.RecipeIngredient.controls; let i=index\\\">\\n                                        <div class=\\\" col-sm-12\\\"\\n                                             *ngIf=\\\"isCategoryExistByIngId(recipeForm.controls.RecipeIngredient.controls[i].controls.ingredient_id.value, category.id)\\\">\\n                                            <div class=\\\"select-container\\\" [formGroupName]=\\\"i\\\">\\n                                                <div class=\\\"field fourth-width row mb10\\\">\\n                                                    <div class=\\\"field half-width row \\\">\\n                                                        <div class=\\\"example-full-width col-sm-3\\\">\\n                                                            <input currencyMask\\n                                                                   [options]=\\\"{prefix:''}\\\"\\n                                                                   class=\\\"form-control underline\\\"\\n                                                                   formControlName=\\\"unit_amount\\\">\\n                                                        </div>\\n                                                        <div class=\\\"col-sm-3\\\">\\n                                                            <select\\n                                                                formControlName=\\\"unit_id\\\"\\n                                                                class=\\\"form-control underline\\\">\\n                                                                <option value=\\\"\\\" disabled selected>Select unit</option>\\n                                                                <option\\n                                                                    *ngFor=\\\"let unit of unitOptionsSelect\\\"\\n                                                                    [value]=\\\"unit.value\\\">\\n                                                                    {{ unit.label }}\\n                                                                </option>\\n                                                            </select>\\n                                                        </div>\\n                                                        <div class=\\\"col-sm-3\\\">\\n                                                            <select\\n                                                                formControlName=\\\"ingredient_id\\\"\\n                                                                class=\\\"form-control underline\\\">\\n                                                                <option value=\\\"\\\" disabled selected>Select ingredient\\n                                                                </option>\\n                                                                <option\\n                                                                    *ngFor=\\\"let ingredient of ingredientOptionsSelect\\\"\\n                                                                    [value]=\\\"ingredient.value\\\">\\n                                                                    {{ ingredient.label }}\\n                                                                </option>\\n                                                            </select>\\n                                                        </div>\\n                                                        <div class=\\\"col-sm-3\\\">\\n                                                            <button\\n                                                                (click)=\\\"deleteIngredient($event, i)\\\"\\n                                                                class=\\\"btn btn-danger btn-bordered \\\"\\n                                                            >remove\\n                                                            </button>\\n                                                        </div>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"fileImg\\\">Recipe image</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input type=\\\"file\\\" id=\\\"fileImg\\\" (change)=\\\"fileChangeEvent($event)\\\"/>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <input type=\\\"hidden\\\" formControlName=\\\"image\\\">\\n                                    <div *ngIf=\\\"recipeForm.get('image').hasError('required') && submitPending\\\">\\n                                        Image is <strong>required</strong>\\n                                    </div>\\n                                    <image-cropper\\n                                        [imageChangedEvent]=\\\"imageChangedEvent\\\"\\n                                        [maintainAspectRatio]=\\\"true\\\"\\n                                        [aspectRatio]=\\\"4 / 2\\\"\\n                                        [resizeToWidth]=\\\"460\\\"\\n                                        format=\\\"png, jpeg\\\"\\n                                        (imageCropped)=\\\"imageCropped($event)\\\"\\n                                        (imageLoaded)=\\\"imageLoaded()\\\"\\n                                        (loadImageFailed)=\\\"loadImageFailed()\\\"\\n                                    ></image-cropper>\\n                                </div>\\n                                <div class=\\\"col-sm-6  preview-img \\\">\\n                                    <img [src]=\\\"croppedImage\\\"/>\\n                                    <div>\\n                                        <span *ngIf=\\\"showBtnSL\\\" (click)=\\\"handleFileInput()\\\" class=\\\"btn btn-danger mt10\\\">Save image</span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n                            <button class=\\\"btn btn-danger btn-bordered margin-right\\\" type=\\\"button\\\"\\n                                    [routerLink]=\\\"['/recipes']\\\">Cancel\\n                            </button>\\n                            <button class=\\\"btn btn-primary btn-bordered\\\" type=\\\"submit\\\"\\n                            >Create\\n                            </button>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/recipe/create/create.component.html\n// module id = ./src/app/recipe/create/create.component.html\n// module chunks = main","import * as _ from \"lodash\";\nimport {Component, OnInit} from \"@angular/core\";\nimport {FormBuilder, FormControl, FormGroup, Validators, FormArray} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {Category} from \"../../category/models/category\";\nimport {Unit} from \"../../unit/models/unit\";\nimport {RecipeService} from \"../service/recipe.service\";\nimport {Company} from \"../../company/models/company\";\nimport {Ingredient} from \"../../ingredient/models/ingredient\";\nimport {FileService} from \"../../files/services/file.service\";\nimport {ToastrService} from \"../../shared/toastr.service\";\nimport {unescape} from \"querystring\";\n\n@Component({\n    selector: 'recipe-create',\n    templateUrl: './create.component.html',\n    styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n    showLang: boolean = false;\n    submitPending: boolean = false;\n    showImg: boolean = false;\n    fileToUpload: File = null;\n    imgId: number;\n    imgPath: string = '';\n    showBtnSL: boolean = false;\n    imageChangedEvent: any = '';\n    croppedImage: any = '';\n    errors = [];\n\n    public ingredients = new FormArray([]);\n\n    public subForm: FormGroup = new FormGroup({\n        unit_amount: new FormControl(1, [Validators.required, Validators.min(1)]),\n        unit_id: new FormControl(\"\", [Validators.required]),\n        ingredient_id: new FormControl(\"\", [Validators.required]),\n    });\n\n    public recipeForm: FormGroup = new FormGroup({\n        name_en: new FormControl(\"\", [Validators.required]),\n        company_id: new FormControl(\"\", [Validators.required]),\n        people_amount: new FormControl(1, [Validators.required, Validators.min(1)]),\n        status: new FormControl('4', [Validators.required]),\n        language: new FormControl('en', [Validators.required]),\n        slug: new FormControl('', [Validators.required]),\n        RecipeIngredient: this.ingredients,\n        image: new FormControl(\"\", [Validators.required])\n    });\n\n    public categories: Category[] = [];\n\n    companyOptionsSelect = [];\n    private _companies: Company[] = [];\n\n    unitOptionsSelect = [];\n    private _units: Unit[] = [];\n\n    ingredientOptionsSelect = [];\n    private _ingredients: Ingredient[] = [];\n\n    statusOptionsSelect = [];\n\n    languageOptionsSelect = ['en', 'he', 'es'];\n\n    private _subscribers = [];\n    private _mapIngCategory;\n\n    constructor(public router: Router,\n                public fb: FormBuilder,\n                public fileService: FileService,\n                public recipeService: RecipeService,\n                private _route: ActivatedRoute) {\n\n        this._subscribers.push(this.recipeForm.valueChanges.subscribe(\n            () => this.submitPending = false\n        ));\n\n        this._subscribers.push(this._route.data.subscribe((res: any) => {\n            this._companies = res.data[0].data;\n            this._units = res.data[1].data;\n            this._ingredients = res.data[2].data;\n            this.categories = res.data[3].data;\n            this.changeLangOnSelect('en');\n            this.setMap();\n\n        }));\n    }\n\n    ngOnInit() {\n\n    }\n\n    public createRecipe(event) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (!this.recipeForm.valid) {\n            this.submitPending = true;\n            return;\n        }\n\n        this.submitPending = true;\n        let recipe = this.recipeForm.value;\n        this._subscribers.push(this.recipeService.create(recipe).subscribe(\n            () => {\n                this.router.navigate(['/recipes']);\n            },\n            (err) => {\n            }\n        ));\n    }\n\n    ngOnDestroy() {\n        _.forEach(this._subscribers, (value) => {\n            value.unsubscribe();\n        });\n    }\n\n    public addIngredient(event) {\n        event.preventDefault();\n        this.ingredients.push(new FormGroup({\n            unit_amount: new FormControl(\"\", [Validators.required]),\n            unit_id: new FormControl(\"\", [Validators.required]),\n            ingredient_id: new FormControl(\"\", [Validators.required]),\n        }));\n    }\n\n    public deleteIngredient(event, index) {\n        event.preventDefault();\n        this.ingredients.removeAt(index);\n    }\n\n    handleFileInput() {\n        this.uploadFileToActivity(this.croppedImage).subscribe(data => {\n            this.imgPath = data.path;\n            this.showBtnSL = false;\n            this.recipeForm.patchValue({image: data.id});\n            return true;\n        }, error => {\n            ToastrService.error(\"Error\", error);\n        });\n    }\n\n    fileChangeEvent(event: any): void {\n        if(event.target.files[0].size > 1048576) {\n            ToastrService.error(\"Error\", 'Size must be smaller than 1Mb');\n\n        } else {\n            this.imageChangedEvent = event;\n            this.fileToUpload = event.target.files;\n            this.showBtnSL = true;\n        }\n    }\n\n    imageCropped(image: string) {\n        this.croppedImage = image;\n        this.showBtnSL = true;\n    }\n\n    imageLoaded() {\n        // show cropper\n\n    }\n\n    loadImageFailed() {\n        this.showBtnSL = false;\n        ToastrService.error(\"Error\", 'Image must be \".jpg\" or \".png\"');\n    }\n\n    private generateFile(dataURI: string): Blob {\n        let byteString;\n        if (dataURI.split(',')[0].indexOf('base64') >= 0) {\n            byteString = atob(dataURI.split(',')[1]);\n        } else {\n            byteString = unescape(dataURI.split(',')[1]);\n        }\n        const type = dataURI\n            .split(',')[0]\n            .split(':')[1]\n            .split(';')[0];\n        const ia = new Uint8Array(byteString.length);\n        for (let i = 0; i < byteString.length; i++) {\n            ia[i] = byteString.charCodeAt(i);\n        }\n        return new Blob([ia], {type});\n    }\n\n    isExistErrorByFormField(formField: string): boolean {\n        return _.has(this.errors, formField);\n    }\n\n    getTextErrorByFormField(formField: string): string {\n        let arrMessage = this.errors[formField];\n        return arrMessage.join(',');\n    }\n\n    uploadFileToActivity(croppedImage: string) {\n        return this.fileService.postFile(this.generateFile(croppedImage));\n    }\n\n\n    changeLang(event) {\n        this.changeLangOnSelect(this.recipeForm.controls.language.value);\n    }\n\n    private changeLangOnSelect(langPref) {\n        this.companyOptionsSelect = this.prepareDataForSelect(this._companies, langPref);\n        this.unitOptionsSelect = this.prepareDataForSelect(this._units, langPref);\n        this.ingredientOptionsSelect = this.prepareDataForSelect(this._ingredients, langPref);\n    }\n\n    private prepareDataForSelect(data: any, langPref: 'en' | 'es' | 'he') {\n        return _.map(data, (item: any) => {\n            return {value: item.id.toString(), label: this.getLabelByLang(item, langPref)};\n        });\n    }\n\n    private getLabelByLang(obj: any, langPref: 'en' | 'es' | 'he') {\n        return obj['name_' + langPref] ? obj['name_' + langPref] : obj['name_en'];\n    }\n\n    private setMap() {\n        let map = {};\n        _.forEach(this._ingredients, function (ing: Ingredient) {\n            map[ing.id] = ing.category_id;\n        });\n        this._mapIngCategory = map;\n    }\n\n    public isCategoryExistByIngId(ingId: number, catId: number): boolean {\n        let result: boolean = false;\n        if (_.has(this._mapIngCategory, ingId)) {\n            result = catId == this._mapIngCategory[ingId];\n        }\n\n        return result;\n    }\n\n    public isCategoryExist(catId: number): boolean {\n        let result: boolean = false;\n        let values = this.recipeForm.get('RecipeIngredient').value;\n        let ingIds: number[] = [];\n        _.forEach(values, function (value: any) {\n            ingIds.push(value.ingredient_id);\n        });\n\n        if (ingIds.length) {\n            _.forEach(ingIds, function (value: any) {\n                if (this.isCategoryExistByIngId(value, catId)) {\n                    result = true;\n                }\n            }.bind(this));\n        }\n\n        return result;\n    }\n\n    public addToMainIngs(event) {\n        event.preventDefault();\n\n        this.ingredients.push(new FormGroup({\n            unit_amount: new FormControl(this.subForm.get('unit_amount').value, [Validators.required]),\n            unit_id: new FormControl(this.subForm.get('unit_id').value, [Validators.required]),\n            ingredient_id: new FormControl(this.subForm.get('ingredient_id').value, [Validators.required]),\n        }));\n        this.subForm.reset();\n        this.subForm.get('unit_amount').patchValue(1);\n        this.subForm.clearValidators();\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/recipe/create/create.component.ts","import {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from \"@angular/router\";\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs/add/observable/of\";\nimport {UnitService} from \"../../unit/service/unit.service\";\nimport {CompanyService} from \"../../company/services/company.service\";\nimport {IngredientService} from \"../../ingredient/service/ingredient.service\";\nimport {CategoryService} from \"../../category/service/category.service\";\n\n@Injectable()\nexport class CreateResolver implements Resolve<any> {\n    constructor(private companyService: CompanyService,\n                private unitService: UnitService,\n                private categoryService: CategoryService,\n                private ingredientService: IngredientService) {\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\n        let reqObj = {\n            page: 1,\n            limit: 100,\n            status: 1,\n            // order: 1\n        };\n        return Observable.forkJoin(\n            this.companyService.getList(reqObj),\n            this.unitService.getList(reqObj),\n            this.ingredientService.getList(reqObj),\n            this.categoryService.getList(reqObj),\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/recipe/create/create.resolver.ts","module.exports = \"table {\\n    width: 100%;\\n}\\n\\ntable td,\\ntable th {\\n    padding: 5px;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/recipe/list/list.component.css\n// module id = ./src/app/recipe/list/list.component.css\n// module chunks = main","module.exports = \"<div class=\\\"wrapper-content\\\">\\n    <div class=\\\"table-wrapper\\\">\\n        <div class=\\\"wrap-header\\\">\\n            <h3>{{title}}</h3>\\n        </div>\\n        <div class=\\\"wrap-tmain\\\">\\n            <div class=\\\"table-scroll\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-block\\\" style=\\\"padding-bottom: 0\\\">\\n                        <table border=\\\"1\\\">\\n                            <thead>\\n                            <tr class=\\\"ng2-smart-titles\\\">\\n                                <th class=\\\"ng2-smart-actions\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">Actions</div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th name\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        #\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th email\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        Company\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th email\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        Recipe Name\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th image\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        Recipe Image\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th image\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        NumberOfPeople\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th \\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        RecipeLink\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th \\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        RecipeLanguage\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th regDate\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        Status\\n                                    </div>\\n                                </th>\\n                            </tr>\\n                            <tr class=\\\"ng2-smart-filters\\\">\\n                                <th class=\\\"ng2-smart-actions-title ng2-smart-actions-title-add\\\">\\n                                    <a routerLink=\\\"create\\\" routerLinkActive=\\\"active\\\"\\n                                       class=\\\"btn btn-secondary\\\" href=\\\"#\\\">+ Add recipe</a>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th id\\\">\\n\\n                                </th>\\n                                <th class=\\\"ng2-smart-th company\\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n                                        <div class=\\\"ng2-smart-filter\\\">\\n                                            <input class=\\\"form-control ng-untouched ng-pristine ng-valid\\\"\\n                                                   [(ngModel)]=\\\"searchCompanyName\\\"\\n                                                   (keyup.enter)=\\\"applyFilters($event)\\\"\\n                                                   type=\\\"text\\\"\\n                                                   placeholder=\\\"Company Name\\\">\\n                                        </div>\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th name\\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n                                        <div class=\\\"ng2-smart-filter\\\">\\n                                            <input class=\\\"form-control ng-untouched ng-pristine ng-valid\\\"\\n                                                   [(ngModel)]=\\\"searchName\\\"\\n                                                   (keyup.enter)=\\\"applyFilters($event)\\\"\\n                                                   type=\\\"text\\\"\\n                                                   placeholder=\\\"Name\\\">\\n                                        </div>\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th image\\\">\\n\\n                                </th>\\n                                <th class=\\\"ng2-smart-th num-of-people\\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n                                        <div class=\\\"ng2-smart-filter\\\">\\n                                            <input class=\\\"form-control ng-untouched ng-pristine ng-valid\\\"\\n                                                   [(ngModel)]=\\\"searchCountPeople\\\"\\n                                                   (keyup.enter)=\\\"applyFilters($event)\\\"\\n                                                   type=\\\"text\\\"\\n                                                   placeholder=\\\"Number\\\">\\n                                        </div>\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th recipe-link\\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n                                        <div class=\\\"ng2-smart-filter\\\">\\n                                            <input class=\\\"form-control ng-untouched ng-pristine ng-valid\\\"\\n                                                   [(ngModel)]=\\\"searchLink\\\"\\n                                                   (keyup.enter)=\\\"applyFilters($event)\\\"\\n                                                   type=\\\"text\\\"\\n                                                   placeholder=\\\"Link\\\">\\n                                        </div>\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th RecipeLanguage\\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n                                        <select\\n                                            class=\\\"form-control underline\\\"\\n                                            (change)=\\\"applyFilters($event)\\\"\\n                                            [(ngModel)]=\\\"searchLanguage\\\">\\n                                            <option *ngFor=\\\"let language of languageOptionsSelect\\\"\\n                                                    [value]=\\\"language.value\\\"\\n                                                    (onClick)=\\\"applyFilters($event)\\\">\\n                                                {{ language.label }}\\n                                            </option>\\n                                        </select>\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th regDate\\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n                                        <select\\n                                            class=\\\"form-control underline\\\"\\n                                            (change)=\\\"applyFilters($event)\\\"\\n                                            [(ngModel)]=\\\"searchStatus\\\">\\n                                            <option *ngFor=\\\"let status of statusOptionsSelect\\\"\\n                                                    [value]=\\\"status.value\\\"\\n                                                    (onClick)=\\\"applyFilters($event)\\\">\\n                                                {{ status.label }}\\n                                            </option>\\n                                        </select>\\n                                    </div>\\n                                </th>\\n                            </tr>\\n                            </thead>\\n                            <tbody>\\n                            <tr *ngFor=\\\"let recipe of itemList; let i = index\\\">\\n                                <td class=\\\"text-row\\\">\\n                                    <a [routerLink]=\\\"['update/' + recipe.id]\\\"\\n                                       *ngIf=\\\"recipe.status == 1 || recipe.status == 4\\\" routerLinkActive=\\\"active\\\"\\n                                       class=\\\"btn btn-info\\\">\\n                                        <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n                                        edit</a>\\n\\n                                    <span *ngIf=\\\"recipe.status == 4\\\" class=\\\"btn btn-success\\\"\\n                                          (click)=\\\"onPublish($event, recipe.id)\\\">\\n                                    <i class=\\\"fa fa-share-square-o\\\" aria-hidden=\\\"true\\\"></i>\\n                                    publish</span>\\n                                    <span *ngIf=\\\"recipe.status == 4\\\" class=\\\"btn btn-danger\\\"\\n                                          (click)=\\\"onDelete($event, content, recipe )\\\">\\n                                    <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>\\n                                    delete</span>\\n                                </td>\\n                                <td>{{(i+1) + (page - 1) * selectedLimit}}</td>\\n                                <td>{{recipe?.company?.name_en}}</td>\\n                                <td>{{recipe.name_en}}</td>\\n                                <td>\\n                                    <a *ngIf=\\\"recipe.status == 1\\\" href=\\\"{{recipe.recipeUrl}}\\\"  target=\\\"_blank\\\">link</a>\\n                                    <img *ngIf=\\\"recipe.image\\\" src=\\\"{{recipe.image.path}}\\\">\\n                                </td>\\n                                <td>{{recipe.people_amount}}</td>\\n                                <td>{{recipe.slug}}</td>\\n                                <td>{{recipe.language}}</td>\\n                                <td>\\n                                    <span class=\\\"active-status edit button\\\" *ngIf=\\\"recipe.status == 1\\\">Published</span>\\n                                    <span class=\\\"active-status edit button\\\"\\n                                          *ngIf=\\\"recipe.status == 4\\\">Pending publish</span>\\n                                    <span class=\\\"deleted-status delete button\\\"\\n                                          *ngIf=\\\"recipe.status == 3 \\\">Deleted</span>\\n                                </td>\\n                            </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n\\n                    <div class=\\\"page-select\\\">\\n                        <div class=\\\"col-sm-8\\\">\\n                            <select class=\\\"form-control\\\" style=\\\"width: 200px;\\\"\\n                                    [(ngModel)]=\\\"selectedLimit\\\"\\n                                    (change)=\\\"onLimitSelected($event)\\\">\\n                                <option *ngFor=\\\"let item of limitOptionsSelect\\\" [value]=\\\"item.value\\\">\\n                                    {{ item.label }}\\n                                </option>\\n                            </select>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\" *ngIf=\\\"itemSize > selectedLimit\\\">\\n                            <ngb-pagination\\n                                [collectionSize]=\\\"itemSize\\\"\\n                                [(page)]=\\\"page\\\"\\n                                (pageChange)=\\\"onPageChange($event)\\\"\\n                                [pageSize]=\\\"selectedLimit\\\"\\n                                [rotate]=\\\"true\\\"\\n                                [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n        <i class=\\\"material-icons\\\">clear</i>\\n    </button>\\n    <div class=\\\"modal-body delete-modal clearfix\\\">\\n        <p>Are you sure you want to delete the recipe <b>«{{itemTitle}}»?</b></p>\\n        <span>This action cannot be undone </span>\\n\\n        <button type=\\\"button\\\" class=\\\"btn m-btn_no-bg margin-right\\\" (click)=\\\"d('no')\\\">Cancel</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-color\\\" (click)=\\\"c('yes')\\\">Delete it!</button>\\n    </div>\\n</ng-template>\\n\\n<template ngbModalContainer></template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/recipe/list/list.component.html\n// module id = ./src/app/recipe/list/list.component.html\n// module chunks = main","import * as _ from \"lodash\";\nimport {Component, OnInit} from \"@angular/core\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Observable} from \"rxjs/Observable\";\nimport {RecipeService} from \"../service/recipe.service\";\nimport {Recipe} from \"../models/recipe\";\nimport {BsModalService} from \"ngx-bootstrap\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n    selector: 'recipe-list',\n    templateUrl: './list.component.html',\n    styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n    itemList: Recipe[];\n    itemSize: number;\n    private title = 'Recipes list';\n\n    searchName = '';\n    searchCompanyName = '';\n    searchStatus = 4;\n    searchLanguage = '';\n    searchLink = '';\n    searchCountPeople:number;\n\n    isShowPagination: boolean = true;\n    statusOptionsSelect = [\n        {\n            value: '',\n            label: 'All'\n        },\n        {\n            value: 1,\n            label: 'Published'\n        },\n        {\n            value: 4,\n            label: 'Pending publish'\n        },\n        {\n            value: 3,\n            label: 'Deleted'\n        }\n    ];\n    languageOptionsSelect = [\n        {\n            value: '',\n            label: 'All'\n        },\n        {\n            value: 'en',\n            label: 'En'\n        },\n        {\n            value: 'he',\n            label: 'He'\n        },\n        {\n            value: 'es',\n            label: 'Es'\n        }\n    ];\n    public limitOptionsSelect = [\n        {\n            value: 5,\n            label: '5'\n        },\n        {\n            value: 10,\n            label: '10'\n        },\n        {\n            value: 20,\n            label: '20'\n        },\n        {\n            value: 50,\n            label: '50'\n        },\n        {\n            value: 100,\n            label: '100'\n        }\n    ];\n    public page = 1;\n\n    public selectedLimit = 10;\n\n    private _subscribers = [];\n    itemTitle: string;\n\n    constructor(public entityService: RecipeService,\n                private modalService: NgbModal,\n                private _route: ActivatedRoute) {\n\n        this._subscribers.push(this._route.data.subscribe((res: any) => {\n            this.itemList = _.take(res.data[0].data, this.selectedLimit);\n            this.itemSize = +res.data[0].count;\n        }));\n    }\n\n    onDelete(event, context, recipe: Recipe) {\n        event.preventDefault();\n        this.itemTitle = recipe.name_en;\n        this.modalService.open(context).result.then((result) => {\n            this._subscribers.push(Observable.concat(\n                this.entityService.deleteById(recipe.id),\n                this.entityService.getList(this.buildListResponseObject())\n            ).subscribe(\n                (res: any) => {\n                    if (res) {\n                        this.itemList = res.data;\n                        this.itemSize = +res.count;\n                    }\n                },\n                (err) => {\n\n                }\n            ))\n        });\n    }\n\n    onPublish(event, id) {\n        event.preventDefault();\n        this._subscribers.push(Observable.concat(\n            this.entityService.publishById(id),\n            this.entityService.getList(this.buildListResponseObject())\n        ).subscribe(\n            (res: any) => {\n                if (res) {\n                    this.itemList = res.data;\n                    this.itemSize = +res.count;\n                }\n            },\n            (err) => {\n\n            }\n        ));\n    }\n\n    ngOnInit() {\n    }\n\n    ngOnDestroy() {\n        _.forEach(this._subscribers, (value) => {\n            value.unsubscribe();\n        });\n    }\n\n    public onLimitSelected(selected) {\n        this.page = 1;\n        this.listRequest();\n    }\n\n    /**\n     * Use this method to get current list\n     * @param page\n     */\n    private listRequest(page?) {\n        this._subscribers.push(this.entityService.getList(this.buildListResponseObject(page))\n            .subscribe(\n                (res: { data: any, count: number }) => {\n                    this.itemList = res.data;\n                    this.itemSize = +res.count;\n                },\n                (err) => {\n\n                }\n            ));\n    }\n\n    /**\n     * Use this method to prepare request object for list. Sets limits, pagination, etc.\n     * @param page\n     * @returns {{query: any, page: (any|number), limit: number, sort: string, order: number, filter: string}}\n     */\n    private buildListResponseObject(page?) {\n        return {\n            page: page || this.page,\n            limit: this.selectedLimit,\n            status: this.searchStatus,\n            name: this.searchName,\n            lang: this.searchLanguage,\n            c_name: this.searchCompanyName,\n            link: this.searchLink,\n            p_count: this.searchCountPeople,\n\n        }\n    }\n\n    public onPageChange(event) {\n        this.listRequest(event);\n    }\n\n    public applyFilters(event) {\n        event.preventDefault();\n        this.page = 1;\n        this.listRequest();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/recipe/list/list.component.ts","import {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from \"@angular/router\";\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs/add/observable/of\";\nimport {RecipeService} from \"../service/recipe.service\";\n\n@Injectable()\nexport class ListResolver implements Resolve<any> {\n    constructor(private recipeService: RecipeService) {\n\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\n        let reqObj = {\n            page: 1,\n            limit: 10,\n            status: 4,\n            // sort: 'id',\n            // order: 1\n        };\n        return Observable.forkJoin(\n            this.recipeService.getList(reqObj),\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/recipe/list/list.resolver.ts","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {ListComponent} from \"./list/list.component\";\nimport {RecipeService} from \"./service/recipe.service\";\nimport {ListResolver} from \"./list/list.resolver\";\nimport {RouterModule} from \"@angular/router\";\nimport {CreateComponent} from \"./create/create.component\";\nimport {UpdateComponent} from \"./update/update.component\";\nimport {UpdateResolver} from \"./update/update.resolver\";\nimport {CreateResolver} from \"./create/create.resolver\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {HttpModule} from \"@angular/http\";\nimport {MaterialModule} from \"../shared/material.module\";\nimport {recipeRoutes} from \"./recipe.routing\";\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {ImageCropperModule} from \"ngx-image-cropper\";\n\nimport {ModalModule} from \"ngx-bootstrap\";\nimport {CurrencyMaskModule} from \"ng2-currency-mask\";\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        HttpModule,\n        CurrencyMaskModule,\n        HttpClientModule,\n        MaterialModule,\n        ReactiveFormsModule,\n        CommonModule,\n        FormsModule,\n        RouterModule.forChild(recipeRoutes),\n        NgbModule.forRoot(),\n        ModalModule.forRoot(),\n        ReactiveFormsModule,\n        ImageCropperModule\n    ],\n    declarations: [\n        ListComponent,\n        CreateComponent,\n        UpdateComponent,\n    ],\n    providers: [\n        RecipeService,\n        ListResolver,\n        UpdateResolver,\n        CreateResolver,\n    ]\n})\nexport class RecipeModule {\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/recipe/recipe.module.ts","import {Routes} from \"@angular/router\";\nimport {ListComponent} from \"./list/list.component\";\nimport {RootComponent} from \"../core/root.component\";\nimport {AppResolver} from \"../app.resolver\";\nimport {ListResolver} from \"./list/list.resolver\";\nimport {CreateComponent} from \"./create/create.component\";\nimport {UpdateResolver} from \"./update/update.resolver\";\nimport {UpdateComponent} from \"./update/update.component\";\nimport {CreateResolver} from \"./create/create.resolver\";\n\nexport const recipeRoutes: Routes = [\n    {\n        path: 'recipes',\n        component: RootComponent,\n        canActivate: [AppResolver],\n        children: [\n            {\n                path: '',\n                component: ListComponent,\n                resolve: {\n                    'data': ListResolver\n                }\n            },\n            {\n                path: 'create', component: CreateComponent,\n                resolve: {\n                    'data': CreateResolver\n                }\n            },\n            {\n                path: 'update/:id', component: UpdateComponent,\n                resolve: {\n                    'data': UpdateResolver\n                }\n            },\n            // {\n            //     path: ':id', component: ViewComponent,\n            //     resolve: {\n            //         'data': ViewResolver\n            //     },\n            // },\n        ]\n    },\n\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/recipe/recipe.routing.ts","import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {ToastrService} from \"../../shared/toastr.service\";\nimport {AuthService} from \"../../authentication/services/auth.service\";\nimport {ErrorHandler} from \"../../shared/error-handler.service\";\nimport {ListRequest} from \"../../shared/models/list-request.model\";\nimport {ListRequestService} from \"../../shared/list-request.service\";\n\n@Injectable()\nexport class RecipeService {\n\n    private path = '/v1/recipes';\n\n    constructor(private http: HttpClient,\n                private authService: AuthService,\n                private errorHandler: ErrorHandler) {\n    }\n\n    private getHeaders() {\n        return new HttpHeaders().set('Authorization', 'Bearer ' + this.authService.getAuthToken());\n    }\n\n    public getList(resObj: ListRequest = {}): Observable<{}> {\n        return this.http.get(this.path + '?' + ListRequestService.parseRequestObject(resObj), {headers: this.getHeaders()})\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n\n    public getViewById(id: number): Observable<{}> {\n        return this.http.get(this.path + '/' + id, {headers: this.getHeaders()})\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n\n    public create(recipe): Observable<{}> {\n        return this.http.post(this.path, recipe, {headers: this.getHeaders()})\n            .do(() => ToastrService.success(\"\", \"Recipe was created\"))\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n\n    public updateById(recipe, id: number): Observable<{}> {\n\n        return this.http.put(this.path + '/' + id, recipe, {headers: this.getHeaders()})\n            .do(() => ToastrService.success(\"\", \"Recipe was updated\"))\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n\n    public deleteById(id: number): Observable<{}> {\n        return this.http.delete(this.path + '/' + id, {headers: this.getHeaders()})\n            .do(() => ToastrService.success(\"\", \"Recipe was deleted\"))\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n\n    public publishById(id: number): Observable<{}> {\n        return this.http.post(this.path + '/' + id + '/publish', {}, {headers: this.getHeaders()})\n            .do(() => ToastrService.success(\"\", \"Recipe was published\"))\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/recipe/service/recipe.service.ts","module.exports = \"<div class=\\\"table-wrapper\\\">\\n    <div class=\\\"wrap-header\\\"></div>\\n    <div class=\\\"wrap-tmain\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header card-success card-inverse\\\">\\n                <span class=\\\"card-title\\\">Update recipe</span>\\n            </div>\\n            <div class=\\\"card-block\\\">\\n                <form [formGroup]=\\\"recipeForm\\\" [ngClass]=\\\"{'form-error':submitPending }\\\" (submit)=\\\"updateRecipe($event)\\\" novalidate>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"name_en\\\">name</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\"\\n                                   formControlName=\\\"name_en\\\" id=\\\"name_en\\\"\\n                                   type=\\\"text\\\"\\n                                   placeholder=\\\"Enter title\\\">\\n                            <div *ngIf=\\\"recipeForm.get('name_en').hasError('required') && submitPending\\\">\\n                                Name is <strong>required</strong>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"people_amount\\\">People\\n                            amount</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" id=\\\"people_amount\\\" type=\\\"number\\\"\\n                                   formControlName=\\\"people_amount\\\"\\n                                   placeholder=\\\"Enter title\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"people_amount\\\">Company</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <select id=\\\"selectCategory\\\"\\n                                    class=\\\"form-control underline\\\"\\n                                    formControlName=\\\"company_id\\\">\\n                                <option *ngFor=\\\"let company of companyOptionsSelect\\\" [value]=\\\"company.value\\\">\\n                                    {{ company.label }}\\n                                </option>\\n                            </select>\\n\\n                            <div *ngIf=\\\"recipeForm.get('company_id').hasError('required') && submitPending\\\">\\n                                Company is <strong>required</strong>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\">Default language</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <select id=\\\"selectLanguage\\\"\\n                                    class=\\\"form-control underline\\\"\\n                                    (change)=\\\"changeLang($event)\\\"\\n                                    formControlName=\\\"language\\\">\\n                                <option\\n                                    *ngFor=\\\"let language of languageOptionsSelect\\\" [value]=\\\"language\\\">\\n                                    {{ language }}\\n                                </option>\\n                            </select>\\n\\n                            <div *ngIf=\\\"recipeForm.get('language').hasError('required') && submitPending\\\">\\n                                Language is <strong>required</strong>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"slug\\\">Url</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" id=\\\"slug\\\" type=\\\"text\\\"\\n                                   formControlName=\\\"slug\\\"\\n                                   placeholder=\\\"Url\\\">\\n                            <div *ngIf=\\\"recipeForm.get('slug').hasError('required') && submitPending\\\">\\n                                Url is <strong>required</strong>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row mb10\\\">\\n                        <div class=\\\"limit-wrapper clearfix\\\">\\n                            <label class=\\\"col-sm-2 form-control-label text-xs-right\\\">New Ingredients</label>\\n                            <div class=\\\"col-sm-10\\\">\\n                                <form [formGroup]=\\\"subForm\\\" novalidate>\\n                                    <div class=\\\"field fourth-width mb10\\\">\\n                                        <div class=\\\"field half-width row \\\">\\n                                            <div class=\\\"example-full-width col-sm-3\\\">\\n                                                <input currencyMask [options]=\\\"{prefix:''}\\\" class=\\\"form-control underline\\\"\\n                                                       formControlName=\\\"unit_amount\\\">\\n                                            </div>\\n                                            <div class=\\\"col-sm-3\\\">\\n                                                <select\\n                                                    formControlName=\\\"unit_id\\\"\\n                                                    class=\\\"form-control underline\\\">\\n                                                    <option value=\\\"\\\" disabled selected>Select unit</option>\\n                                                    <option\\n                                                        *ngFor=\\\"let unit of unitOptionsSelect\\\" [value]=\\\"unit.value\\\">\\n                                                        {{ unit.label }}\\n                                                    </option>\\n                                                </select>\\n                                            </div>\\n                                            <div class=\\\"col-sm-3\\\">\\n                                                <select\\n                                                    formControlName=\\\"ingredient_id\\\"\\n                                                    class=\\\"form-control underline\\\">\\n                                                    <option value=\\\"\\\" disabled selected>Select ingredient</option>\\n                                                    <option\\n                                                        *ngFor=\\\"let ingredient of ingredientOptionsSelect\\\"\\n                                                        [value]=\\\"ingredient.value\\\">\\n                                                        {{ ingredient.label }}\\n                                                    </option>\\n                                                </select>\\n                                            </div>\\n                                            <div class=\\\"col-sm-3\\\">\\n                                                <button [disabled]=\\\"!subForm.valid\\\"\\n                                                        (click)=\\\"addToMainIngs($event)\\\"\\n                                                        class=\\\"btn btn-danger btn-bordered \\\"\\n                                                >add\\n                                                </button>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </form>\\n                            </div>\\n\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row mb10\\\">\\n\\n                        <div class=\\\"limit-wrapper clearfix\\\" formArrayName=\\\"RecipeIngredient\\\">\\n                            <div *ngFor=\\\"let category of categories; let catI=index\\\">\\n                                <div class=\\\"col-sm-offset-2 col-sm-10 category-name\\\"\\n                                     *ngIf=\\\"isCategoryExist(category.id)\\\">\\n                                    <strong>{{category.name_en}}</strong>\\n                                </div>\\n                                <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n                                    <div class=\\\"\\\"\\n                                         *ngFor=\\\"let limit of recipeForm.controls.RecipeIngredient.controls; let i=index\\\">\\n                                        <div class=\\\" col-sm-12\\\"\\n                                             *ngIf=\\\"isCategoryExistByIngId(recipeForm.controls.RecipeIngredient.controls[i].controls.ingredient_id.value, category.id)\\\">\\n                                            <div class=\\\"select-container\\\" [formGroupName]=\\\"i\\\">\\n                                                <div class=\\\"field fourth-width row mb10\\\">\\n                                                    <div class=\\\"field half-width row \\\">\\n                                                        <div class=\\\"example-full-width col-sm-3\\\">\\n                                                            <input currencyMask\\n                                                                   [options]=\\\"{prefix:''}\\\"\\n                                                                   class=\\\"form-control underline\\\"\\n                                                                   formControlName=\\\"unit_amount\\\">\\n                                                        </div>\\n                                                        <div class=\\\"col-sm-3\\\">\\n                                                            <select\\n                                                                formControlName=\\\"unit_id\\\"\\n                                                                class=\\\"form-control underline\\\">\\n                                                                <option value=\\\"\\\" disabled selected>Select unit</option>\\n                                                                <option\\n                                                                    *ngFor=\\\"let unit of unitOptionsSelect\\\"\\n                                                                    [value]=\\\"unit.value\\\">\\n                                                                    {{ unit.label }}\\n                                                                </option>\\n                                                            </select>\\n                                                        </div>\\n                                                        <div class=\\\"col-sm-3\\\">\\n                                                            <select\\n                                                                formControlName=\\\"ingredient_id\\\"\\n                                                                class=\\\"form-control underline\\\">\\n                                                                <option value=\\\"\\\" disabled selected>Select ingredient\\n                                                                </option>\\n                                                                <option\\n                                                                    *ngFor=\\\"let ingredient of ingredientOptionsSelect\\\"\\n                                                                    [value]=\\\"ingredient.value\\\">\\n                                                                    {{ ingredient.label }}\\n                                                                </option>\\n                                                            </select>\\n                                                        </div>\\n                                                        <div class=\\\"col-sm-3\\\">\\n                                                            <button\\n                                                                (click)=\\\"deleteIngredient($event, i)\\\"\\n                                                                class=\\\"btn btn-danger btn-bordered \\\"\\n                                                            >remove\\n                                                            </button>\\n                                                        </div>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"fileImg\\\">Recipe image</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input type=\\\"file\\\" id=\\\"fileImg\\\" (change)=\\\"fileChangeEvent($event)\\\"/>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <input type=\\\"hidden\\\" formControlName=\\\"image\\\">\\n                                    <div *ngIf=\\\"recipeForm.get('image').hasError('required') && submitPending\\\">\\n                                        Image is <strong>required</strong>\\n                                    </div>\\n                                    <image-cropper\\n                                        [imageChangedEvent]=\\\"imageChangedEvent\\\"\\n                                        [maintainAspectRatio]=\\\"true\\\"\\n                                        [aspectRatio]=\\\"4 / 2\\\"\\n                                        [resizeToWidth]=\\\"460\\\"\\n                                        format=\\\"png, jpeg\\\"\\n                                        (imageCropped)=\\\"imageCropped($event)\\\"\\n                                        (imageLoaded)=\\\"imageLoaded()\\\"\\n                                        (loadImageFailed)=\\\"loadImageFailed()\\\"\\n                                    ></image-cropper>\\n                                </div>\\n                                <div class=\\\"col-sm-6  preview-img \\\">\\n                                    <img [src]=\\\"croppedImage\\\"/>\\n                                    <div>\\n                                        <span *ngIf=\\\"showBtnSL\\\" (click)=\\\"handleFileInput()\\\" class=\\\"btn btn-danger mt10\\\">Save image</span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n                            <button class=\\\"btn btn-danger btn-bordered margin-right\\\" type=\\\"button\\\"\\n                                    [routerLink]=\\\"['/recipes']\\\">Cancel\\n                            </button>\\n                            <button class=\\\"btn btn-primary btn-bordered\\\" type=\\\"submit\\\">Update\\n                            </button>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/recipe/update/update.component.html\n// module id = ./src/app/recipe/update/update.component.html\n// module chunks = main","import * as _ from 'lodash';\nimport {Component, OnInit} from \"@angular/core\";\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {RecipeService} from \"../service/recipe.service\";\nimport {Ingredient} from \"../../ingredient/models/ingredient\";\nimport {Unit} from \"../../unit/models/unit\";\nimport {Company} from \"../../company/models/company\";\nimport {Category} from \"../../category/models/category\";\nimport {unescape} from \"querystring\";\nimport {FileService} from \"../../files/services/file.service\";\nimport {ToastrService} from \"../../shared/toastr.service\";\n\n@Component({\n    selector: 'recipe-update',\n    templateUrl: './update.component.html'\n})\nexport class UpdateComponent implements OnInit {\n    showLang: boolean = false;\n    submitPending: boolean = false;\n    showImg: boolean = false;\n    fileToUpload: File = null;\n    imgId: number;\n    imgPath: string = '';\n    showBtnSL: boolean = false;\n    imageChangedEvent: any = '';\n    croppedImage: any = '';\n    errors = [];\n    public categories: Category[] = [];\n    public ingredients = new FormArray([]);\n    public subForm: FormGroup = new FormGroup({\n        unit_amount: new FormControl(1, [Validators.required, Validators.min(1)]),\n        unit_id: new FormControl(\"\", [Validators.required]),\n        ingredient_id: new FormControl(\"\", [Validators.required]),\n    });\n\n    public recipeForm: FormGroup = new FormGroup({\n        name_en: new FormControl(\"\", [Validators.required]),\n        company_id: new FormControl(\"\", [Validators.required]),\n        people_amount: new FormControl(1, [Validators.required, Validators.min(1)]),\n        status: new FormControl('1', [Validators.required]),\n        language: new FormControl('en', [Validators.required]),\n        slug: new FormControl('', [Validators.required]),\n        image: new FormControl('', [Validators.required]),\n        RecipeIngredient: this.ingredients\n    });\n    id: number;\n    companyOptionsSelect = [];\n    private _companies: Company[] = [];\n\n    unitOptionsSelect = [];\n    private _units: Unit[] = [];\n\n    ingredientOptionsSelect = [];\n    private _ingredients: Ingredient[] = [];\n\n    statusOptionsSelect = [];\n\n    languageOptionsSelect = ['en', 'he', 'es'];\n\n    private _subscribers = [];\n    private _mapIngCategory;\n\n    constructor(public router: Router,\n                public fb: FormBuilder,\n                public recipeService: RecipeService,\n                public fileService: FileService,\n                private _route: ActivatedRoute) {\n\n        this._subscribers.push(this.recipeForm.valueChanges.subscribe(\n            () => this.submitPending = false\n        ));\n\n        this._subscribers.push(this._route.data.subscribe((res: any) => {\n            this.id = res.data[0].id;\n            this._companies = res.data[1].data;\n            this._units = res.data[2].data;\n            this._ingredients = res.data[3].data;\n            this.categories = res.data[4].data;\n            this.recipeForm.patchValue(res.data[0]);\n            if (res.data[0].image !== null) {\n                this.recipeForm.patchValue({image: res.data[0].image.id});\n                this.croppedImage = res.data[0].image.path;\n            }\n            this.setMap();\n            this.changeLang();\n            _.forEach(res.data[0].ingredients, (item: any, i) => {\n                this.ingredients.setControl(+i, new FormGroup({\n                    unit_amount: new FormControl(item.unit_amount, [Validators.required]),\n                    unit_id: new FormControl(item.unit_id, [Validators.required]),\n                    ingredient_id: new FormControl(item.ingredient_id, [Validators.required]),\n                }));\n            });\n        }));\n\n    }\n\n    ngOnInit() {\n\n    }\n\n    public updateRecipe(event) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (!this.recipeForm.valid) {\n            this.submitPending = true;\n            return;\n        }\n\n        let recipe = this.recipeForm.value;\n\n        this._subscribers.push(this.recipeService.updateById(recipe, this.id).subscribe(\n            () => {\n                this.router.navigate(['/recipes']);\n            },\n            (err) => {\n                this.errors = err.error;\n            }\n        ));\n    }\n\n\n    ngOnDestroy() {\n        _.forEach(this._subscribers, (value) => {\n            value.unsubscribe();\n        });\n    }\n\n    public addIngredient(event) {\n        event.preventDefault();\n        this.ingredients.push(new FormGroup({\n            unit_amount: new FormControl(\"\", [Validators.required]),\n            unit_id: new FormControl(\"\", [Validators.required]),\n            ingredient_id: new FormControl(\"\", [Validators.required]),\n        }));\n    }\n\n    public deleteIngredient(event, index) {\n        event.preventDefault();\n        this.ingredients.removeAt(index);\n    }\n\n    changeLang(event?) {\n        this.changeLangOnSelect(this.recipeForm.controls.language.value);\n    }\n\n    private changeLangOnSelect(langPref) {\n        this.companyOptionsSelect = this.prepareDataForSelect(this._companies, langPref);\n        this.unitOptionsSelect = this.prepareDataForSelect(this._units, langPref);\n        this.ingredientOptionsSelect = this.prepareDataForSelect(this._ingredients, langPref);\n    }\n\n    private prepareDataForSelect(data: any, langPref: 'en' | 'es' | 'he') {\n        return _.map(data, (item: any) => {\n            return {value: item.id.toString(), label: this.getLabelByLang(item, langPref)};\n        });\n    }\n\n    private getLabelByLang(obj: any, langPref: 'en' | 'es' | 'he') {\n        return obj['name_' + langPref] ? obj['name_' + langPref] : obj['name_en'];\n    }\n\n    private setMap() {\n        let map = {};\n        _.forEach(this._ingredients, function (ing: Ingredient) {\n            map[ing.id] = ing.category_id;\n        });\n        this._mapIngCategory = map;\n    }\n\n    public isCategoryExistByIngId(ingId: number, catId: number): boolean {\n        let result: boolean = false;\n        if (_.has(this._mapIngCategory, ingId)) {\n            result = catId == this._mapIngCategory[ingId];\n        }\n\n        return result;\n    }\n\n    public isCategoryExist(catId: number): boolean {\n        let result: boolean = false;\n        let values = this.recipeForm.get('RecipeIngredient').value;\n        let ingIds: number[] = [];\n        _.forEach(values, function (value: any) {\n            ingIds.push(value.ingredient_id);\n        });\n\n        if (ingIds.length) {\n            _.forEach(ingIds, function (value: any) {\n                if (this.isCategoryExistByIngId(value, catId)) {\n                    result = true;\n                }\n            }.bind(this));\n        }\n\n        return result;\n    }\n\n    public addToMainIngs(event) {\n        event.preventDefault();\n\n        this.ingredients.push(new FormGroup({\n            unit_amount: new FormControl(this.subForm.get('unit_amount').value, [Validators.required]),\n            unit_id: new FormControl(this.subForm.get('unit_id').value, [Validators.required]),\n            ingredient_id: new FormControl(this.subForm.get('ingredient_id').value, [Validators.required]),\n        }));\n        this.subForm.reset();\n        this.subForm.get('unit_amount').patchValue(1);\n        this.subForm.clearValidators();\n    }\n\n    handleFileInput() {\n        this.uploadFileToActivity(this.croppedImage).subscribe(data => {\n            this.imgPath = data.path;\n            this.showBtnSL = false;\n            this.recipeForm.patchValue({image: data.id});\n            return true;\n        }, error => {\n            ToastrService.error(\"Error\", error);\n        });\n    }\n\n    fileChangeEvent(event: any): void {\n        if(event.target.files[0].size > 1048576) {\n            ToastrService.error(\"Error\", 'Size must be smaller than 1Mb');\n\n        } else {\n            this.imageChangedEvent = event;\n            this.fileToUpload = event.target.files;\n            this.showBtnSL = true;\n        }\n    }\n\n    imageCropped(image: string) {\n        this.croppedImage = image;\n        this.showBtnSL = true;\n    }\n\n    imageLoaded() {\n        // show cropper\n\n    }\n\n    loadImageFailed() {\n        this.showBtnSL = false;\n        ToastrService.error(\"Error\", 'Image must be \".jpg\" or \".png\"');\n    }\n\n    private generateFile(dataURI: string): Blob {\n        let byteString;\n        if (dataURI.split(',')[0].indexOf('base64') >= 0) {\n            byteString = atob(dataURI.split(',')[1]);\n        } else {\n            byteString = unescape(dataURI.split(',')[1]);\n        }\n        const type = dataURI\n            .split(',')[0]\n            .split(':')[1]\n            .split(';')[0];\n        const ia = new Uint8Array(byteString.length);\n        for (let i = 0; i < byteString.length; i++) {\n            ia[i] = byteString.charCodeAt(i);\n        }\n        return new Blob([ia], {type});\n    }\n\n    isExistErrorByFormField(formField: string): boolean {\n        return _.has(this.errors, formField);\n    }\n\n    getTextErrorByFormField(formField: string): string {\n        let arrMessage = this.errors[formField];\n        return arrMessage.join(',');\n    }\n\n    uploadFileToActivity(croppedImage: string) {\n        return this.fileService.postFile(this.generateFile(croppedImage));\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/recipe/update/update.component.ts","import {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from \"@angular/router\";\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs/add/observable/of\";\nimport {RecipeService} from \"../service/recipe.service\";\nimport {CompanyService} from \"../../company/services/company.service\";\nimport {UnitService} from \"../../unit/service/unit.service\";\nimport {IngredientService} from \"../../ingredient/service/ingredient.service\";\nimport {CategoryService} from \"../../category/service/category.service\";\n\n@Injectable()\nexport class UpdateResolver implements Resolve<any> {\n    constructor(private recipeService: RecipeService,\n                private companyService: CompanyService,\n                private unitService: UnitService,\n                private categoryService: CategoryService,\n                private ingredientService: IngredientService) {\n\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\n        let reqObj = {\n            page: 1,\n            limit: 100,\n            status: 1,\n            // order: 1\n        };\n        return Observable.forkJoin(\n            this.recipeService.getViewById(route.params['id']),\n            this.companyService.getList(reqObj),\n            this.unitService.getList(reqObj),\n            this.ingredientService.getList(reqObj),\n            this.categoryService.getList(reqObj)\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/recipe/update/update.resolver.ts","import {Injectable} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {Observable} from \"rxjs/Rx\";\nimport {ToastrService} from \"./toastr.service\";\nimport {Response} from \"@angular/http\";\n\n@Injectable()\nexport class ErrorHandler {\n    constructor(private router: Router) {\n\n    }\n\n    public handle(err: Response | any, caught: any): Observable<any> {\n        if (err.status === 401) {\n            localStorage.removeItem('access-token');\n            this.router.navigate(['/login']);\n        }\n        if (err.status === 400) {\n            ToastrService.error(err._body || err.statusText, \"Error:Data is incorrect\");\n        } else {\n            ToastrService.error(err._body || err.statusText, \"Error \" + err.status);\n        }\n        return Observable.throw(err);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/error-handler.service.ts","import * as _ from 'lodash';\nimport {Injectable} from '@angular/core';\nimport {ListRequest} from \"./models/list-request.model\";\n\n@Injectable()\nexport class ListRequestService {\n    public static parseRequestObject(requestObj: ListRequest) {\n        let str = \"\";\n        for (let keyObj in requestObj) {\n            if (!_.isNil(requestObj[keyObj]) && requestObj[keyObj] !== \"\") {\n                if (_.isArray(requestObj[keyObj])) {\n                    if (requestObj[keyObj].length > 0) {\n                        let pairs = [];\n                        for (let key in requestObj[keyObj])\n                            if (requestObj[keyObj].hasOwnProperty(key)) {\n                                pairs.push(keyObj + \"[]\" + '=' + encodeURIComponent(requestObj[keyObj][key]));\n                            }\n                        str += \"&\" + pairs.join('&');\n                    }\n                } else {\n                    if (str != \"\") {\n                        str += \"&\";\n                    }\n                    str += keyObj + \"=\" + encodeURIComponent(requestObj[keyObj]);\n                }\n            }\n        }\n        return str;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/list-request.service.ts","import {NgModule} from \"@angular/core\";\nimport {CdkTableModule} from \"@angular/cdk/table\";\nimport {\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule\n} from \"@angular/material\";\n\n@NgModule({\n    exports: [\n        CdkTableModule,\n        MatAutocompleteModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n    ]\n})\nexport class MaterialModule {\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/material.module.ts","import {NgModule} from \"@angular/core\";\nimport {ErrorHandler} from \"./error-handler.service\";\nimport {TitleService} from \"./title.service\";\nimport {ToastrService} from \"./toastr.service\";\nimport {ListRequestService} from \"./list-request.service\";\n\n@NgModule({\n    declarations: [],\n    imports: [],\n    exports: [],\n    providers: [\n        ErrorHandler,\n        TitleService,\n        ToastrService,\n        ListRequestService,\n    ]\n})\nexport class SharedModule {\n    constructor() {\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/shared.module.ts","import {Injectable} from '@angular/core';\nimport {Title}     from '@angular/platform-browser';\n\n@Injectable()\nexport class TitleService {\n    private static titleService: Title = new Title('');\n    private static titleBase: string = \"CrazySOB v2.0.1\";\n\n    public static setTitle(newTitle: string) {\n        this.titleService.setTitle(this.titleBase + \" | \" + newTitle);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/title.service.ts","import {Injectable} from '@angular/core';\nimport * as toastr from 'toastr';\n\n@Injectable()\nexport class ToastrService {\n    private static _toastr = toastr;\n\n    public static error(message: string, title?: string, optionsOverride?: Object) {\n        this._toastr.error(message, title, optionsOverride);\n    }\n\n    public static info(message: string, title?: string, optionsOverride?: Object) {\n        this._toastr.info(message, title, optionsOverride);\n    }\n\n    public static success(message: string, title?: string, optionsOverride?: Object) {\n        this._toastr.success(message, title, optionsOverride);\n    }\n\n    public static warning(message: string, title?: string, optionsOverride?: Object) {\n        this._toastr.warning(message, title, optionsOverride);\n    }\n\n    public static clear() {\n        this._toastr.clear();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/toastr.service.ts","module.exports = \"input.ng-touched.ng-invalid {\\n    border-color: red;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/unit/create/create.component.css\n// module id = ./src/app/unit/create/create.component.css\n// module chunks = main","module.exports = \"<div class=\\\"table-wrapper\\\">\\n    <div class=\\\"wrap-header\\\"></div>\\n    <div class=\\\"wrap-tmain\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header card-success card-inverse\\\">\\n                <span class=\\\"card-title\\\">Create unit</span>\\n            </div>\\n            <div class=\\\"card-block\\\">\\n                <form [formGroup]=\\\"unitForm\\\" [ngClass]=\\\"{'form-error':submitPending }\\\" (submit)=\\\"createUnit($event)\\\"\\n                      novalidate>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"name_en\\\">name_en</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\"\\n                                   id=\\\"name_en\\\"\\n                                   formControlName=\\\"name_en\\\"\\n                                   type=\\\"text\\\"\\n                                   placeholder=\\\"Enter title\\\">\\n                            <p class=\\\"error_message\\\"\\n                               *ngIf=\\\"unitForm.get('name_en').hasError('required') && submitPending\\\">First Name is\\n                                required</p>\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"isExistErrorByFormField('name_en')\\\">{{\\n                                getTextErrorByFormField('name_en') }}</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"name_he\\\">name_he</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" id=\\\"name_he\\\" formControlName=\\\"name_he\\\" type=\\\"text\\\"\\n                                   placeholder=\\\"Enter title\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"name_es\\\">name_es</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" id=\\\"name_es\\\" formControlName=\\\"name_es\\\" type=\\\"text\\\"\\n                                   placeholder=\\\"Enter title\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n                            <button class=\\\"btn btn-danger btn-bordered margin-right\\\" type=\\\"button\\\"\\n                                    [routerLink]=\\\"['/units']\\\">Cancel\\n                            </button>\\n                            <button class=\\\"btn btn-primary btn-bordered\\\" type=\\\"submit\\\"\\n                            >Create\\n                            </button>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/unit/create/create.component.html\n// module id = ./src/app/unit/create/create.component.html\n// module chunks = main","import * as _ from \"lodash\";\nimport {Component, OnInit} from \"@angular/core\";\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {UnitService} from \"../service/unit.service\";\n\n@Component({\n    selector: 'unit-create',\n    templateUrl: './create.component.html',\n    styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n    showLang: boolean = false;\n    submitPending: boolean = false;\n    errors = [];\n\n    public unitForm: FormGroup = new FormGroup({\n        name_en: new FormControl(\"\", [Validators.required]),\n        name_he: new FormControl(\"\", []),\n        name_es: new FormControl(\"\", []),\n        position: new FormControl(1, [Validators.required, Validators.min(1)]),\n        status: new FormControl(1, [Validators.required]),\n    });\n\n    private _subscribers = [];\n\n    constructor(public router: Router,\n                public fb: FormBuilder,\n                public unitService: UnitService,\n                public route: ActivatedRoute) {\n\n        this._subscribers.push(this.unitForm.valueChanges.subscribe(\n            () => this.submitPending = false\n        ));\n        this._subscribers.push(this.route.data.subscribe((res: any) => {\n            this.unitForm.controls['position'].patchValue(+res.data[0] + 1);\n        }));\n    }\n\n    ngOnInit() {\n\n    }\n\n    public createUnit(event) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (!this.unitForm.valid) {\n            this.submitPending = true;\n            return;\n        }\n\n        this.submitPending = true;\n        let unit = this.unitForm.value;\n        this._subscribers.push(this.unitService.create(unit).subscribe(\n            () => {\n                this.router.navigate(['/units']);\n            },\n            (err) => {\n                this.errors = err.error;\n            }\n        ));\n    }\n\n    isExistErrorByFormField(formField: string): boolean {\n        return _.has(this.errors, formField);\n    }\n\n    getTextErrorByFormField(formField: string): string {\n        let arrMessage = this.errors[formField];\n        return arrMessage.join(',');\n    }\n\n    ngOnDestroy() {\n        _.forEach(this._subscribers, (value) => {\n            value.unsubscribe();\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/unit/create/create.component.ts","import {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from \"@angular/router\";\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs/add/observable/of\";\nimport {UnitService} from \"../service/unit.service\";\n\n@Injectable()\nexport class CreateResolver implements Resolve<any> {\n    constructor(private unitService: UnitService) {\n\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\n        return Observable.forkJoin(\n            this.unitService.getMaxPosition()\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/unit/create/create.resolver.ts","module.exports = \"table {\\n    width: 100%;\\n}\\n\\ntable td,\\ntable th {\\n    padding: 5px;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/unit/list/list.component.css\n// module id = ./src/app/unit/list/list.component.css\n// module chunks = main","module.exports = \"<div class=\\\"wrapper-content\\\">\\n    <div class=\\\"table-wrapper\\\">\\n        <div class=\\\"wrap-header\\\">\\n            <h3>{{title}}</h3>\\n        </div>\\n        <div class=\\\"wrap-tmain\\\">\\n            <div class=\\\"table-scroll\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-block\\\" style=\\\"padding-bottom: 0\\\">\\n                        <table border=\\\"1\\\">\\n                            <thead>\\n                            <tr class=\\\"ng2-smart-titles\\\">\\n                                <th class=\\\"ng2-smart-actions\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">Actions</div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        #\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        Used by ingredients\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        Unit Name\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th \\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        Status\\n                                    </div>\\n                                </th>\\n                            </tr>\\n                            <tr class=\\\"ng2-smart-filters\\\">\\n                                <th class=\\\"ng2-smart-actions-title ng2-smart-actions-title-add\\\">\\n                                    <a routerLink=\\\"create\\\" routerLinkActive=\\\"active\\\"\\n                                       class=\\\"btn btn-secondary\\\" href=\\\"#\\\">+ Add unit</a>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n                                        <div class=\\\"ng2-smart-filter\\\">\\n                                            <input class=\\\"form-control ng-untouched ng-pristine ng-valid\\\"\\n                                                   [(ngModel)]=\\\"searchName\\\"\\n                                                   (keyup.enter)=\\\"applyFilters($event)\\\"\\n                                                   type=\\\"text\\\"\\n                                                   placeholder=\\\"Name\\\">\\n                                        </div>\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n                                        <select\\n                                                class=\\\"form-control underline\\\"\\n                                                (change)=\\\"applyFilters($event)\\\"\\n                                                [(ngModel)]=\\\"searchStatus\\\">\\n                                            <option *ngFor=\\\"let status of statusOptionsSelect\\\"\\n                                                    [value]=\\\"status.value\\\"\\n                                                    (onClick)=\\\"applyFilters($event)\\\">\\n                                                {{ status.label }}\\n                                            </option>\\n                                        </select>\\n                                    </div>\\n                                </th>\\n                            </tr>\\n                            </thead>\\n                            <tbody>\\n                            <tr *ngFor=\\\"let unit of itemList; let i = index\\\">\\n                                <td>\\n                                    <a [routerLink]=\\\"['update/' + unit.id]\\\" *ngIf=\\\"unit.status == 1\\\"\\n                                       routerLinkActive=\\\"active\\\" class=\\\"btn btn-info\\\">\\n                                        <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n                                        edit</a>\\n                                    <button *ngIf=\\\"unit.status == 1\\\"\\n                                            [disabled]=\\\"unit.activeIngredientCount != '0'\\\"\\n                                            title=\\\"This unit used in {{unit.activeIngredientCount}} ingredients\\\"\\n                                            class=\\\"btn btn-danger\\\"\\n                                            (click)=\\\"onDelete($event, content, unit)\\\">\\n                                        <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>\\n                                        delete\\n                                    </button>\\n                                </td>\\n                                <td>{{(i+1) + (page - 1) * selectedLimit}}</td>\\n                                <td>{{unit.activeIngredientCount}}</td>\\n                                <td>{{unit.name_en}}</td>\\n                                <td>\\n                                    <span class=\\\"active-status edit button\\\" *ngIf=\\\"unit.status == 1\\\">Active</span>\\n                                    <span class=\\\"deleted-status delete button\\\" *ngIf=\\\"unit.status == 3 \\\">Deleted</span>\\n                                </td>\\n                            </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n\\n                    <div class=\\\"page-select\\\">\\n                        <div class=\\\"col-sm-8\\\">\\n                            <select class=\\\"form-control\\\" style=\\\"width: 200px;\\\"\\n                                    [(ngModel)]=\\\"selectedLimit\\\"\\n                                    (change)=\\\"onLimitSelected($event)\\\">\\n                                <option *ngFor=\\\"let item of limitOptionsSelect\\\" [value]=\\\"item.value\\\">\\n                                    {{ item.label }}\\n                                </option>\\n                            </select>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\" *ngIf=\\\"itemSize > selectedLimit\\\">\\n                            <ngb-pagination\\n                                    [collectionSize]=\\\"itemSize\\\"\\n                                    [(page)]=\\\"page\\\"\\n                                    (pageChange)=\\\"onPageChange($event)\\\"\\n                                    [pageSize]=\\\"selectedLimit\\\"\\n                                    [rotate]=\\\"true\\\"\\n                                    [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n        <i class=\\\"material-icons\\\">clear</i>\\n    </button>\\n    <div class=\\\"modal-body delete-modal clearfix\\\">\\n        <p>Are you sure you want to delete the unit <b>«{{itemTitle}}»?</b></p>\\n        <span>This action cannot be undone </span>\\n\\n        <button type=\\\"button\\\" class=\\\"btn m-btn_no-bg margin-right\\\" (click)=\\\"d('no')\\\">Cancel</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-color\\\" (click)=\\\"c('yes')\\\">Delete it!</button>\\n    </div>\\n</ng-template>\\n\\n<template ngbModalContainer></template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/unit/list/list.component.html\n// module id = ./src/app/unit/list/list.component.html\n// module chunks = main","import * as _ from \"lodash\";\nimport {Component, OnInit} from \"@angular/core\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Observable} from \"rxjs/Observable\";\nimport {UnitService} from \"../service/unit.service\";\nimport {Unit} from \"../models/unit\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n    selector: 'unit-list',\n    templateUrl: './list.component.html',\n    styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n    itemList: Unit[];\n    itemSize: number;\n    private title = 'Units list';\n\n    itemTitle: string;\n    searchName = '';\n    searchStatus = 1;\n\n    isShowPagination: boolean = true;\n    statusOptionsSelect = [\n        {\n            value: '',\n            label: 'All'\n        },\n        {\n            value: 1,\n            label: 'Active'\n        },\n        {\n            value: 3,\n            label: 'Deleted'\n        }\n    ];\n    public limitOptionsSelect = [\n        {\n            value: 5,\n            label: '5'\n        },\n        {\n            value: 10,\n            label: '10'\n        },\n        {\n            value: 20,\n            label: '20'\n        },\n        {\n            value: 50,\n            label: '50'\n        },\n        {\n            value: 100,\n            label: '100'\n        }\n    ];\n    public page = 1;\n\n    public selectedLimit = 10;\n\n    private _subscribers = [];\n\n    constructor(public entityService: UnitService,\n                private modalService: NgbModal,\n                private _route: ActivatedRoute) {\n\n        this._subscribers.push(this._route.data.subscribe((res: any) => {\n            this.itemList = _.take(res.data[0].data, this.selectedLimit);\n            this.itemSize = +res.data[0].count;\n        }));\n    }\n\n    onDelete(event, context, unit: Unit) {\n        event.preventDefault();\n        this.itemTitle = unit.name_en;\n        this.modalService.open(context).result.then((result) => {\n            this._subscribers.push(Observable.concat(\n                this.entityService.deleteById(unit.id),\n                this.entityService.getList(this.buildListResponseObject())\n            ).subscribe(\n                (res: any) => {\n                    if (res) {\n                        this.itemList = res.data;\n                        this.itemSize = +res.count;\n                    }\n                },\n                (err) => {\n\n                }\n            ))\n        });\n\n    }\n\n    ngOnInit() {\n    }\n\n    ngOnDestroy() {\n        _.forEach(this._subscribers, (value) => {\n            value.unsubscribe();\n        });\n    }\n\n    public onLimitSelected(selected) {\n        this.page = 1;\n        this.listRequest();\n    }\n\n    /**\n     * Use this method to get current list\n     * @param page\n     */\n    private listRequest(page?) {\n        this._subscribers.push(this.entityService.getList(this.buildListResponseObject(page))\n            .subscribe(\n                (res: { data: any, count: number }) => {\n                    this.itemList = res.data;\n                    this.itemSize = +res.count;\n                },\n                (err) => {\n\n                }\n            ));\n    }\n\n    /**\n     * Use this method to prepare request object for list. Sets limits, pagination, etc.\n     * @param page\n     * @returns {{query: any, page: (any|number), limit: number, sort: string, order: number, filter: string}}\n     */\n    private buildListResponseObject(page?) {\n        return {\n            page: page || this.page,\n            limit: this.selectedLimit,\n            status: this.searchStatus,\n            name: this.searchName,\n        }\n    }\n\n    public onPageChange(event) {\n        this.listRequest(event);\n    }\n\n    public applyFilters(event) {\n        event.preventDefault();\n        this.page = 1;\n        this.listRequest();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/unit/list/list.component.ts","import {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from \"@angular/router\";\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs/add/observable/of\";\nimport {UnitService} from \"../service/unit.service\";\n\n@Injectable()\nexport class ListResolver implements Resolve<any> {\n    constructor(private unitService: UnitService) {\n\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\n        let reqObj = {\n            page: 1,\n            limit: 10,\n            status: 1,\n            // order: 1\n        };\n        return Observable.forkJoin(\n            this.unitService.getList(reqObj)\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/unit/list/list.resolver.ts","import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {ToastrService} from \"../../shared/toastr.service\";\nimport {AuthService} from \"../../authentication/services/auth.service\";\nimport {ErrorHandler} from \"../../shared/error-handler.service\";\nimport {ListRequest} from \"../../shared/models/list-request.model\";\nimport {ListRequestService} from \"../../shared/list-request.service\";\n\n@Injectable()\nexport class UnitService {\n\n    private path = '/v1/units';\n\n    constructor(private http: HttpClient,\n                private authService: AuthService,\n                private errorHandler: ErrorHandler) {\n    }\n\n    private getHeaders() {\n        return new HttpHeaders().set('Authorization', 'Bearer ' + this.authService.getAuthToken());\n    }\n\n    public getList(resObj: ListRequest = {}): Observable<{}> {\n        return this.http.get(this.path + '?' + ListRequestService.parseRequestObject(resObj), {headers: this.getHeaders()})\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n\n    public getViewById(id: number): Observable<{}> {\n        return this.http.get(this.path + '/' + id, {headers: this.getHeaders()})\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n\n    public create(unit): Observable<{}> {\n        return this.http.post(this.path, unit, {headers: this.getHeaders()})\n            .do(() => ToastrService.success(\"\", \"Unit was created\"))\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n\n    public updateById(unit, id: number): Observable<{}> {\n        return this.http.put(this.path + '/' + id, unit, {headers: this.getHeaders()})\n            .do(() => ToastrService.success(\"\", \"Unit was updated\"))\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n\n    public deleteById(id: number): Observable<{}> {\n        return this.http.delete(this.path + '/' + id, {headers: this.getHeaders()})\n            .do(() => ToastrService.success(\"\", \"Unit was deleted\"))\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n\n    public getMaxPosition(): Observable<{}> {\n        return this.http.get(this.path + '/max-active-position', {headers: this.getHeaders()})\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/unit/service/unit.service.ts","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {ListComponent} from \"./list/list.component\";\nimport {UnitService} from \"./service/unit.service\";\nimport {ListResolver} from \"./list/list.resolver\";\nimport {unitRoutes} from \"./unit.routing\";\nimport {RouterModule} from \"@angular/router\";\nimport {CreateComponent} from \"./create/create.component\";\nimport {UpdateComponent} from \"./update/update.component\";\nimport {UpdateResolver} from \"./update/update.resolver\";\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {CreateResolver} from \"./create/create.resolver\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {ModalModule} from \"ngx-bootstrap\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        BrowserModule,\n        RouterModule.forChild(unitRoutes),\n        NgbModule.forRoot(),\n        ModalModule.forRoot(),\n        ReactiveFormsModule,\n    ],\n    declarations: [\n        ListComponent,\n        CreateComponent,\n        UpdateComponent,\n    ],\n    providers: [\n        UnitService,\n        ListResolver,\n        UpdateResolver,\n        CreateResolver,\n    ]\n})\nexport class UnitModule {\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/unit/unit.module.ts","import {Routes} from \"@angular/router\";\nimport {ListComponent} from \"./list/list.component\";\nimport {RootComponent} from \"../core/root.component\";\nimport {AppResolver} from \"../app.resolver\";\nimport {ListResolver} from \"./list/list.resolver\";\nimport {CreateComponent} from \"./create/create.component\";\nimport {UpdateResolver} from \"./update/update.resolver\";\nimport {UpdateComponent} from \"./update/update.component\";\nimport {CreateResolver} from \"./create/create.resolver\";\n\nexport const unitRoutes: Routes = [\n    {\n        path: 'units',\n        component: RootComponent,\n        canActivate: [AppResolver],\n        children: [\n            {\n                path: '',\n                component: ListComponent,\n                resolve: {\n                    'data': ListResolver\n                }\n            },\n            {\n                path: 'create',\n                component: CreateComponent,\n                resolve: {\n                    'data': CreateResolver\n                }\n            },\n            {\n                path: 'update/:id', component: UpdateComponent,\n                resolve: {\n                    'data': UpdateResolver\n                }\n            },\n            // {\n            //     path: ':id', component: ViewComponent,\n            //     resolve: {\n            //         'data': ViewResolver\n            //     },\n            // },\n        ]\n    },\n\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/unit/unit.routing.ts","module.exports = \"<div class=\\\"table-wrapper\\\">\\n    <div class=\\\"wrap-header\\\"></div>\\n    <div class=\\\"wrap-tmain\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header card-success card-inverse\\\">\\n                <span class=\\\"card-title\\\">Update unit</span>\\n            </div>\\n            <div class=\\\"card-block\\\">\\n                <form [formGroup]=\\\"unitForm\\\" [ngClass]=\\\"{'form-error':submitPending }\\\" (submit)=\\\"updateUnit($event)\\\"\\n                      novalidate>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"name_en\\\">name_en</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" formControlName=\\\"name_en\\\" id=\\\"name_en\\\" type=\\\"text\\\"\\n                                   placeholder=\\\"Enter title\\\">\\n                            <p class=\\\"error_message\\\"\\n                               *ngIf=\\\"unitForm.get('name_en').hasError('required') && submitPending\\\">First Name is\\n                                required</p>\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"isExistErrorByFormField('name_en')\\\">{{\\n                                getTextErrorByFormField('name_en') }}</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"name_he\\\">name_he</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" id=\\\"name_he\\\" formControlName=\\\"name_he\\\" type=\\\"text\\\"\\n                                   placeholder=\\\"Enter title\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"name_es\\\">name_es</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" id=\\\"name_es\\\" formControlName=\\\"name_es\\\" type=\\\"text\\\"\\n                                   placeholder=\\\"Enter title\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n                            <button class=\\\"btn btn-danger btn-bordered margin-right\\\" type=\\\"button\\\"\\n                                    [routerLink]=\\\"['/units']\\\">Cancel\\n                            </button>\\n                            <button class=\\\"btn btn-primary btn-bordered\\\" type=\\\"submit\\\"\\n                            >Update\\n                            </button>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/unit/update/update.component.html\n// module id = ./src/app/unit/update/update.component.html\n// module chunks = main","import * as _ from 'lodash';\nimport {Component, OnInit} from \"@angular/core\";\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {UnitService} from \"../service/unit.service\";\n\n@Component({\n    selector: 'unit-update',\n    templateUrl: './update.component.html'\n})\nexport class UpdateComponent implements OnInit {\n    showLang: boolean = false;\n    submitPending: boolean = false;\n    errors = [];\n\n    public unitForm: FormGroup = new FormGroup({\n        id: new FormControl(\"\", [Validators.required]),\n        name_en: new FormControl(\"\", [Validators.required]),\n        name_he: new FormControl(\"\", []),\n        name_es: new FormControl(\"\", []),\n        position: new FormControl(1, [Validators.required, Validators.min(1)]),\n        status: new FormControl(1, [Validators.required]),\n    });\n\n    private _subscribers = [];\n\n    constructor(public router: Router,\n                public fb: FormBuilder,\n                public unitService: UnitService,\n                private _route: ActivatedRoute) {\n        this._subscribers.push(this._route.data.subscribe((res: any) => {\n            this.unitForm.patchValue(res.data[0]);\n        }))\n    }\n\n    ngOnInit() {\n\n    }\n\n    public updateUnit(event) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (!this.unitForm.valid) {\n            this.submitPending = true;\n            return;\n        }\n        this.submitPending = true;\n        let unit = this.unitForm.value;\n        this._subscribers.push(this.unitService.updateById(unit, unit.id).subscribe(\n            () => {\n                this.router.navigate(['/units']);\n            },\n            (err) => {\n                this.errors = err.error;\n            }\n        ));\n    }\n\n    isExistErrorByFormField(formField: string): boolean {\n        return _.has(this.errors, formField);\n    }\n\n    getTextErrorByFormField(formField: string): string {\n        let arrMessage = this.errors[formField];\n        return arrMessage.join(',');\n    }\n\n    ngOnDestroy() {\n        _.forEach(this._subscribers, (value) => {\n            value.unsubscribe();\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/unit/update/update.component.ts","import {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from \"@angular/router\";\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs/add/observable/of\";\nimport {UnitService} from \"../service/unit.service\";\n\n@Injectable()\nexport class UpdateResolver implements Resolve<any> {\n    constructor(private unitService: UnitService) {\n\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\n\n        return Observable.forkJoin(\n            this.unitService.getViewById(route.params['id']),\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/unit/update/update.resolver.ts","module.exports = \".form-add-user strong {\\n    font-weight: bold;\\n    display: block;\\n}\\n\\n.form-add-user select {\\n    width: 200px;\\n    margin-bottom: 10px;\\n}\\n\\n.form-add-user input {\\n    padding: 3px 5px;\\n    outline: none;\\n    width: 200px;\\n    border-radius: 4px;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/users/create/create.component.css\n// module id = ./src/app/users/create/create.component.css\n// module chunks = main","module.exports = \"<div class=\\\"table-wrapper\\\">\\n    <div class=\\\"wrap-header\\\"></div>\\n    <div class=\\\"wrap-tmain\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header card-success card-inverse\\\">\\n                <span class=\\\"card-title\\\">Create user</span>\\n            </div>\\n            <div class=\\\"card-block\\\">\\n                <form [formGroup]=\\\"form\\\" [ngClass]=\\\"{'form-error':submitPending }\\\" (ngSubmit)=\\\"create($event)\\\"\\n                      novalidate>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"inputFirstName\\\">First Name</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" formControlName=\\\"first_name\\\" id=\\\"inputFirstName\\\"\\n                                   placeholder=\\\"First Name\\\" type=\\\"text\\\">\\n                            <p class=\\\"error_message\\\"\\n                               *ngIf=\\\"form.get('first_name').hasError('required') && submitPending\\\">First Name is\\n                                required</p>\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"isExistErrorByFormField('first_name')\\\">{{\\n                                getTextErrorByFormField('first_name') }}</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"inputSecondName\\\">Second\\n                            Name</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" formControlName=\\\"second_name\\\" id=\\\"inputSecondName\\\"\\n                                   placeholder=\\\"Second Name\\\" type=\\\"text\\\">\\n                            <p class=\\\"error_message\\\"\\n                               *ngIf=\\\"form.get('second_name').hasError('required')  && submitPending\\\">Second Name is\\n                                required</p>\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"isExistErrorByFormField('second_name')\\\">{{\\n                                getTextErrorByFormField('second_name') }}</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"inputEmail\\\">Email</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" formControlName=\\\"email\\\" id=\\\"inputEmail\\\"\\n                                   placeholder=\\\"Email\\\" type=\\\"text\\\">\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"form.get('email').hasError('required') && submitPending\\\">\\n                                Email is required</p>\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"isExistErrorByFormField('email')\\\">{{\\n                                getTextErrorByFormField('email') }}</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"username\\\">User name</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" formControlName=\\\"username\\\" id=\\\"username\\\"\\n                                   placeholder=\\\"User name\\\" type=\\\"text\\\">\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"form.get('username').hasError('required') && submitPending\\\">\\n                                User name is required</p>\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"isExistErrorByFormField('username')\\\">{{\\n                                getTextErrorByFormField('username') }}</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"password\\\">Password</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" type=\\\"password\\\" formControlName=\\\"password\\\"\\n                                   id=\\\"password\\\" placeholder=\\\"Password\\\">\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"form.get('password').hasError('required') && submitPending\\\">\\n                                Password is required</p>\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"isExistErrorByFormField('password')\\\">{{\\n                                getTextErrorByFormField('password') }}</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row mb10\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"selectCategory\\\">Select\\n                            role</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <div>\\n                                <select id=\\\"selectCategory\\\"\\n                                        class=\\\"form-control underline\\\"\\n                                        formControlName=\\\"role\\\">\\n                                    <option\\n                                        *ngFor=\\\"let role of roleOptionsSelect\\\" [value]=\\\"role.value\\\">\\n                                        {{ role.label }}\\n                                    </option>\\n                                </select>\\n\\n                                <div *ngIf=\\\"form.get('role').hasError('required') && submitPending\\\">\\n                                    Role is <strong>required</strong>\\n                                </div>\\n                                <p class=\\\"error_message\\\" *ngIf=\\\"isExistErrorByFormField('password')\\\">{{\\n                                    getTextErrorByFormField('password') }}</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n                            <button class=\\\"btn btn-danger btn-bordered margin-right\\\" type=\\\"button\\\"\\n                                    [routerLink]=\\\"['/users']\\\">Cancel\\n                            </button>\\n                            <button type=\\\"submit\\\"\\n                                    class=\\\"btn btn-primary btn-bordered\\\">Save\\n                            </button>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/users/create/create.component.html\n// module id = ./src/app/users/create/create.component.html\n// module chunks = main","import * as _ from \"lodash\";\nimport {Component, Input, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport 'rxjs/add/operator/switchMap';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {User} from \"../models/user\";\nimport {UserService} from \"../services/user.service\";\n\n@Component({\n    selector: 'app-user-create',\n    templateUrl: './create.component.html',\n    styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n\n    submitPending: boolean = false;\n    public form: FormGroup = new FormGroup({\n        first_name: new FormControl('', [Validators.required]),\n        second_name: new FormControl('', Validators.required),\n        password: new FormControl('', [Validators.required, Validators.min(6)]),\n        username: new FormControl('', [Validators.required, Validators.min(5)]),\n        email: new FormControl('', [Validators.required]),\n        role: new FormControl('', [Validators.required]),\n    });\n\n    errors = [];\n    private _subscribers = [];\n\n    roleOptionsSelect = [\n        {\n            value: 1,\n            label: 'Admin'\n        },\n        {\n            value: 2,\n            label: 'Editor'\n        }\n    ];\n\n    constructor(public usersService: UserService,\n                public router: Router) {\n        this._subscribers.push(this.form.valueChanges.subscribe(\n            () => this.submitPending = false\n        ));\n    }\n\n    ngOnInit() {\n\n    }\n\n    create(event) {\n        event.preventDefault();\n\n        if (!this.form.valid) {\n            this.submitPending = true;\n            return;\n        }\n        let user = this.form.value;\n\n        this._subscribers.push(this.usersService.create(user).subscribe(\n            () => {\n                this.router.navigate(['/users']);\n            },\n            (err) => {\n                this.errors = err.error;\n            }\n        ));\n    }\n\n    isExistErrorByFormField(formField: string): boolean {\n        return _.has(this.errors, formField);\n    }\n\n    getTextErrorByFormField(formField: string): string {\n        let arrMessage = this.errors[formField];\n        return arrMessage.join(',');\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/users/create/create.component.ts","module.exports = \".user-table {\\n    width: 100%;\\n}\\n\\n.user-table td,\\n.user-table th {\\n    padding: 5px;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/users/list/list.component.css\n// module id = ./src/app/users/list/list.component.css\n// module chunks = main","module.exports = \"<div class=\\\"wrapper-content\\\">\\n    <div class=\\\"table-wrapper\\\">\\n        <div class=\\\"wrap-header\\\">\\n            <h3>{{title}}</h3>\\n        </div>\\n        <div class=\\\"wrap-tmain\\\">\\n            <div class=\\\"table-scroll\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-block\\\" style=\\\"padding-bottom: 0\\\">\\n                        <table border=\\\"1\\\">\\n                            <thead>\\n                            <tr class=\\\"ng2-smart-titles\\\">\\n                                <th class=\\\"ng2-smart-actions\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">Actions</div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th name\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        Full name\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th email\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        Email\\n                                    </div>\\n                                </th>\\n\\n                                <th class=\\\"ng2-smart-th status\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        Status\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th role\\\">\\n                                    <div class=\\\"ng2-smart-title\\\">\\n                                        Role\\n                                    </div>\\n                                </th>\\n                            </tr>\\n                            <tr class=\\\"ng2-smart-filters\\\">\\n                                <th class=\\\"ng2-smart-actions-title ng2-smart-actions-title-add\\\">\\n                                    <a routerLink=\\\"/users/create\\\" routerLinkActive=\\\"active\\\"\\n                                       class=\\\"btn btn-secondary\\\" href=\\\"#\\\">+ Add Users</a>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n                                        <input class=\\\"form-control ng-untouched ng-pristine ng-valid\\\"\\n                                               [(ngModel)]=\\\"searchFullName\\\"\\n                                               (keyup.enter)=\\\"applyFilters($event)\\\"\\n                                               type=\\\"text\\\"\\n                                               placeholder=\\\"Name\\\">\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th \\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n                                        <input class=\\\"form-control ng-untouched ng-pristine ng-valid\\\"\\n                                               [(ngModel)]=\\\"searchEmail\\\"\\n                                               (keyup.enter)=\\\"applyFilters($event)\\\"\\n                                               type=\\\"text\\\"\\n                                               placeholder=\\\"Email\\\">\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n                                        <select\\n                                            class=\\\"form-control underline\\\"\\n                                            (change)=\\\"applyFilters($event)\\\"\\n                                            [(ngModel)]=\\\"searchStatus\\\">\\n                                            <option *ngFor=\\\"let status of statusOptionsSelect\\\"\\n                                                    [value]=\\\"status.value\\\"\\n                                                    (onClick)=\\\"applyFilters($event)\\\">\\n                                                {{ status.label }}\\n                                            </option>\\n                                        </select>\\n                                    </div>\\n                                </th>\\n                                <th class=\\\"ng2-smart-th\\\">\\n                                    <div class=\\\"ng2-smart-filter\\\">\\n                                        <select\\n                                            class=\\\"form-control underline\\\"\\n                                            (change)=\\\"applyFilters($event)\\\"\\n                                            [(ngModel)]=\\\"searchRole\\\">\\n                                            <option *ngFor=\\\"let role of roleOptionsSelect\\\"\\n                                                    [value]=\\\"role.value\\\"\\n                                                    (onClick)=\\\"applyFilters($event)\\\">\\n                                                {{ role.label }}\\n                                            </option>\\n                                        </select>\\n                                    </div>\\n                                </th>\\n                            </tr>\\n                            </thead>\\n                            <tbody>\\n                            <tr *ngFor=\\\"let user of userList\\\">\\n                                <td>\\n                                    <span *ngIf=\\\"user.status === 1\\\" class=\\\"btn btn-danger\\\"\\n                                          (click)=\\\"onBlock($event, content, user)\\\"><i\\n                                        class=\\\"fa fa-trash\\\"\\n                                        aria-hidden=\\\"true\\\"></i> block</span>\\n                                </td>\\n                                <td>{{user.firstName + ' ' + user.secondName}}</td>\\n                                <td>{{user.email}}</td>\\n                                <td>{{ getlabelByStatus(user.status) }}</td>\\n                                <td>{{ getRoleLabelByRole(user.role) }}</td>\\n                            </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                    <div class=\\\"page-select\\\">\\n                        <div class=\\\"col-sm-8\\\">\\n                            <select class=\\\"form-control\\\" style=\\\"width: 200px;\\\"\\n                                    [(ngModel)]=\\\"selectedLimit\\\"\\n                                    (change)=\\\"onLimitSelected($event)\\\">\\n                                <option *ngFor=\\\"let item of limitOptionsSelect\\\" [value]=\\\"item.value\\\">\\n                                    {{ item.label }}\\n                                </option>\\n                            </select>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\" *ngIf=\\\"userSize > selectedLimit\\\">\\n                            <ngb-pagination\\n                                [collectionSize]=\\\"userSize\\\"\\n                                [(page)]=\\\"page\\\"\\n                                (pageChange)=\\\"onPageChange($event)\\\"\\n                                [pageSize]=\\\"selectedLimit\\\"\\n                                [rotate]=\\\"true\\\"\\n                                [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n        <i class=\\\"material-icons\\\">clear</i>\\n    </button>\\n    <div class=\\\"modal-body delete-modal clearfix\\\">\\n        <p>Are you sure you want to delete the user <b>«{{itemTitle}}»?</b></p>\\n        <span>This action cannot be undone </span>\\n\\n        <button type=\\\"button\\\" class=\\\"btn m-btn_no-bg margin-right\\\" (click)=\\\"d('no')\\\">Cancel</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-color\\\" (click)=\\\"c('yes')\\\">Delete it!</button>\\n    </div>\\n</ng-template>\\n\\n<template ngbModalContainer></template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/users/list/list.component.html\n// module id = ./src/app/users/list/list.component.html\n// module chunks = main","import * as _ from 'lodash';\nimport {Component, OnDestroy, OnInit} from '@angular/core';\nimport {User} from \"../models/user\";\nimport {UserService} from \"../services/user.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Observable} from \"rxjs/Observable\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n    selector: 'app-user-all',\n    templateUrl: './list.component.html',\n    styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit, OnDestroy {\n    userList: User[];\n    userSize: number;\n    title = 'Users';\n    itemTitle: string;\n\n    searchFullName = '';\n    searchEmail = '';\n    searchStatus = '1';\n    searchRole = '';\n\n    isShowPagination: boolean = true;\n    statusOptionsSelect = [\n        {\n            value: '',\n            label: 'All'\n        },\n        {\n            value: 1,\n            label: 'Active'\n        },\n        {\n            value: 2,\n            label: 'Blocked'\n        }\n    ];\n    roleOptionsSelect = [\n        {\n            value: '',\n            label: 'All'\n        },\n        {\n            value: 1,\n            label: 'Admin'\n        },\n        {\n            value: 2,\n            label: 'Editor'\n        }\n    ];\n    public limitOptionsSelect = [\n        {\n            value: 5,\n            label: '5'\n        },\n        {\n            value: 10,\n            label: '10'\n        },\n        {\n            value: 20,\n            label: '20'\n        },\n        {\n            value: 50,\n            label: '50'\n        },\n        {\n            value: 100,\n            label: '100'\n        }\n    ];\n    public page = 1;\n\n    public selectedLimit = 10;\n    private _subscribers = [];\n\n    constructor(public usersService: UserService,\n                private modalService: NgbModal,\n                private _route: ActivatedRoute) {\n\n        this._subscribers.push(this._route.data.subscribe((res: any) => {\n            this.userList = _.take(res.data[0].data, this.selectedLimit);\n            this.userSize = res.data[0].count;\n        }));\n    }\n\n    ngOnInit() {\n    }\n\n    ngOnDestroy() {\n        _.forEach(this._subscribers, (value) => {\n            value.unsubscribe();\n        });\n    }\n\n    public onLimitSelected(selected) {\n        this.page = 1;\n        this.userListRequest();\n    }\n\n    /**\n     * Use this method to get current list\n     * @param page\n     */\n    private userListRequest(page?) {\n        this._subscribers.push(this.usersService.getList(this.buildListResponseObject(page))\n            .subscribe(\n                (res: { data: any, count: number }) => {\n                    this.userList = res.data;\n                    this.userSize = Number(res.count);\n                },\n                (err) => {\n\n                }\n            ));\n    }\n\n    /**\n     * Use this method to prepare request object for list. Sets limits, pagination, etc.\n     * @param page\n     * @returns {{query: any, page: (any|number), limit: number, sort: string, order: number, filter: string}}\n     */\n    private buildListResponseObject(page?) {\n        return {\n            page: page || this.page,\n            limit: this.selectedLimit,\n            status: this.searchStatus,\n            email: this.searchEmail,\n            fullName: this.searchFullName,\n            role: this.searchRole,\n        }\n    }\n\n    public onPageChange(event) {\n        this.userListRequest(event);\n        this.userListRequest(event);\n    }\n\n    public onBlock(event, context, user: User) {\n        event.preventDefault();\n        this.itemTitle = user.firstName + ' ' + user.secondName;\n        this.modalService.open(context).result.then((result) => {\n            this._subscribers.push(Observable.concat(\n                this.usersService.blockById(user.id),\n                this.usersService.getList(this.buildListResponseObject())\n            ).subscribe(\n                (res: { data: any, count: number }) => {\n                    if (res) {\n                        this.userList = res.data;\n                        this.userSize = Number(res.count);\n                    }\n                },\n                (err) => {\n\n                }))\n        });\n    }\n\n    public applyFilters(event) {\n        event.preventDefault();\n        this.userListRequest();\n    }\n\n    public getRoleLabelByRole(role) {\n        //todo find in roleOptionsSelect\n        let label = 'not set';\n        if (role == 1) {\n            label = 'admin';\n        }\n        if (role == 2) {\n            label = 'editor';\n        }\n        return label;\n    }\n\n    public getlabelByStatus(status) {\n        //todo find in OptionsSelect\n        let label = 'not set';\n        if (status == 1) {\n            label = 'Active';\n        }\n        if (status == 2) {\n            label = 'Not active';\n        }\n        return label;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/users/list/list.component.ts","import {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from \"@angular/router\";\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs/add/observable/of\";\nimport {UserService} from \"../services/user.service\";\n\n@Injectable()\nexport class ListResolver implements Resolve<any> {\n    constructor(private userService: UserService) {\n\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\n        let reqObj = {\n            page: 1,\n            limit: 10,\n            status: 1,\n            // sort: 'id',\n            // order: 1\n        };\n        return Observable.forkJoin(\n            this.userService.getList(reqObj),\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/users/list/list.resolver.ts","import {Injectable} from \"@angular/core\";\nimport {User} from \"../models/user\";\nimport {AuthService} from \"../../authentication/services/auth.service\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {Observable} from \"rxjs/Observable\";\nimport {ListRequest} from \"../../shared/models/list-request.model\";\nimport {ListRequestService} from \"../../shared/list-request.service\";\nimport {ToastrService} from \"../../shared/toastr.service\";\nimport {ErrorHandler} from \"../../shared/error-handler.service\";\n\n@Injectable()\nexport class UserService {\n\n    constructor(private http: HttpClient,\n                private authService: AuthService,\n                private errorHandler: ErrorHandler) {\n    }\n\n\n    headers = new HttpHeaders()\n        .set('Authorization', 'Bearer ' + this.authService.getAuthToken());\n\n\n    public getList(resObj: ListRequest = {}): Observable<{}> {\n        return this.http.get('/v1/users?' + ListRequestService.parseRequestObject(resObj), {headers: this.headers})\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n\n    public blockById(id: number): Observable<{}> {\n        return this.http.get('/v1/users/block/' + id, {headers: this.headers})\n            .do(() => ToastrService.success(\"\", \"User was blocked\"))\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n\n\n    public create(user): Observable<{}> {\n        return this.http.post('/v1/users', user, {headers: this.headers})\n            .do(() => ToastrService.success(\"\", \"User was created\"))\n            .catch((err, caught) => this.errorHandler.handle(err, caught));\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/users/services/user.service.ts","module.exports = \".form-add-user strong {\\n    font-weight: bold;\\n    display: block;\\n}\\n\\n.form-add-user select {\\n    width: 200px;\\n    margin-bottom: 10px;\\n}\\n\\n.form-add-user input {\\n    padding: 3px 5px;\\n    outline: none;\\n    width: 200px;\\n    border-radius: 4px;\\n}\\n\\ninput.ng-invalid {\\n    border: 2px solid #f00;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/users/update/update.component.css\n// module id = ./src/app/users/update/update.component.css\n// module chunks = main","module.exports = \"<div class=\\\"table-wrapper\\\">\\n    <div class=\\\"wrap-header\\\"></div>\\n    <div class=\\\"wrap-tmain\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header card-success card-inverse\\\">\\n                <span class=\\\"card-title\\\">Create company</span>\\n            </div>\\n            <div class=\\\"card-block\\\">\\n                <form novalidate [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit(form)\\\">\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"inputFirstName\\\">First Name</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" formControlName=\\\"firstName\\\" id=\\\"inputFirstName\\\"\\n                                   placeholder=\\\"First Name\\\" type=\\\"text\\\">\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"form.get('firstName').hasError('required')\\\">First Name is\\n                                required</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"inputSecondName\\\">Second\\n                            Name</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" formControlName=\\\"secondName\\\" id=\\\"inputSecondName\\\"\\n                                   placeholder=\\\"Second Name\\\" type=\\\"text\\\">\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"form.get('secondName').hasError('required')\\\">Second Name is\\n                                required</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"inputEmail\\\">Email</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input class=\\\"form-control underline\\\" formControlName=\\\"email\\\" id=\\\"inputEmail\\\"\\n                                   placeholder=\\\"Email\\\" type=\\\"text\\\">\\n                            <p class=\\\"error_message\\\" *ngIf=\\\"form.get('email').hasError('required')\\\">Email is\\n                                required</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"inputUsertype\\\">User type</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <select class=\\\"form-control\\\" formControlName=\\\"type\\\" id=\\\"inputUsertype\\\">\\n                                <option value=\\\"admin\\\">Admin</option>\\n                                <option value=\\\"editor\\\">Editor</option>\\n                            </select>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-2 form-control-label text-xs-right\\\" for=\\\"inputStatus\\\">Status</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <select class=\\\"form-control\\\" formControlName=\\\"status\\\" id=\\\"inputStatus\\\">\\n                                <option value=\\\"1\\\">Active</option>\\n                                <option value=\\\"0\\\">Deleted</option>\\n                            </select>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n                            <button [disabled]=\\\"!form.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary btn-bordered\\\">Save\\n                            </button>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/users/update/update.component.html\n// module id = ./src/app/users/update/update.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport 'rxjs/add/operator/switchMap';\nimport {CreateComponent} from \"../create/create.component\";\n\n@Component({\n    selector: 'app-user-update',\n    templateUrl: './update.component.html',\n    styleUrls: ['./update.component.css']\n})\nexport class UpdateComponent extends CreateComponent {\n\n    ngOnInit() {\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/users/update/update.component.ts","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\n\nimport {RouterModule} from \"@angular/router\";\nimport {usersRoutes} from \"./users.routing\";\nimport {ListComponent} from \"./list/list.component\";\nimport {CreateComponent} from \"./create/create.component\";\nimport {UpdateComponent} from \"./update/update.component\";\nimport {UserService} from \"./services/user.service\";\nimport {ListResolver} from \"./list/list.resolver\";\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {ModalModule} from \"ngx-bootstrap\";\nimport {CurrencyMaskModule} from \"ng2-currency-mask\";\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        CurrencyMaskModule,\n        BrowserModule,\n        ReactiveFormsModule,\n        NgbModule.forRoot(),\n        ModalModule.forRoot(),\n        RouterModule.forChild(usersRoutes),\n    ],\n    declarations: [\n        ListComponent,\n        CreateComponent,\n        UpdateComponent\n    ],\n    providers: [\n        UserService,\n        ListResolver\n    ]\n})\nexport class UsersModule {\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/users/users.module.ts","import {Routes} from \"@angular/router\";\n\nimport {RootComponent} from \"../core/root.component\";\nimport {AppResolver} from \"../app.resolver\";\nimport {ListComponent} from \"./list/list.component\";\nimport {CreateComponent} from \"./create/create.component\";\nimport {UpdateComponent} from \"./update/update.component\";\nimport {ListResolver} from \"./list/list.resolver\";\n\nexport const usersRoutes: Routes = [{\n    path: 'users',\n    component: RootComponent,\n    canActivate: [AppResolver],\n    children: [\n        {\n            path: '',\n            component: ListComponent,\n            resolve: {\n                'data': ListResolver\n            }\n        },\n        {\n            path: 'create', component: CreateComponent,\n            // resolve: {\n            //     'data': CreateResolver\n            // }\n        },\n        {\n            path: 'update/:id', component: UpdateComponent,\n            // resolve: {\n            //     'data': UpdateResolver\n            // }\n        },\n\n    ]\n},\n\n];\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/users/users.routing.ts","import {Component, Input, forwardRef} from \"@angular/core\";\nimport {FormControl, NG_VALIDATORS} from \"@angular/forms\";\nimport {CustomValidators} from \"./validators.service\";\n\n@Component({\n    selector: 'validator-messages',\n    template: `\n        <div class=\"ui pointing red basic label\" *ngIf=\"errorMessage !== null\">{{errorMessage}}</div>`,\n    providers: [\n        {provide: NG_VALIDATORS, useExisting: forwardRef(() => ValidatorsMessagesComponent), multi: true}\n    ]\n})\nexport class ValidatorsMessagesComponent {\n    @Input() field: FormControl;\n    @Input() errorType: string;\n\n    constructor() {\n    }\n\n    get errorMessage() {\n        if (this.errorType) {\n            if (this.field.errors.hasOwnProperty(this.errorType) && (this.field.dirty || this.field.touched)) {\n                return CustomValidators.getValidatorErrorMessage(this.errorType, this.field.errors[this.errorType]);\n            }\n        }\n        for (let propertyName in this.field.errors) {\n            if (this.field.errors.hasOwnProperty(propertyName) && (this.field.dirty || this.field.touched)) {\n                return CustomValidators.getValidatorErrorMessage(propertyName, this.field.errors[propertyName]);\n            }\n        }\n        return null;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/validators/validators-messages.component.ts","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {CustomValidators} from \"./validators.service\";\nimport {ValidatorsMessagesComponent} from \"./validators-messages.component\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    exports: [ValidatorsMessagesComponent],\n    declarations: [\n        ValidatorsMessagesComponent\n    ],\n    providers: [\n        CustomValidators,\n    ]\n})\nexport class ValidatorsModule {\n    constructor() {\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/validators/validators.module.ts","import * as _ from 'lodash';\nimport {ValidatorFn, AbstractControl} from \"@angular/forms\";\nimport {Injectable} from \"@angular/core\";\n\n@Injectable()\nexport class CustomValidators {\n    constructor() {\n    }\n\n    public static getValidatorErrorMessage(validatorName: string, validatorValue?: any) {\n        let config = _.merge({\n            'required': 'Required',\n            'minlength': `Minimum length ${validatorValue.requiredLength}`,\n            'maxlength': `Maximum length ${validatorValue.requiredLength}`,\n            'isEmptyPattern': 'Can`t be empty',\n            'stringPattern': 'Can contain only letters, numbers, spaces and `-`symbol.',\n            'numberPattern': 'Can contain only numbers',\n            'emailPattern': 'Invalid email',\n            'passwordPattern': 'Password must have at least one digit, lower and upper case letter',\n            'nospacePattern': 'No whitespace allowed',\n            'passwordEqualPattern': 'Confirm password and password fields must be equal',\n        });\n\n        return config[validatorName];\n    }\n\n    public static isEmptyValidator(): ValidatorFn {\n        return (control: AbstractControl): { [key: string]: any } => {\n            if (!(control.dirty || control.touched)) {\n                return null;\n            } else {\n                return !_.isEmpty(control.value) ? null : {'isEmptyPattern': false};\n            }\n        };\n    }\n\n    public static stringPatternValidator(): ValidatorFn {\n        let pattern = /^[A-Za-z0-9 -]+$/u;\n        return (control: AbstractControl): { [key: string]: any } => {\n            if (!(control.dirty || control.touched)) {\n                return null;\n            } else {\n                return pattern.test(control.value) ? null : {'stringPattern': false};\n            }\n        };\n    }\n\n    public static numberPatternValidator(): ValidatorFn {\n        return (control: AbstractControl): { [key: string]: any } => {\n            if (!(control.dirty || control.touched)) {\n                return null;\n            } else {\n                return _.toNumber(+control.value) ? null : {'numberPattern': false};\n            }\n        };\n    }\n\n    public static emailPatternValidator(): ValidatorFn {\n        let pattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return (control: AbstractControl): { [key: string]: any } => {\n            if (!(control.dirty || control.touched)) {\n                return null;\n            } else {\n                return pattern.test(control.value) ? null : {'emailPattern': false};\n            }\n        };\n    };\n\n    public static passwordPatternValidator(): ValidatorFn {\n        let pattern = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])/;\n        return (control: AbstractControl): { [key: string]: any } => {\n            if (!(control.dirty || control.touched)) {\n                return null;\n            } else {\n                return pattern.test(control.value) ? null : {'passwordPattern': false};\n            }\n        };\n    };\n\n    public static nospacePatternValidator(): ValidatorFn {\n        let pattern = /^(?=\\S+$)/;\n        return (control: AbstractControl): { [key: string]: any } => {\n            if (!(control.dirty || control.touched)) {\n                return null;\n            } else {\n                return pattern.test(control.value) ? null : {'nospacePattern': false};\n            }\n        };\n    };\n\n    public static isPasswordEqualValidator(): ValidatorFn {\n        return (control: any): { [key: string]: any } => {\n            if (!(control.dirty || control.touched)) {\n                return null;\n            } else {\n                return control.controls['password'].value == control.controls['password_confirm'].value ? null : {'passwordEqualPattern': false};\n            }\n        };\n    };\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/validators/validators.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}